{
  "Functions": {
    "Achievement": [
      {
        "name": "AddTrackedAchievement",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "name": "CanShowAchievementUI",
        "returns": [
          {
            "name": "canShow",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ClearAchievementComparisonUnit"
      },
      {
        "name": "GetAchievementCategory",
        "arguments": [
          {
            "name": "achievementID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "categoryID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetAchievementComparisonInfo",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "completed",
            "type": "boolean"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetAchievementCriteriaInfo",
        "arguments": [
          {
            "name": "achievementID",
            "type": "number",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "statisticID",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "type",
            "type": "number"
          },
          {
            "name": "completed",
            "type": "boolean"
          },
          {
            "name": "quantity",
            "type": "number"
          },
          {
            "name": "requiredQuantity",
            "type": "number"
          },
          {
            "name": "characterName",
            "type": "string"
          },
          {
            "name": "flags",
            "type": "number"
          },
          {
            "name": "assetID",
            "type": "number"
          },
          {
            "name": "quantityString",
            "type": "string"
          },
          {
            "name": "criteriaID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetAchievementInfo",
        "arguments": [
          {
            "name": "category",
            "type": "number",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "id",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "points",
            "type": "number"
          },
          {
            "name": "completed",
            "type": "boolean"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "flags",
            "type": "number"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "rewardText",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetAchievementInfoFromCriteria",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "points",
            "type": "number"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "flags",
            "type": "number"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "rewardText",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetAchievementLink",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetAchievementNumCriteria",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetAchievementNumRewards",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetAchievementReward",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "points",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCategoryInfo",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "parentID",
            "type": "number"
          },
          {
            "name": "flags",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCategoryList",
        "returns": [
          {
            "name": "categories",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetCategoryNumAchievements",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numItems",
            "type": "number"
          },
          {
            "name": "numCompleted",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetComparisonAchievementPoints",
        "returns": [
          {
            "name": "points",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetComparisonCategoryNumAchievements",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numCompleted",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetComparisonStatistic",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "info",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetLatestCompletedAchievements",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetLatestCompletedComparisonAchievements",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetLatestUpdatedComparisonStats",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetLatestUpdatedStats",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetNextAchievement",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "nextID",
            "type": "number"
          },
          {
            "name": "completed",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetNumComparisonCompletedAchievements",
        "returns": [
          {
            "name": "total",
            "type": "number"
          },
          {
            "name": "completed",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumCompletedAchievements",
        "returns": [
          {
            "name": "total",
            "type": "number"
          },
          {
            "name": "completed",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumTrackedAchievements",
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPreviousAchievement",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "previousID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetStatistic",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "info",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetStatisticsCategoryList",
        "returns": [
          {
            "name": "categories",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetTotalAchievementPoints",
        "returns": [
          {
            "name": "points",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTrackedAchievements",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "IsTrackedAchievement",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isTracked",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "RemoveTrackedAchievement",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetAchievementComparisonUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "success",
            "type": "boolean"
          }
        ]
      }
    ],
    "ActionBar": [
      {
        "name": "ChangeActionBarPage",
        "arguments": [
          {
            "name": "page",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetActionBarPage",
        "returns": [
          {
            "name": "page",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetActionBarToggles",
        "returns": [
          {
            "name": "showBar1",
            "type": "boolean"
          },
          {
            "name": "showBar2",
            "type": "boolean"
          },
          {
            "name": "showBar3",
            "type": "boolean"
          },
          {
            "name": "showBar4",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetBonusBarOffset",
        "returns": [
          {
            "name": "offset",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPossessInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "IsPossessBarVisible",
        "returns": [
          {
            "name": "isVisible",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetActionBarToggles",
        "arguments": [
          {
            "name": "bar1",
            "type": "1nil"
          },
          {
            "name": "bar2",
            "type": "1nil"
          },
          {
            "name": "bar3",
            "type": "1nil"
          },
          {
            "name": "bar4",
            "type": "1nil"
          },
          {
            "name": "alwaysShow",
            "type": "1nil"
          }
        ]
      }
    ],
    "Action": [
      {
        "name": "ActionHasRange",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "hasRange",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CastPetAction",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "GetActionAutocast",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "autocastAllowed",
            "type": "boolean"
          },
          {
            "name": "autocastEnabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetActionCooldown",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetActionCount",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetActionInfo",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "subType",
            "type": "string"
          },
          {
            "name": "spellID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetActionText",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetActionTexture",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetPetActionCooldown",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPetActionInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "subtext",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "isToken",
            "type": "boolean"
          },
          {
            "name": "isActive",
            "type": "boolean"
          },
          {
            "name": "autoCastAllowed",
            "type": "boolean"
          },
          {
            "name": "autoCastEnabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetPetActionSlotUsable",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "usable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetPetActionsUsable",
        "returns": [
          {
            "name": "petActionsUsable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "HasAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "hasAction",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsActionInRange",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "inRange",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsAttackAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isAttack",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsAutoRepeatAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isRepeating",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsConsumableAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isConsumable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsCurrentAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isCurrent",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsEquippedAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isEquipped",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsStackableAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isStackable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsUsableAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isUsable",
            "type": "boolean"
          },
          {
            "name": "notEnoughMana",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PickupAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupPetAction",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "PlaceAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "TogglePetAutocast",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "UseAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "target",
            "type": "string"
          },
          {
            "name": "button",
            "type": "string",
            "optional": true
          }
        ]
      }
    ],
    "Addon-related": [
      {
        "name": "DisableAddOn",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "DisableAllAddOns"
      },
      {
        "name": "EnableAddOn",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "EnableAllAddOns"
      },
      {
        "name": "GetAddOnDependencies",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetAddOnInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "title",
            "type": "string"
          },
          {
            "name": "notes",
            "type": "string"
          },
          {
            "name": "enabled",
            "type": "boolean"
          },
          {
            "name": "loadable",
            "type": "boolean"
          },
          {
            "name": "reason",
            "type": "string"
          },
          {
            "name": "security",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetAddOnMetadata",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "variable",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "data",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetNumAddOns",
        "returns": [
          {
            "name": "numAddons",
            "type": "number"
          }
        ]
      },
      {
        "name": "InterfaceOptionsFrame_OpenToCategory",
        "arguments": [
          {
            "name": "panelName",
            "type": "string",
            "optional": true
          },
          {
            "name": "panel",
            "type": "table",
            "optional": true
          }
        ]
      },
      {
        "name": "InterfaceOptions_AddCategory",
        "arguments": [
          {
            "name": "panel",
            "type": "table"
          }
        ]
      },
      {
        "name": "IsAddOnLoadOnDemand",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isLod",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsAddOnLoaded",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "loaded",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "LoadAddOn",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "loaded",
            "type": "number"
          },
          {
            "name": "reason",
            "type": "string"
          }
        ]
      },
      {
        "name": "ResetDisabledAddOns"
      },
      {
        "name": "SendAddonMessage",
        "arguments": [
          {
            "name": "prefix",
            "type": "string"
          },
          {
            "name": "message",
            "type": "string"
          },
          {
            "name": "type",
            "type": "string",
            "optional": true
          },
          {
            "name": "target",
            "type": "string",
            "optional": true
          }
        ]
      }
    ],
    "Arena": [
      {
        "name": "AcceptArenaTeam"
      },
      {
        "name": "ArenaTeamDisband",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          }
        ]
      },
      {
        "name": "ArenaTeamInviteByName",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "ArenaTeamLeave",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          }
        ]
      },
      {
        "name": "ArenaTeamRoster",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          }
        ]
      },
      {
        "name": "ArenaTeamSetLeaderByName",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "ArenaTeamUninviteByName",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "ArenaTeam_GetTeamSizeID",
        "arguments": [
          {
            "name": "teamSize",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "teamID",
            "type": "number"
          }
        ]
      },
      {
        "name": "CloseArenaTeamRoster"
      },
      {
        "name": "DeclineArenaTeam"
      },
      {
        "name": "GetArenaTeam",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "teamName",
            "type": "string"
          },
          {
            "name": "teamSize",
            "type": "number"
          },
          {
            "name": "teamRating",
            "type": "number"
          },
          {
            "name": "teamPlayed",
            "type": "number"
          },
          {
            "name": "teamWins",
            "type": "number"
          },
          {
            "name": "seasonTeamPlayed",
            "type": "number"
          },
          {
            "name": "seasonTeamWins",
            "type": "number"
          },
          {
            "name": "playerPlayed",
            "type": "number"
          },
          {
            "name": "seasonPlayerPlayed",
            "type": "number"
          },
          {
            "name": "teamRank",
            "type": "number"
          },
          {
            "name": "playerRating",
            "type": "number"
          },
          {
            "name": "bg_red",
            "type": "number"
          },
          {
            "name": "bg_green",
            "type": "number"
          },
          {
            "name": "bg_blue",
            "type": "number"
          },
          {
            "name": "emblem",
            "type": "number"
          },
          {
            "name": "emblem_red",
            "type": "number"
          },
          {
            "name": "emblem_green",
            "type": "number"
          },
          {
            "name": "emblem_blue",
            "type": "number"
          },
          {
            "name": "border",
            "type": "number"
          },
          {
            "name": "border_red",
            "type": "number"
          },
          {
            "name": "border_green",
            "type": "number"
          },
          {
            "name": "border_blue",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetArenaTeamGdfInfo"
      },
      {
        "name": "GetArenaTeamRosterInfo",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "number"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "class",
            "type": "string"
          },
          {
            "name": "online",
            "type": "boolean"
          },
          {
            "name": "played",
            "type": "number"
          },
          {
            "name": "win",
            "type": "number"
          },
          {
            "name": "seasonPlayed",
            "type": "number"
          },
          {
            "name": "seasonWin",
            "type": "number"
          },
          {
            "name": "rating",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetArenaTeamRosterSelection",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetArenaTeamRosterShowOffline",
        "returns": [
          {
            "name": "showOffline",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetCurrentArenaSeason",
        "returns": [
          {
            "name": "season",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMaxArenaCurrency",
        "returns": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumArenaOpponents",
        "returns": [
          {
            "name": "numOpponents",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumArenaTeamMembers",
        "arguments": [
          {
            "name": "teamindex",
            "type": "number"
          },
          {
            "name": "showOffline",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "numMembers",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPreviousArenaSeason",
        "returns": [
          {
            "name": "season",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsActiveBattlefieldArena",
        "returns": [
          {
            "name": "isArena",
            "type": "boolean"
          },
          {
            "name": "isRegistered",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsArenaTeamCaptain",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isCaptain",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsInArenaTeam",
        "returns": [
          {
            "name": "isInTeam",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetArenaTeamRosterSelection",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetArenaTeamRosterShowOffline",
        "arguments": [
          {
            "name": "enable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SortArenaTeamRoster",
        "arguments": [
          {
            "name": "sortType",
            "type": "string"
          }
        ]
      }
    ],
    "Auction": [
      {
        "name": "CalculateAuctionDeposit",
        "arguments": [
          {
            "name": "runTime",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "deposit",
            "type": "number"
          }
        ]
      },
      {
        "name": "CanCancelAuction",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canCancel",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanSendAuctionQuery",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "canQuery",
            "type": "boolean"
          },
          {
            "name": "canMassQuery",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CancelAuction",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canCancel",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ClickAuctionSellItemButton"
      },
      {
        "name": "CloseAuctionHouse"
      },
      {
        "name": "GetAuctionHouseDepositRate",
        "returns": [
          {
            "name": "rate",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetAuctionInvTypes",
        "arguments": [
          {
            "name": "classIndex",
            "type": "number"
          },
          {
            "name": "subClassIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "token",
            "type": "string"
          },
          {
            "name": "display",
            "type": "boolean"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetAuctionItemClasses",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetAuctionItemInfo",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          },
          {
            "name": "canUse",
            "type": "1nil"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "minBid",
            "type": "number"
          },
          {
            "name": "minIncrement",
            "type": "number"
          },
          {
            "name": "buyoutPrice",
            "type": "number"
          },
          {
            "name": "bidAmount",
            "type": "number"
          },
          {
            "name": "highestBidder",
            "type": "1nil"
          },
          {
            "name": "owner",
            "type": "string"
          },
          {
            "name": "sold",
            "type": "1nil"
          }
        ]
      },
      {
        "name": "GetAuctionItemLink",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetAuctionItemSubClasses",
        "arguments": [
          {
            "name": "classIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetAuctionItemTimeLeft",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "duration",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetAuctionSellItemInfo",
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          },
          {
            "name": "canUse",
            "type": "1nil"
          },
          {
            "name": "price",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetAuctionSort",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "criterion",
            "type": "string"
          },
          {
            "name": "reverse",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetBidderAuctionItems"
      },
      {
        "name": "GetInboxInvoiceInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "invoiceType",
            "type": "string"
          },
          {
            "name": "itemName",
            "type": "string"
          },
          {
            "name": "playerName",
            "type": "string"
          },
          {
            "name": "bid",
            "type": "number"
          },
          {
            "name": "buyout",
            "type": "number"
          },
          {
            "name": "deposit",
            "type": "number"
          },
          {
            "name": "consignment",
            "type": "number"
          },
          {
            "name": "moneyDelay",
            "type": "number"
          },
          {
            "name": "etaHour",
            "type": "number"
          },
          {
            "name": "etaMin",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumAuctionItems",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "numBatchAuctions",
            "type": "number"
          },
          {
            "name": "totalAuctions",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetOwnerAuctionItems"
      },
      {
        "name": "GetSelectedAuctionItem",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsAuctionSortReversed",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          },
          {
            "name": "sort",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isReversed",
            "type": "boolean"
          },
          {
            "name": "isSorted",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PlaceAuctionBid",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "bid",
            "type": "number"
          }
        ]
      },
      {
        "name": "QueryAuctionItems",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "minLevel",
            "type": "number"
          },
          {
            "name": "maxLevel",
            "type": "number"
          },
          {
            "name": "invTypeIndex",
            "type": "number"
          },
          {
            "name": "classIndex",
            "type": "number"
          },
          {
            "name": "subClassIndex",
            "type": "number"
          },
          {
            "name": "page",
            "type": "number"
          },
          {
            "name": "isUsable",
            "type": "boolean"
          },
          {
            "name": "minQuality",
            "type": "itemQuality"
          },
          {
            "name": "getAll",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "SetSelectedAuctionItem",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SortAuctionApplySort",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          }
        ]
      },
      {
        "name": "SortAuctionClearSort",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          }
        ]
      },
      {
        "name": "SortAuctionItems",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "sort",
            "type": "number"
          }
        ]
      },
      {
        "name": "SortAuctionSetSort",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          },
          {
            "name": "sort",
            "type": "number"
          },
          {
            "name": "reversed",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "StartAuction",
        "arguments": [
          {
            "name": "minBid",
            "type": "number"
          },
          {
            "name": "buyoutPrice",
            "type": "number"
          },
          {
            "name": "runTime",
            "type": "number"
          },
          {
            "name": "stackSize",
            "type": "number"
          },
          {
            "name": "numStacks",
            "type": "number"
          }
        ]
      }
    ],
    "Bank": [
      {
        "name": "BankButtonIDToInvSlotID",
        "arguments": [
          {
            "name": "buttonID",
            "type": "number"
          },
          {
            "name": "isBag",
            "type": "boolean",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "inventoryID",
            "type": "number"
          }
        ]
      },
      {
        "name": "CloseBankFrame"
      },
      {
        "name": "EquipmentManager_UnpackLocation",
        "arguments": [
          {
            "name": "location",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "player",
            "type": "boolean"
          },
          {
            "name": "bank",
            "type": "boolean"
          },
          {
            "name": "bags",
            "type": "boolean"
          },
          {
            "name": "location or slot",
            "type": "number"
          },
          {
            "name": "bag",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBankSlotCost",
        "returns": [
          {
            "name": "cost",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumBankSlots",
        "returns": [
          {
            "name": "numSlots",
            "type": "number"
          },
          {
            "name": "isFull",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PurchaseSlot"
      }
    ],
    "Barbershop": [
      {
        "name": "ApplyBarberShopStyle"
      },
      {
        "name": "BarberShopReset"
      },
      {
        "name": "CanAlterSkin",
        "returns": [
          {
            "name": "canAlter",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CancelBarberShop"
      },
      {
        "name": "GetBarberShopStyleInfo",
        "arguments": [
          {
            "name": "styleIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "unused",
            "type": "string"
          },
          {
            "name": "cost",
            "type": "number"
          },
          {
            "name": "isCurrent",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetBarberShopTotalCost",
        "returns": [
          {
            "name": "cost",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetFacialHairCustomization",
        "returns": [
          {
            "name": "token",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetHairCustomization",
        "returns": [
          {
            "name": "token",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetNextBarberShopStyle",
        "arguments": [
          {
            "name": "styleIndex",
            "type": "number"
          },
          {
            "name": "reverse",
            "type": "boolean",
            "optional": true
          }
        ]
      }
    ],
    "Battle.net": [
      {
        "name": "BNGetFriendInfo",
        "arguments": [
          {
            "name": "friendIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "presenceID",
            "type": "number"
          },
          {
            "name": "givenName",
            "type": "string"
          },
          {
            "name": "surname",
            "type": "string"
          },
          {
            "name": "toonName",
            "type": "string"
          },
          {
            "name": "toonID",
            "type": "number"
          },
          {
            "name": "client",
            "type": "string"
          },
          {
            "name": "isOnline",
            "type": "boolean"
          },
          {
            "name": "lastOnline",
            "type": "number"
          },
          {
            "name": "isAFK",
            "type": "boolean"
          },
          {
            "name": "isDND",
            "type": "boolean"
          },
          {
            "name": "messageText",
            "type": "string"
          },
          {
            "name": "noteText",
            "type": "string"
          },
          {
            "name": "isFriend",
            "type": "boolean"
          },
          {
            "name": "unknown",
            "type": "number"
          }
        ]
      },
      {
        "name": "BNGetFriendInfoByID",
        "arguments": [
          {
            "name": "presenceID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "presenceID",
            "type": "number"
          },
          {
            "name": "givenName",
            "type": "string"
          },
          {
            "name": "surname",
            "type": "string"
          },
          {
            "name": "toonName",
            "type": "string"
          },
          {
            "name": "toonID",
            "type": "number"
          },
          {
            "name": "client",
            "type": "string"
          },
          {
            "name": "isOnline",
            "type": "boolean"
          },
          {
            "name": "lastOnline",
            "type": "number"
          },
          {
            "name": "isAFK",
            "type": "boolean"
          },
          {
            "name": "isDND",
            "type": "boolean"
          },
          {
            "name": "messageText",
            "type": "string"
          },
          {
            "name": "noteText",
            "type": "string"
          },
          {
            "name": "isFriend",
            "type": "boolean"
          },
          {
            "name": "unknown",
            "type": "number"
          }
        ]
      },
      {
        "name": "BNGetFriendToonInfo",
        "arguments": [
          {
            "name": "friendIndex",
            "type": "number"
          },
          {
            "name": "toonIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "unknown",
            "type": "boolean"
          },
          {
            "name": "toonName",
            "type": "string"
          },
          {
            "name": "client",
            "type": "string"
          },
          {
            "name": "realmName",
            "type": "string"
          },
          {
            "name": "faction",
            "type": "number"
          },
          {
            "name": "race",
            "type": "string"
          },
          {
            "name": "class",
            "type": "string"
          },
          {
            "name": "unknown",
            "type": "string"
          },
          {
            "name": "zoneName",
            "type": "string"
          },
          {
            "name": "level",
            "type": "string"
          },
          {
            "name": "gameText",
            "type": "string"
          },
          {
            "name": "broadcastText",
            "type": "string"
          },
          {
            "name": "broadcastTime",
            "type": "string"
          }
        ]
      },
      {
        "name": "BNGetInfo",
        "returns": [
          {
            "name": "unknown",
            "type": "number"
          },
          {
            "name": "unknown",
            "type": "number"
          },
          {
            "name": "broadcastText",
            "type": "string"
          },
          {
            "name": "bnetAFK",
            "type": "boolean"
          },
          {
            "name": "bnetDND",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "BNGetMatureLanguageFilter",
        "returns": [
          {
            "name": "isEnabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "BNGetNumFriendToons",
        "arguments": [
          {
            "name": "friendIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numToons",
            "type": "number"
          }
        ]
      },
      {
        "name": "BNGetNumFriends",
        "returns": [
          {
            "name": "totalBNet",
            "type": "number"
          },
          {
            "name": "numBNetOnline",
            "type": "number"
          }
        ]
      },
      {
        "name": "BNGetSelectedFriend",
        "returns": [
          {
            "name": "friendIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "BNGetToonInfo",
        "arguments": [
          {
            "name": "presenceID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "unknown",
            "type": "boolean"
          },
          {
            "name": "toonName",
            "type": "string"
          },
          {
            "name": "client",
            "type": "string"
          },
          {
            "name": "realmName",
            "type": "string"
          },
          {
            "name": "realmID",
            "type": "number"
          },
          {
            "name": "faction",
            "type": "number"
          },
          {
            "name": "race",
            "type": "string"
          },
          {
            "name": "class",
            "type": "string"
          },
          {
            "name": "unknown",
            "type": "string"
          },
          {
            "name": "zoneName",
            "type": "string"
          },
          {
            "name": "level",
            "type": "string"
          },
          {
            "name": "gameText",
            "type": "string"
          },
          {
            "name": "broadcastText",
            "type": "string"
          },
          {
            "name": "broadcastTime",
            "type": "string"
          }
        ]
      },
      {
        "name": "BNSetCustomMessage",
        "arguments": [
          {
            "name": "broadcastText",
            "type": "string"
          }
        ]
      },
      {
        "name": "BNSetFriendNote",
        "arguments": [
          {
            "name": "presenceID",
            "type": "number"
          },
          {
            "name": "note",
            "type": "string"
          }
        ]
      },
      {
        "name": "BNSetMatureLanguageFilter",
        "arguments": [
          {
            "name": "enabled",
            "type": "boolean"
          }
        ]
      }
    ],
    "Battlefield": [
      {
        "name": "AcceptAreaSpiritHeal"
      },
      {
        "name": "AcceptBattlefieldPort",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "accept",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanJoinBattlefieldAsGroup",
        "returns": [
          {
            "name": "canGroupJoin",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CancelAreaSpiritHeal"
      },
      {
        "name": "CloseBattlefield"
      },
      {
        "name": "GetAreaSpiritHealerTime",
        "returns": [
          {
            "name": "timeleft",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBattlefieldArenaFaction"
      },
      {
        "name": "GetBattlefieldEstimatedWaitTime",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "waitTime",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBattlefieldFlagPosition",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "flagX",
            "type": "number"
          },
          {
            "name": "flagY",
            "type": "number"
          },
          {
            "name": "flagToken",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetBattlefieldInstanceExpiration",
        "returns": [
          {
            "name": "timeLeft",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBattlefieldInstanceInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "instanceID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBattlefieldInstanceRunTime",
        "returns": [
          {
            "name": "time",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBattlefieldMapIconScale",
        "returns": [
          {
            "name": "scale",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBattlefieldPortExpiration",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "expiration",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBattlefieldPosition",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "unitX",
            "type": "number"
          },
          {
            "name": "unitY",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetBattlefieldScore",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "killingBlows",
            "type": "number"
          },
          {
            "name": "honorableKills",
            "type": "number"
          },
          {
            "name": "deaths",
            "type": "number"
          },
          {
            "name": "honorGained",
            "type": "number"
          },
          {
            "name": "faction",
            "type": "number"
          },
          {
            "name": "race",
            "type": "string"
          },
          {
            "name": "class",
            "type": "string"
          },
          {
            "name": "classToken",
            "type": "string"
          },
          {
            "name": "damageDone",
            "type": "number"
          },
          {
            "name": "healingDone",
            "type": "number"
          },
          {
            "name": "bgRating",
            "type": "number"
          },
          {
            "name": "ratingChange",
            "type": "number"
          },
          {
            "name": "preMatchMMR",
            "type": "number"
          },
          {
            "name": "mmrChange",
            "type": "number"
          },
          {
            "name": "talentSpec",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetBattlefieldStatData",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "statIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "columnData",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBattlefieldStatInfo",
        "arguments": [
          {
            "name": "statIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "tooltip",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetBattlefieldStatus",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "status",
            "type": "string"
          },
          {
            "name": "mapName",
            "type": "string"
          },
          {
            "name": "instanceID",
            "type": "number"
          },
          {
            "name": "bracketMin",
            "type": "number"
          },
          {
            "name": "bracketMax",
            "type": "number"
          },
          {
            "name": "teamSize",
            "type": "number"
          },
          {
            "name": "registeredMatch",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetBattlefieldTeamInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "teamName",
            "type": "string"
          },
          {
            "name": "teamRating",
            "type": "number"
          },
          {
            "name": "newTeamRating",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBattlefieldTimeWaited",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "timeInQueue",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBattlefieldVehicleInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "vehicleX",
            "type": "number"
          },
          {
            "name": "vehicleY",
            "type": "number"
          },
          {
            "name": "unitName",
            "type": "string"
          },
          {
            "name": "isPossessed",
            "type": "boolean"
          },
          {
            "name": "vehicleType",
            "type": "string"
          },
          {
            "name": "orientation",
            "type": "number"
          },
          {
            "name": "isPlayer",
            "type": "boolean"
          },
          {
            "name": "isAlive",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetBattlefieldWinner",
        "returns": [
          {
            "name": "winner",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBattlegroundInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "canEnter",
            "type": "boolean"
          },
          {
            "name": "isHoliday",
            "type": "boolean"
          },
          {
            "name": "minlevel",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumBattlefieldFlagPositions",
        "returns": [
          {
            "name": "numFlags",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumBattlefieldPositions",
        "returns": [
          {
            "name": "numTeamMembers",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumBattlefieldScores",
        "returns": [
          {
            "name": "numScores",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumBattlefieldStats",
        "returns": [
          {
            "name": "numStats",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumBattlefieldVehicles",
        "returns": [
          {
            "name": "numVehicles",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumBattlefields",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "numBattlefields",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumBattlegroundTypes",
        "returns": [
          {
            "name": "numBattlegrounds",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRealNumPartyMembers",
        "returns": [
          {
            "name": "numMembers",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRealNumRaidMembers",
        "returns": [
          {
            "name": "numMembers",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSelectedBattlefield",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsActiveBattlefieldArena",
        "returns": [
          {
            "name": "isArena",
            "type": "boolean"
          },
          {
            "name": "isRegistered",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsRealPartyLeader",
        "returns": [
          {
            "name": "isLeader",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsRealRaidLeader",
        "returns": [
          {
            "name": "isLeader",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "JoinBattlefield",
        "returns": [
          {
            "name": "canGroupJoin",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "LeaveBattlefield"
      },
      {
        "name": "PlayerIsPVPInactive",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isInactive",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ReportPlayerIsPVPAFK",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "RequestBattlefieldPositions"
      },
      {
        "name": "RequestBattlefieldScoreData"
      },
      {
        "name": "RequestBattlegroundInstanceInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetBattlefieldScoreFaction",
        "arguments": [
          {
            "name": "faction",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetSelectedBattlefield",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "ShowMiniWorldMapArrowFrame",
        "arguments": [
          {
            "name": "show",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SortBattlefieldScoreData",
        "arguments": [
          {
            "name": "sortType",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitInBattleground",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "raidNum",
            "type": "number"
          }
        ]
      }
    ],
    "Blizzard_internal": [
      {
        "name": "AppendToFile"
      },
      {
        "name": "CreateMiniWorldMapArrowFrame"
      },
      {
        "name": "CreateWorldMapArrowFrame"
      },
      {
        "name": "DeleteFile"
      },
      {
        "name": "DetectWowMouse"
      },
      {
        "name": "GMRequestPlayerInfo"
      },
      {
        "name": "GetDebugStats"
      },
      {
        "name": "GetDebugZoneMap"
      },
      {
        "name": "GetGMStatus"
      },
      {
        "name": "GetMapDebugObjectInfo"
      },
      {
        "name": "GetNumMapDebugObjects"
      },
      {
        "name": "HasDebugZoneMap"
      },
      {
        "name": "IsDebugBuild"
      },
      {
        "name": "PlayDance"
      },
      {
        "name": "PositionMiniWorldMapArrowFrame"
      },
      {
        "name": "PositionWorldMapArrowFrame"
      },
      {
        "name": "ReadFile"
      },
      {
        "name": "ResetPerformanceValues"
      },
      {
        "name": "SetChannelWatch"
      },
      {
        "name": "SetConsoleKey"
      },
      {
        "name": "SetLayoutMode"
      },
      {
        "name": "ShowWorldMapArrowFrame"
      },
      {
        "name": "TargetDirectionEnemy"
      },
      {
        "name": "TargetDirectionFinished"
      },
      {
        "name": "TargetDirectionFriend"
      },
      {
        "name": "TeleportToDebugObject"
      },
      {
        "name": "ToggleCollision"
      },
      {
        "name": "ToggleCollisionDisplay"
      },
      {
        "name": "TogglePerformanceDisplay"
      },
      {
        "name": "TogglePerformancePause"
      },
      {
        "name": "TogglePerformanceValues"
      },
      {
        "name": "TogglePlayerBounds"
      },
      {
        "name": "TogglePortals"
      },
      {
        "name": "ToggleTris"
      },
      {
        "name": "UpdateWorldMapArrowFrames"
      },
      {
        "name": "debugbreak"
      },
      {
        "name": "debugdump"
      },
      {
        "name": "debuginfo"
      },
      {
        "name": "debugload"
      },
      {
        "name": "debugprint"
      },
      {
        "name": "debugtimestamp"
      },
      {
        "name": "newproxy",
        "arguments": [
          {
            "name": "boolean",
            "type": "boolean",
            "optional": true
          },
          {
            "name": "userdata",
            "type": "userdata",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "userdata",
            "type": "userdata"
          }
        ]
      }
    ],
    "Buff": [
      {
        "name": "CancelItemTempEnchantment",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "CancelShapeshiftForm"
      },
      {
        "name": "CancelUnitBuff",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "rank",
            "type": "string",
            "optional": true
          },
          {
            "name": "filter",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "GetWeaponEnchantInfo",
        "returns": [
          {
            "name": "hasMainHandEnchant",
            "type": "boolean"
          },
          {
            "name": "mainHandExpiration",
            "type": "number"
          },
          {
            "name": "mainHandCharges",
            "type": "number"
          },
          {
            "name": "hasOffHandEnchant",
            "type": "boolean"
          },
          {
            "name": "offHandExpiration",
            "type": "number"
          },
          {
            "name": "offHandCharges",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitAura",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "rank",
            "type": "string",
            "optional": true
          },
          {
            "name": "filter",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "dispelType",
            "type": "string"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "expires",
            "type": "number"
          },
          {
            "name": "caster",
            "type": "string"
          },
          {
            "name": "isStealable",
            "type": "1nil"
          },
          {
            "name": "shouldConsolidate",
            "type": "boolean"
          },
          {
            "name": "spellID",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitDebuff",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "rank",
            "type": "string",
            "optional": true
          },
          {
            "name": "filter",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "dispelType",
            "type": "string"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "expires",
            "type": "number"
          },
          {
            "name": "caster",
            "type": "string"
          },
          {
            "name": "isStealable",
            "type": "1nil"
          }
        ]
      }
    ],
    "CVar": [
      {
        "name": "GetCVar",
        "arguments": [
          {
            "name": "cvar",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "string",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetCVarAbsoluteMin",
        "arguments": [
          {
            "name": "cvar",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "min",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCVarBool",
        "arguments": [
          {
            "name": "cvar",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "value",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetCVarDefault",
        "arguments": [
          {
            "name": "CVar",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "value",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetCVarInfo",
        "arguments": [
          {
            "name": "cvar",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "value",
            "type": "string"
          },
          {
            "name": "defaultValue",
            "type": "string"
          },
          {
            "name": "serverStoredAccountWide",
            "type": "boolean"
          },
          {
            "name": "serverStoredPerCharacter",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetCVarMin",
        "arguments": [
          {
            "name": "cvar",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "min",
            "type": "number"
          }
        ]
      },
      {
        "name": "RegisterCVar",
        "arguments": [
          {
            "name": "cvar",
            "type": "string"
          },
          {
            "name": "default",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetCVar",
        "arguments": [
          {
            "name": "cvar",
            "type": "string"
          },
          {
            "name": "value",
            "type": "any"
          },
          {
            "name": "raiseEvent",
            "type": "string",
            "optional": true
          }
        ]
      }
    ],
    "Calendar": [
      {
        "name": "CalendarAddEvent"
      },
      {
        "name": "CalendarCanAddEvent",
        "returns": [
          {
            "name": "canAdd",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarCanSendInvite",
        "returns": [
          {
            "name": "canInvite",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarCloseEvent"
      },
      {
        "name": "CalendarContextDeselectEvent"
      },
      {
        "name": "CalendarContextEventCanComplain",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canReport",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarContextEventCanEdit",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canEdit",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarContextEventClipboard",
        "returns": [
          {
            "name": "canPaste",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarContextEventComplain",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarContextEventCopy",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarContextEventGetCalendarType",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "calendarType",
            "type": "string"
          }
        ]
      },
      {
        "name": "CalendarContextEventPaste",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarContextEventRemove",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarContextEventSignUp",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarContextGetEventIndex",
        "returns": [
          {
            "name": "monthOffset",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarContextInviteAvailable",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarContextInviteDecline",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarContextInviteIsPending",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "pendingInvite",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarContextInviteModeratorStatus",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "modStatus",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarContextInviteRemove",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarContextInviteStatus",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "inviteStatus",
            "type": "string"
          }
        ]
      },
      {
        "name": "CalendarContextInviteType",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "inviteType",
            "type": "string"
          }
        ]
      },
      {
        "name": "CalendarContextSelectEvent",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarDefaultGuildFilter",
        "returns": [
          {
            "name": "minLevel",
            "type": "number"
          },
          {
            "name": "maxLevel",
            "type": "number"
          },
          {
            "name": "rank",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventAvailable"
      },
      {
        "name": "CalendarEventCanEdit",
        "returns": [
          {
            "name": "canEdit",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarEventCanModerate",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canModerate",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarEventClearAutoApprove"
      },
      {
        "name": "CalendarEventClearLocked"
      },
      {
        "name": "CalendarEventClearModerator",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventDecline"
      },
      {
        "name": "CalendarEventGetCalendarType",
        "returns": [
          {
            "name": "calendarType",
            "type": "string"
          }
        ]
      },
      {
        "name": "CalendarEventGetInvite",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "className",
            "type": "string"
          },
          {
            "name": "classFileName",
            "type": "string"
          },
          {
            "name": "inviteStatus",
            "type": "number"
          },
          {
            "name": "modStatus",
            "type": "number"
          },
          {
            "name": "inviteIsMine",
            "type": "boolean"
          },
          {
            "name": "inviteType",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventGetInviteResponseTime",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "weekday",
            "type": "number"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          },
          {
            "name": "hour",
            "type": "number"
          },
          {
            "name": "minute",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventGetInviteSortCriterion",
        "returns": [
          {
            "name": "criterion",
            "type": "string"
          },
          {
            "name": "reverse",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarEventGetNumInvites",
        "returns": [
          {
            "name": "numInvites",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventGetRepeatOptions",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "CalendarEventGetSelectedInvite",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventGetStatusOptions",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "CalendarEventGetTextures",
        "arguments": [
          {
            "name": "eventType",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "expansion",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventGetTypes",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "CalendarEventHasPendingInvite",
        "returns": [
          {
            "name": "pendingInvite",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarEventHaveSettingsChanged",
        "returns": [
          {
            "name": "settingsChanged",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarEventInvite",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "CalendarEventIsModerator",
        "returns": [
          {
            "name": "isModerator",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarEventRemoveInvite",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventSelectInvite",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventSetAutoApprove"
      },
      {
        "name": "CalendarEventSetDate",
        "arguments": [
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventSetDescription"
      },
      {
        "name": "CalendarEventSetLocked"
      },
      {
        "name": "CalendarEventSetLockoutDate",
        "arguments": [
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventSetLockoutTime",
        "arguments": [
          {
            "name": "hour",
            "type": "number"
          },
          {
            "name": "minute",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventSetModerator",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventSetRepeatOption",
        "arguments": [
          {
            "name": "title",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventSetSize",
        "arguments": [
          {
            "name": "size",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventSetStatus",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "inviteStatus",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventSetTextureID",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventSetTime",
        "arguments": [
          {
            "name": "hour",
            "type": "number"
          },
          {
            "name": "minute",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventSetTitle",
        "arguments": [
          {
            "name": "title",
            "type": "string"
          }
        ]
      },
      {
        "name": "CalendarEventSetType",
        "arguments": [
          {
            "name": "eventType",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarEventSignUp"
      },
      {
        "name": "CalendarEventSortInvites",
        "arguments": [
          {
            "name": "criterion",
            "type": "string"
          },
          {
            "name": "reverse",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarGetAbsMonth",
        "arguments": [
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          },
          {
            "name": "numDays",
            "type": "number"
          },
          {
            "name": "firstWeekday",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarGetDate",
        "returns": [
          {
            "name": "weekday",
            "type": "number"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarGetDayEvent",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "title",
            "type": "string"
          },
          {
            "name": "hour",
            "type": "number"
          },
          {
            "name": "minute",
            "type": "number"
          },
          {
            "name": "calendarType",
            "type": "string"
          },
          {
            "name": "sequenceType",
            "type": "string"
          },
          {
            "name": "eventType",
            "type": "number"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "modStatus",
            "type": "number"
          },
          {
            "name": "inviteStatus",
            "type": "string"
          },
          {
            "name": "invitedBy",
            "type": "string"
          },
          {
            "name": "difficulty",
            "type": "number"
          },
          {
            "name": "inviteType",
            "type": "string"
          }
        ]
      },
      {
        "name": "CalendarGetEventIndex",
        "returns": [
          {
            "name": "monthOffset",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarGetEventInfo",
        "returns": [
          {
            "name": "title",
            "type": "string"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "creator",
            "type": "string"
          },
          {
            "name": "eventType",
            "type": "number"
          },
          {
            "name": "repeatOption",
            "type": "number"
          },
          {
            "name": "maxSize",
            "type": "number"
          },
          {
            "name": "textureIndex",
            "type": "number"
          },
          {
            "name": "weekday",
            "type": "number"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          },
          {
            "name": "hour",
            "type": "number"
          },
          {
            "name": "minute",
            "type": "number"
          },
          {
            "name": "lockoutWeekday",
            "type": "number"
          },
          {
            "name": "lockoutMonth",
            "type": "number"
          },
          {
            "name": "lockoutDay",
            "type": "number"
          },
          {
            "name": "lockoutYear",
            "type": "number"
          },
          {
            "name": "lockoutHour",
            "type": "number"
          },
          {
            "name": "lockoutMinute",
            "type": "number"
          },
          {
            "name": "locked",
            "type": "boolean"
          },
          {
            "name": "autoApprove",
            "type": "boolean"
          },
          {
            "name": "pendingInvite",
            "type": "boolean"
          },
          {
            "name": "inviteStatus",
            "type": "number"
          },
          {
            "name": "inviteType",
            "type": "number"
          },
          {
            "name": "calendarType",
            "type": "string"
          }
        ]
      },
      {
        "name": "CalendarGetFirstPendingInvite",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarGetHolidayInfo",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          }
        ]
      },
      {
        "name": "CalendarGetMaxCreateDate",
        "returns": [
          {
            "name": "weekday",
            "type": "number"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarGetMaxDate",
        "returns": [
          {
            "name": "weekday",
            "type": "number"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarGetMinDate",
        "returns": [
          {
            "name": "weekday",
            "type": "number"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarGetMinHistoryDate",
        "returns": [
          {
            "name": "weekday",
            "type": "number"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarGetMonth",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          },
          {
            "name": "numDays",
            "type": "number"
          },
          {
            "name": "firstWeekday",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarGetMonthNames",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "CalendarGetNumDayEvents",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numEvents",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarGetNumPendingInvites",
        "returns": [
          {
            "name": "numInvites",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarGetRaidInfo",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "title",
            "type": "number"
          },
          {
            "name": "calendarType",
            "type": "string"
          },
          {
            "name": "raidID",
            "type": "number"
          },
          {
            "name": "hour",
            "type": "number"
          },
          {
            "name": "minute",
            "type": "number"
          },
          {
            "name": "difficulty",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarGetWeekdayNames",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "CalendarIsActionPending",
        "returns": [
          {
            "name": "isPending",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarMassInviteArenaTeam",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarMassInviteGuild",
        "arguments": [
          {
            "name": "minLevel",
            "type": "number"
          },
          {
            "name": "maxLevel",
            "type": "number"
          },
          {
            "name": "rank",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarNewEvent"
      },
      {
        "name": "CalendarNewGuildAnnouncement"
      },
      {
        "name": "CalendarNewGuildEvent"
      },
      {
        "name": "CalendarOpenEvent",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarRemoveEvent"
      },
      {
        "name": "CalendarSetAbsMonth",
        "arguments": [
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "CalendarSetMonth",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number"
          }
        ]
      },
      {
        "name": "CalendarUpdateEvent"
      },
      {
        "name": "CanEditGuildEvent",
        "returns": [
          {
            "name": "canEdit",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "OpenCalendar"
      }
    ],
    "Camera": [
      {
        "name": "CameraOrSelectOrMoveStart"
      },
      {
        "name": "CameraOrSelectOrMoveStop",
        "arguments": [
          {
            "name": "isSticky",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CameraZoomIn",
        "arguments": [
          {
            "name": "distance",
            "type": "number"
          }
        ]
      },
      {
        "name": "CameraZoomOut",
        "arguments": [
          {
            "name": "distance",
            "type": "number"
          }
        ]
      },
      {
        "name": "FlipCameraYaw",
        "arguments": [
          {
            "name": "degrees",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsMouselooking",
        "returns": [
          {
            "name": "isLooking",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "MouselookStart"
      },
      {
        "name": "MouselookStop"
      },
      {
        "name": "MoveViewDownStart"
      },
      {
        "name": "MoveViewDownStop"
      },
      {
        "name": "MoveViewInStart"
      },
      {
        "name": "MoveViewInStop"
      },
      {
        "name": "MoveViewLeftStart"
      },
      {
        "name": "MoveViewLeftStop"
      },
      {
        "name": "MoveViewOutStart"
      },
      {
        "name": "MoveViewOutStop"
      },
      {
        "name": "MoveViewRightStart"
      },
      {
        "name": "MoveViewRightStop"
      },
      {
        "name": "MoveViewUpStart"
      },
      {
        "name": "MoveViewUpStop"
      },
      {
        "name": "NextView"
      },
      {
        "name": "PrevView"
      },
      {
        "name": "ResetView",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SaveView",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetView",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      }
    ],
    "Channel": [
      {
        "name": "AddChatWindowChannel",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "channel",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "zoneChannel",
            "type": "number"
          }
        ]
      },
      {
        "name": "ChannelBan",
        "arguments": [
          {
            "name": "channel",
            "type": "string"
          },
          {
            "name": "fullname",
            "type": "string"
          }
        ]
      },
      {
        "name": "ChannelInvite",
        "arguments": [
          {
            "name": "channel",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "ChannelKick",
        "arguments": [
          {
            "name": "channel",
            "type": "string"
          },
          {
            "name": "fullname",
            "type": "string"
          }
        ]
      },
      {
        "name": "ChannelModerator",
        "arguments": [
          {
            "name": "channel",
            "type": "string"
          },
          {
            "name": "fullname",
            "type": "string"
          }
        ]
      },
      {
        "name": "ChannelMute",
        "arguments": [
          {
            "name": "channelName",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelId",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelSilenceAll",
        "arguments": [
          {
            "name": "channelName",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelId",
            "type": "number",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelSilenceVoice",
        "arguments": [
          {
            "name": "channelName",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelId",
            "type": "number",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelToggleAnnouncements",
        "arguments": [
          {
            "name": "channel",
            "type": "string"
          }
        ]
      },
      {
        "name": "ChannelUnSilenceAll",
        "arguments": [
          {
            "name": "channelName",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelId",
            "type": "number",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelUnSilenceVoice",
        "arguments": [
          {
            "name": "channelName",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelId",
            "type": "number",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelUnban",
        "arguments": [
          {
            "name": "channel",
            "type": "string"
          },
          {
            "name": "fullname",
            "type": "string"
          }
        ]
      },
      {
        "name": "ChannelUnmoderator",
        "arguments": [
          {
            "name": "channel",
            "type": "string"
          },
          {
            "name": "fullname",
            "type": "string"
          }
        ]
      },
      {
        "name": "ChannelUnmute",
        "arguments": [
          {
            "name": "channelName",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelId",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelVoiceOff",
        "arguments": [
          {
            "name": "channel",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelIndex",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelVoiceOn",
        "arguments": [
          {
            "name": "channel",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelIndex",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "ClearChannelWatch"
      },
      {
        "name": "CollapseChannelHeader",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "DeclineInvite",
        "arguments": [
          {
            "name": "channel",
            "type": "string"
          }
        ]
      },
      {
        "name": "DisplayChannelOwner",
        "arguments": [
          {
            "name": "channel",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelIndex",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "DisplayChannelVoiceOff",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "DisplayChannelVoiceOn",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "EnumerateServerChannels",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "ExpandChannelHeader",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetActiveVoiceChannel",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetChannelDisplayInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "header",
            "type": "1nil"
          },
          {
            "name": "collapsed",
            "type": "1nil"
          },
          {
            "name": "channelNumber",
            "type": "number"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "active",
            "type": "1nil"
          },
          {
            "name": "category",
            "type": "string"
          },
          {
            "name": "voiceEnabled",
            "type": "1nil"
          },
          {
            "name": "voiceActive",
            "type": "1nil"
          }
        ]
      },
      {
        "name": "GetChannelList",
        "arguments": [],
        "returns": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "channel",
            "type": "string"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetChannelName",
        "arguments": [
          {
            "name": "channelIndex",
            "type": "number",
            "optional": true
          },
          {
            "name": "channelName",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "channel",
            "type": "number"
          },
          {
            "name": "channelName",
            "type": "string"
          },
          {
            "name": "instanceID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetChannelRosterInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "rosterIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "owner",
            "type": "boolean"
          },
          {
            "name": "moderator",
            "type": "boolean"
          },
          {
            "name": "muted",
            "type": "boolean"
          },
          {
            "name": "active",
            "type": "boolean"
          },
          {
            "name": "enabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetChatWindowChannels",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "channelName",
            "type": "string"
          },
          {
            "name": "channelId",
            "type": "number"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetNumChannelMembers",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numMembers",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumDisplayChannels",
        "returns": [
          {
            "name": "channelCount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSelectedDisplayChannel",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsDisplayChannelModerator",
        "returns": [
          {
            "name": "isModerator",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsDisplayChannelOwner",
        "returns": [
          {
            "name": "isOwner",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsSilenced",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "channel",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isSilenced",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "JoinChannelByName"
      },
      {
        "name": "JoinPermanentChannel",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "password",
            "type": "string"
          },
          {
            "name": "chatFrameIndex",
            "type": "number"
          },
          {
            "name": "enableVoice",
            "type": "boolean",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "zoneChannel",
            "type": "number"
          },
          {
            "name": "channelName",
            "type": "string"
          }
        ]
      },
      {
        "name": "JoinTemporaryChannel",
        "arguments": [
          {
            "name": "channel",
            "type": "string"
          }
        ]
      },
      {
        "name": "LeaveChannelByName",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "ListChannelByName",
        "arguments": [
          {
            "name": "channel",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelIndex",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "ListChannels"
      },
      {
        "name": "RemoveChatWindowChannel",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "channel",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetActiveVoiceChannel",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetActiveVoiceChannelBySessionID",
        "arguments": [
          {
            "name": "session",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetChannelOwner",
        "arguments": [
          {
            "name": "channel",
            "type": "string"
          },
          {
            "name": "fullname",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetChannelPassword",
        "arguments": [
          {
            "name": "channel",
            "type": "string"
          },
          {
            "name": "password",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetSelectedDisplayChannel",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SilenceMember"
      },
      {
        "name": "UnSilenceMember"
      }
    ],
    "Chat": [
      {
        "name": "AddChatWindowChannel",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "channel",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "zoneChannel",
            "type": "number"
          }
        ]
      },
      {
        "name": "AddChatWindowMessages",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "messageGroup",
            "type": "string"
          }
        ]
      },
      {
        "name": "CanComplainChat",
        "arguments": [
          {
            "name": "lineID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canComplain",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ChangeChatColor",
        "arguments": [
          {
            "name": "messageType",
            "type": "string"
          },
          {
            "name": "red",
            "type": "number"
          },
          {
            "name": "green",
            "type": "number"
          },
          {
            "name": "blue",
            "type": "number"
          }
        ]
      },
      {
        "name": "ChatFrame_AddMessageEventFilter",
        "arguments": [
          {
            "name": "event",
            "type": "string"
          },
          {
            "name": "filter",
            "type": "function"
          }
        ]
      },
      {
        "name": "ChatFrame_GetMessageEventFilters",
        "arguments": [
          {
            "name": "event",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "filterTable",
            "type": "table"
          }
        ]
      },
      {
        "name": "ChatFrame_RemoveMessageEventFilter",
        "arguments": [
          {
            "name": "event",
            "type": "string"
          },
          {
            "name": "filter",
            "type": "function"
          }
        ]
      },
      {
        "name": "ComplainChat",
        "arguments": [
          {
            "name": "lineID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canComplain",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "DoEmote",
        "arguments": [
          {
            "name": "emote",
            "type": "string"
          },
          {
            "name": "target",
            "type": "string"
          },
          {
            "name": "hold",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "GetChatTypeIndex",
        "arguments": [
          {
            "name": "messageGroup",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetChatWindowChannels",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "channelName",
            "type": "string"
          },
          {
            "name": "channelId",
            "type": "number"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetChatWindowInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "fontSize",
            "type": "number"
          },
          {
            "name": "r",
            "type": "number"
          },
          {
            "name": "g",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          },
          {
            "name": "alpha",
            "type": "number"
          },
          {
            "name": "shown",
            "type": "number"
          },
          {
            "name": "locked",
            "type": "number"
          },
          {
            "name": "docked",
            "type": "number"
          },
          {
            "name": "uninteractable",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetChatWindowMessages",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetDefaultLanguage",
        "returns": [
          {
            "name": "language",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetLanguageByIndex",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "language",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetNumLanguages",
        "returns": [
          {
            "name": "languages",
            "type": "number"
          }
        ]
      },
      {
        "name": "LoggingChat",
        "arguments": [
          {
            "name": "toggle",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "isLogging",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "LoggingCombat",
        "arguments": [
          {
            "name": "toggle",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "isLogging",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "RandomRoll",
        "arguments": [
          {
            "name": "min",
            "type": "string"
          },
          {
            "name": "max",
            "type": "string"
          }
        ]
      },
      {
        "name": "RemoveChatWindowChannel",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "channel",
            "type": "string"
          }
        ]
      },
      {
        "name": "RemoveChatWindowMessages",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "messageGroup",
            "type": "string"
          }
        ]
      },
      {
        "name": "ResetChatColors"
      },
      {
        "name": "ResetChatWindows"
      },
      {
        "name": "SendChatMessage",
        "arguments": [
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "chatType",
            "type": "string"
          },
          {
            "name": "language",
            "type": "string"
          },
          {
            "name": "channel",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "SetChatWindowAlpha",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "alpha",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetChatWindowColor",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "r",
            "type": "number"
          },
          {
            "name": "g",
            "type": "number"
          },
          {
            "name": "b",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetChatWindowDocked",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "docked",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetChatWindowLocked",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "locked",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetChatWindowName",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetChatWindowShown",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "shown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetChatWindowSize",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "size",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetChatWindowUninteractable",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "setUninteractable",
            "type": "boolean"
          }
        ]
      }
    ],
    "Class_resource": [
      {
        "name": "DestroyTotem",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRuneCooldown",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "runeReady",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetRuneCount",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRuneType",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "runeType",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTotemInfo",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "haveTotem",
            "type": "boolean"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "startTime",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "icon",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTotemTimeLeft",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "seconds",
            "type": "number"
          }
        ]
      },
      {
        "name": "TargetTotem",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      }
    ],
    "Client_control_and_information": [
      {
        "name": "CancelLogout"
      },
      {
        "name": "DownloadSettings"
      },
      {
        "name": "ForceLogout"
      },
      {
        "name": "ForceQuit"
      },
      {
        "name": "GetAccountExpansionLevel",
        "returns": [
          {
            "name": "expansionLevel",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetBuildInfo",
        "returns": [
          {
            "name": "version",
            "type": "string"
          },
          {
            "name": "internalVersion",
            "type": "string"
          },
          {
            "name": "date",
            "type": "string"
          },
          {
            "name": "uiVersion",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetExistingLocales",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetExpansionLevel"
      },
      {
        "name": "GetGameTime",
        "returns": [
          {
            "name": "hour",
            "type": "number"
          },
          {
            "name": "minute",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetLocale",
        "returns": [
          {
            "name": "locale",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetNetStats",
        "returns": [
          {
            "name": "bandwidthIn",
            "type": "number"
          },
          {
            "name": "bandwidthOut",
            "type": "number"
          },
          {
            "name": "latencyHome",
            "type": "number"
          },
          {
            "name": "latencyWorld",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsLinuxClient",
        "returns": [
          {
            "name": "isLinux",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsMacClient",
        "returns": [
          {
            "name": "isMac",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsWindowsClient",
        "returns": [
          {
            "name": "isWindows",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "Logout"
      },
      {
        "name": "NotWhileDeadError"
      },
      {
        "name": "Quit"
      },
      {
        "name": "ReloadUI"
      },
      {
        "name": "Screenshot"
      },
      {
        "name": "SetEuropeanNumbers",
        "arguments": [
          {
            "name": "enable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetUIVisibility",
        "arguments": [
          {
            "name": "visible",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UploadSettings"
      }
    ],
    "CombatLog": [
      {
        "name": "CombatLogAddFilter",
        "arguments": [
          {
            "name": "events",
            "type": "string",
            "optional": true
          },
          {
            "name": "srcGUID",
            "type": "number",
            "optional": true
          },
          {
            "name": "srcMask",
            "type": "number",
            "optional": true
          },
          {
            "name": "destGUID",
            "type": "number",
            "optional": true
          },
          {
            "name": "destMask",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "CombatLogAdvanceEntry",
        "arguments": [
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "ignoreFilter",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "hasEntry",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CombatLogClearEntries"
      },
      {
        "name": "CombatLogGetCurrentEntry",
        "arguments": [
          {
            "name": "ignoreFilter",
            "type": "boolean",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "timestamp",
            "type": "number"
          },
          {
            "name": "event",
            "type": "string"
          },
          {
            "name": "srcGUID",
            "type": "number"
          },
          {
            "name": "srcName",
            "type": "string"
          },
          {
            "name": "srcFlags",
            "type": "number"
          },
          {
            "name": "destGUID",
            "type": "number"
          },
          {
            "name": "destName",
            "type": "string"
          },
          {
            "name": "destFlags",
            "type": "number"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "CombatLogGetNumEntries",
        "arguments": [
          {
            "name": "ignoreFilter",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CombatLogGetRetentionTime",
        "returns": [
          {
            "name": "seconds",
            "type": "number"
          }
        ]
      },
      {
        "name": "CombatLogResetFilter"
      },
      {
        "name": "CombatLogSetCurrentEntry",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "ignoreFilter",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "CombatLogSetRetentionTime",
        "arguments": [
          {
            "name": "seconds",
            "type": "number"
          }
        ]
      },
      {
        "name": "CombatLog_Object_IsA",
        "arguments": [
          {
            "name": "unitFlags",
            "type": "number"
          },
          {
            "name": "mask",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isMatch",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "LoggingCombat",
        "arguments": [
          {
            "name": "toggle",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "isLogging",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitGUID",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "guid",
            "type": "number"
          }
        ]
      }
    ],
    "Combat": [
      {
        "name": "StartAttack",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "StopAttack"
      },
      {
        "name": "UnitAffectingCombat",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "inCombat",
            "type": "boolean"
          }
        ]
      }
    ],
    "Commentator": [
      {
        "name": "CommentatorAddPlayer"
      },
      {
        "name": "CommentatorEnterInstance"
      },
      {
        "name": "CommentatorExitInstance"
      },
      {
        "name": "CommentatorFollowPlayer"
      },
      {
        "name": "CommentatorGetCamera"
      },
      {
        "name": "CommentatorGetCurrentMapID"
      },
      {
        "name": "CommentatorGetInstanceInfo"
      },
      {
        "name": "CommentatorGetMapInfo"
      },
      {
        "name": "CommentatorGetMode"
      },
      {
        "name": "CommentatorGetNumMaps"
      },
      {
        "name": "CommentatorGetNumPlayers"
      },
      {
        "name": "CommentatorGetPlayerInfo"
      },
      {
        "name": "CommentatorGetSkirmishMode"
      },
      {
        "name": "CommentatorGetSkirmishQueueCount"
      },
      {
        "name": "CommentatorGetSkirmishQueuePlayerInfo"
      },
      {
        "name": "CommentatorLookatPlayer"
      },
      {
        "name": "CommentatorRemovePlayer"
      },
      {
        "name": "CommentatorRequestSkirmishMode"
      },
      {
        "name": "CommentatorRequestSkirmishQueueData"
      },
      {
        "name": "CommentatorSetBattlemaster"
      },
      {
        "name": "CommentatorSetCamera"
      },
      {
        "name": "CommentatorSetCameraCollision"
      },
      {
        "name": "CommentatorSetMapAndInstanceIndex"
      },
      {
        "name": "CommentatorSetMode"
      },
      {
        "name": "CommentatorSetMoveSpeed"
      },
      {
        "name": "CommentatorSetPlayerIndex"
      },
      {
        "name": "CommentatorSetSkirmishMatchmakingMode"
      },
      {
        "name": "CommentatorSetTargetHeightOffset"
      },
      {
        "name": "CommentatorStartInstance"
      },
      {
        "name": "CommentatorStartSkirmishMatch"
      },
      {
        "name": "CommentatorToggleMode"
      },
      {
        "name": "CommentatorUpdateMapInfo"
      },
      {
        "name": "CommentatorUpdatePlayerInfo"
      },
      {
        "name": "CommentatorZoomIn"
      },
      {
        "name": "CommentatorZoomOut"
      }
    ],
    "Companion": [
      {
        "name": "CallCompanion",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "DismissCompanion",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetCompanionCooldown",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCompanionInfo",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "creatureID",
            "type": "number"
          },
          {
            "name": "creatureName",
            "type": "string"
          },
          {
            "name": "spellID",
            "type": "number"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "active",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetNumCompanions",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupCompanion",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SummonRandomCritter"
      }
    ],
    "Complaint": [
      {
        "name": "CalendarContextEventCanComplain",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canReport",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CalendarContextEventComplain",
        "arguments": [
          {
            "name": "monthOffset",
            "type": "number",
            "optional": true
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CanComplainChat",
        "arguments": [
          {
            "name": "lineID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canComplain",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanComplainInboxItem",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "complain",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ComplainChat",
        "arguments": [
          {
            "name": "lineID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canComplain",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ComplainInboxItem",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "complain",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PlayerIsPVPInactive",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isInactive",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ReportPlayerIsPVPAFK",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ]
      }
    ],
    "Container": [
      {
        "name": "ContainerIDToInventoryID",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "inventoryID",
            "type": "number"
          }
        ]
      },
      {
        "name": "ContainerRefundItemPurchase",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "EquipmentManager_UnpackLocation",
        "arguments": [
          {
            "name": "location",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "player",
            "type": "boolean"
          },
          {
            "name": "bank",
            "type": "boolean"
          },
          {
            "name": "bags",
            "type": "boolean"
          },
          {
            "name": "location or slot",
            "type": "number"
          },
          {
            "name": "bag",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBagName",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetContainerFreeSlots",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "returnTable",
            "type": "table",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "slotTable",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetContainerItemCooldown",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetContainerItemDurability",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "durability",
            "type": "number"
          },
          {
            "name": "max",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetContainerItemGems",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "gem1",
            "type": "number"
          },
          {
            "name": "gem2",
            "type": "number"
          },
          {
            "name": "gem3",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetContainerItemID",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetContainerItemInfo",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "locked",
            "type": "1nil"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          },
          {
            "name": "readable",
            "type": "1nil"
          },
          {
            "name": "lootable",
            "type": "1nil"
          },
          {
            "name": "link",
            "type": "itemLink"
          }
        ]
      },
      {
        "name": "GetContainerItemLink",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetContainerItemPurchaseInfo",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "IsEquipped",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "money",
            "type": "number"
          },
          {
            "name": "itemCount",
            "type": "number"
          },
          {
            "name": "refundSec",
            "type": "number"
          },
          {
            "name": "currecycount",
            "type": "number"
          },
          {
            "name": "hasEnchants",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetContainerItemPurchaseItem",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "quantity",
            "type": "number"
          },
          {
            "name": "link",
            "type": "itemLink"
          }
        ]
      },
      {
        "name": "GetContainerNumFreeSlots",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "freeSlots",
            "type": "number"
          },
          {
            "name": "bagType",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetContainerNumSlots",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numSlots",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetItemFamily",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "bagType",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupBagFromSlot",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupContainerItem",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "PutItemInBackpack",
        "returns": [
          {
            "name": "hadItem",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PutItemInBag",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "hadItem",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetBagPortraitTexture",
        "arguments": [
          {
            "name": "texture",
            "type": "table"
          },
          {
            "name": "container",
            "type": "number"
          }
        ]
      },
      {
        "name": "SocketContainerItem",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "SplitContainerItem",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "UseContainerItem",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "target",
            "type": "string",
            "optional": true
          }
        ]
      }
    ],
    "Currency": [
      {
        "name": "ExpandCurrencyList",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "shouldExpand",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBackpackCurrencyInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "extraCurrencyType",
            "type": "number"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "itemID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetContainerItemPurchaseInfo",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "IsEquipped",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "money",
            "type": "number"
          },
          {
            "name": "itemCount",
            "type": "number"
          },
          {
            "name": "refundSec",
            "type": "number"
          },
          {
            "name": "currecycount",
            "type": "number"
          },
          {
            "name": "hasEnchants",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetContainerItemPurchaseItem",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "quantity",
            "type": "number"
          },
          {
            "name": "link",
            "type": "itemLink"
          }
        ]
      },
      {
        "name": "GetCurrencyListInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "isHeader",
            "type": "boolean"
          },
          {
            "name": "isExpanded",
            "type": "boolean"
          },
          {
            "name": "isUnused",
            "type": "boolean"
          },
          {
            "name": "isWatched",
            "type": "boolean"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "extraCurrencyType",
            "type": "number"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "itemID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCurrencyListSize",
        "returns": [
          {
            "name": "numEntries",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetHolidayBGHonorCurrencyBonuses",
        "returns": [
          {
            "name": "unk",
            "type": "boolean"
          },
          {
            "name": "honorWinReward",
            "type": "number"
          },
          {
            "name": "arenaWinReward",
            "type": "number"
          },
          {
            "name": "honorLossReward",
            "type": "number"
          },
          {
            "name": "arenaLossReward",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetHonorCurrency",
        "returns": [
          {
            "name": "honorPoints",
            "type": "number"
          },
          {
            "name": "maxHonor",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMaxArenaCurrency",
        "returns": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetCurrencyBackpack",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "watch",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetCurrencyUnused",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "makeUnused",
            "type": "number"
          }
        ]
      }
    ],
    "Cursor": [
      {
        "name": "AddTradeMoney"
      },
      {
        "name": "AutoEquipCursorItem"
      },
      {
        "name": "ClearCursor"
      },
      {
        "name": "ClickAuctionSellItemButton"
      },
      {
        "name": "ClickSendMailItemButton",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "autoReturn",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ClickSocketButton",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "ClickTargetTradeButton",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "ClickTradeButton",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CursorCanGoInSlot",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canBePlaced",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CursorHasItem",
        "returns": [
          {
            "name": "hasItem",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CursorHasMacro",
        "returns": [
          {
            "name": "hasMacro",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CursorHasMoney",
        "returns": [
          {
            "name": "hasMoney",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CursorHasSpell",
        "returns": [
          {
            "name": "hasSpell",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "DeleteCursorItem"
      },
      {
        "name": "DropCursorMoney"
      },
      {
        "name": "DropItemOnUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "EquipCursorItem"
      },
      {
        "name": "GetCursorInfo",
        "returns": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "data",
            "type": "number"
          },
          {
            "name": "subType",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetCursorMoney",
        "returns": [
          {
            "name": "cursorMoney",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCursorPosition",
        "returns": [
          {
            "name": "cursorX",
            "type": "number"
          },
          {
            "name": "cursorY",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMouseFocus",
        "returns": [
          {
            "name": "frame",
            "type": "table"
          }
        ]
      },
      {
        "name": "HideRepairCursor"
      },
      {
        "name": "InRepairMode",
        "returns": [
          {
            "name": "inRepair",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PickupAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupBagFromSlot",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupCompanion",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupContainerItem",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupGuildBankItem",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupGuildBankMoney",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupInventoryItem",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "PickupMacro",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "PickupMerchantItem",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupPetAction",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupPlayerMoney",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupSpell",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "bookType",
            "type": "string"
          }
        ]
      },
      {
        "name": "PickupStablePet",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupTradeMoney",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "PlaceAction",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "PutItemInBackpack",
        "returns": [
          {
            "name": "hadItem",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PutItemInBag",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "hadItem",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ResetCursor"
      },
      {
        "name": "SetCursor"
      },
      {
        "name": "ShowBuybackSellCursor",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "ShowContainerSellCursor",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "ShowInventorySellCursor",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "ShowMerchantSellCursor",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "ShowRepairCursor"
      },
      {
        "name": "SplitContainerItem",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "SplitGuildBankItem",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "amount",
            "type": "number"
          }
        ]
      }
    ],
    "Debugging_and_Profiling": [
      {
        "name": "FrameXML_Debug",
        "arguments": [
          {
            "name": "enable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetAddOnCPUUsage",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "usage",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetAddOnMemoryUsage",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "mem",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetEventCPUUsage",
        "arguments": [
          {
            "name": "event",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "usage",
            "type": "number"
          },
          {
            "name": "numEvents",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetFrameCPUUsage",
        "arguments": [
          {
            "name": "frame",
            "type": "table"
          },
          {
            "name": "includeChildren",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "usage",
            "type": "number"
          },
          {
            "name": "calls",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetFramerate",
        "returns": [
          {
            "name": "framerate",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetFunctionCPUUsage",
        "arguments": [
          {
            "name": "function",
            "type": "function"
          },
          {
            "name": "includeSubroutines",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "usage",
            "type": "number"
          },
          {
            "name": "calls",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNetStats",
        "returns": [
          {
            "name": "bandwidthIn",
            "type": "number"
          },
          {
            "name": "bandwidthOut",
            "type": "number"
          },
          {
            "name": "latencyHome",
            "type": "number"
          },
          {
            "name": "latencyWorld",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetScriptCPUUsage",
        "returns": [
          {
            "name": "usage",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTaxiBenchmarkMode",
        "returns": [
          {
            "name": "isBenchmark",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ResetCPUUsage"
      },
      {
        "name": "SetTaxiBenchmarkMode",
        "arguments": [
          {
            "name": "arg",
            "type": "string"
          }
        ]
      },
      {
        "name": "UpdateAddOnCPUUsage"
      },
      {
        "name": "UpdateAddOnMemoryUsage"
      },
      {
        "name": "debugprofilestart"
      },
      {
        "name": "debugprofilestop",
        "returns": [
          {
            "name": "time",
            "type": "number"
          }
        ]
      },
      {
        "name": "debugstack",
        "arguments": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "countTop",
            "type": "number"
          },
          {
            "name": "countBot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "debugstring",
            "type": "string"
          }
        ]
      },
      {
        "name": "geterrorhandler",
        "returns": [
          {
            "name": "handler",
            "type": "function"
          }
        ]
      },
      {
        "name": "issecurevariable",
        "arguments": [
          {
            "name": "table",
            "type": "table",
            "optional": true
          },
          {
            "name": "variable",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "issecure",
            "type": "boolean"
          },
          {
            "name": "taint",
            "type": "string"
          }
        ]
      },
      {
        "name": "seterrorhandler",
        "arguments": [
          {
            "name": "errHandler",
            "type": "function"
          }
        ]
      }
    ],
    "Deprecated": [
      {
        "name": "AcceptSkillUps"
      },
      {
        "name": "AddSkillUp"
      },
      {
        "name": "GetExtendedItemInfo"
      },
      {
        "name": "ReportBug"
      },
      {
        "name": "ReportSuggestion"
      }
    ],
    "Duel": [
      {
        "name": "AcceptDuel"
      },
      {
        "name": "CancelDuel"
      },
      {
        "name": "StartDuel",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "exactMatch",
            "type": "boolean",
            "optional": true
          }
        ]
      }
    ],
    "Equipment_Manager": [
      {
        "name": "CanUseEquipmentSets",
        "returns": [
          {
            "name": "enabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "DeleteEquipmentSet",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "EquipmentManagerClearIgnoredSlotsForSave"
      },
      {
        "name": "EquipmentManagerIgnoreSlotForSave",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "EquipmentManagerIsSlotIgnoredForSave",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isIgnored",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "EquipmentManagerUnignoreSlotForSave",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "EquipmentManager_UnpackLocation",
        "arguments": [
          {
            "name": "location",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "player",
            "type": "boolean"
          },
          {
            "name": "bank",
            "type": "boolean"
          },
          {
            "name": "bags",
            "type": "boolean"
          },
          {
            "name": "location or slot",
            "type": "number"
          },
          {
            "name": "bag",
            "type": "number"
          }
        ]
      },
      {
        "name": "EquipmentSetContainsLockedItems",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isLocked",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetEquipmentSetInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "setID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetEquipmentSetInfoByName",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "setID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetEquipmentSetItemIDs",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "itemIDs",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetEquipmentSetLocations",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "itemIDs",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetNumEquipmentSets",
        "returns": [
          {
            "name": "numSets",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupEquipmentSet",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupEquipmentSetByName",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "SaveEquipmentSet",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "number"
          }
        ]
      },
      {
        "name": "UseEquipmentSet",
        "returns": [
          {
            "name": "enabled",
            "type": "boolean"
          }
        ]
      }
    ],
    "Experience_(XP)": [
      {
        "name": "GetRewardXP"
      },
      {
        "name": "GetXPExhaustion",
        "returns": [
          {
            "name": "exhaustionXP",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsXPUserDisabled",
        "returns": [
          {
            "name": "isDisabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitXP",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "currXP",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitXPMax",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "playerMaxXP",
            "type": "number"
          }
        ]
      }
    ],
    "Faction": [
      {
        "name": "CollapseAllFactionHeaders"
      },
      {
        "name": "CollapseFactionHeader",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "ExpandAllFactionHeaders"
      },
      {
        "name": "ExpandFactionHeader",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "FactionToggleAtWar",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetFactionInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "standingID",
            "type": "number"
          },
          {
            "name": "barMin",
            "type": "number"
          },
          {
            "name": "barMax",
            "type": "number"
          },
          {
            "name": "barValue",
            "type": "number"
          },
          {
            "name": "atWarWith",
            "type": "boolean"
          },
          {
            "name": "canToggleAtWar",
            "type": "boolean"
          },
          {
            "name": "isHeader",
            "type": "boolean"
          },
          {
            "name": "isCollapsed",
            "type": "boolean"
          },
          {
            "name": "hasRep",
            "type": "boolean"
          },
          {
            "name": "isWatched",
            "type": "boolean"
          },
          {
            "name": "isChild",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetNumFactions",
        "returns": [
          {
            "name": "numFactions",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSelectedFaction",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetWatchedFactionInfo",
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "standingID",
            "type": "number"
          },
          {
            "name": "barMin",
            "type": "number"
          },
          {
            "name": "barMax",
            "type": "number"
          },
          {
            "name": "barValue",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsFactionInactive",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isInactive",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetFactionActive",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetFactionInactive",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetSelectedFaction",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetWatchedFactionIndex",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      }
    ],
    "GM_Survey": [
      {
        "name": "GMSurveyAnswer",
        "arguments": [
          {
            "name": "questionIndex",
            "type": "number"
          },
          {
            "name": "answerIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "answerText",
            "type": "string"
          }
        ]
      },
      {
        "name": "GMSurveyAnswerSubmit",
        "arguments": [
          {
            "name": "question",
            "type": "number"
          },
          {
            "name": "rank",
            "type": "number"
          },
          {
            "name": "comment",
            "type": "string"
          }
        ]
      },
      {
        "name": "GMSurveyCommentSubmit",
        "arguments": [
          {
            "name": "comment",
            "type": "string"
          }
        ]
      },
      {
        "name": "GMSurveyNumAnswers",
        "arguments": [
          {
            "name": "questionIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numAnswers",
            "type": "number"
          }
        ]
      },
      {
        "name": "GMSurveyQuestion",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "surveyQuestion",
            "type": "string"
          }
        ]
      },
      {
        "name": "GMSurveySubmit"
      }
    ],
    "GM_Ticket": [
      {
        "name": "DeleteGMTicket"
      },
      {
        "name": "GMResponseNeedMoreHelp"
      },
      {
        "name": "GMResponseResolve"
      },
      {
        "name": "GetGMStatus"
      },
      {
        "name": "GetGMTicket"
      },
      {
        "name": "GetGMTicketCategories",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "NewGMTicket",
        "arguments": [
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "needResponse",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "Stuck"
      },
      {
        "name": "UpdateGMTicket",
        "arguments": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      }
    ],
    "Glyph": [
      {
        "name": "GetGlyphLink",
        "arguments": [
          {
            "name": "socket",
            "type": "number"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetGlyphSocketInfo",
        "arguments": [
          {
            "name": "socket",
            "type": "number"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "enabled",
            "type": "boolean"
          },
          {
            "name": "glyphType",
            "type": "number"
          },
          {
            "name": "glyphTooltipIndex",
            "type": "number"
          },
          {
            "name": "glyphSpell",
            "type": "number"
          },
          {
            "name": "icon",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetNumGlyphSockets"
      },
      {
        "name": "GlyphMatchesSocket",
        "arguments": [
          {
            "name": "socket",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "match",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PlaceGlyphInSocket",
        "arguments": [
          {
            "name": "socket",
            "type": "number"
          }
        ]
      },
      {
        "name": "RemoveGlyphFromSocket",
        "arguments": [
          {
            "name": "socket",
            "type": "number"
          }
        ]
      },
      {
        "name": "SpellCanTargetGlyph",
        "returns": [
          {
            "name": "canTarget",
            "type": "boolean"
          }
        ]
      }
    ],
    "Guild_bank": [
      {
        "name": "AutoStoreGuildBankItem",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "BuyGuildBankTab"
      },
      {
        "name": "CanEditGuildTabInfo",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canEdit",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanGuildBankRepair",
        "returns": [
          {
            "name": "canRepair",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanWithdrawGuildBankMoney",
        "returns": [
          {
            "name": "canWithdraw",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CloseGuildBankFrame"
      },
      {
        "name": "DepositGuildBankMoney",
        "arguments": [
          {
            "name": "money",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCurrentGuildBankTab",
        "arguments": [
          {
            "name": "currentTab",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildBankItemInfo",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "locked",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetGuildBankItemLink",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "item",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetGuildBankMoney",
        "returns": [
          {
            "name": "guildBankMoney",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildBankMoneyTransaction",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "year",
            "type": "number"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "hour",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildBankTabCost",
        "returns": [
          {
            "name": "tabCost",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildBankTabInfo",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "isViewable",
            "type": "boolean"
          },
          {
            "name": "canDeposit",
            "type": "boolean"
          },
          {
            "name": "numWithdrawals",
            "type": "number"
          },
          {
            "name": "remainingWithdrawals",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildBankTabPermissions",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canView",
            "type": "boolean"
          },
          {
            "name": "canDeposit",
            "type": "boolean"
          },
          {
            "name": "canUpdateText",
            "type": "boolean"
          },
          {
            "name": "numWithdrawls",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildBankText",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetGuildBankTransaction",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "itemLink",
            "type": "hyperlink"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "tab1",
            "type": "number"
          },
          {
            "name": "tab2",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "hour",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildBankWithdrawLimit",
        "returns": [
          {
            "name": "goldWithdrawLimit",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildBankWithdrawMoney",
        "returns": [
          {
            "name": "withdrawLimit",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumGuildBankMoneyTransactions",
        "returns": [
          {
            "name": "numTransactions",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumGuildBankTabs",
        "returns": [
          {
            "name": "numTabs",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumGuildBankTransactions",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numTransactions",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupGuildBankItem",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupGuildBankMoney",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "QueryGuildBankLog",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          }
        ]
      },
      {
        "name": "QueryGuildBankTab",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          }
        ]
      },
      {
        "name": "QueryGuildBankText",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetCurrentGuildBankTab",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetGuildBankTabPermissions",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          },
          {
            "name": "permission",
            "type": "number"
          },
          {
            "name": "enabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetGuildBankText",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          },
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "SplitGuildBankItem",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "WithdrawGuildBankMoney",
        "returns": [
          {
            "name": "canWithdraw",
            "type": "boolean"
          }
        ]
      }
    ],
    "Guild": [
      {
        "name": "AcceptGuild"
      },
      {
        "name": "BuyGuildCharter",
        "arguments": [
          {
            "name": "guildName",
            "type": "string"
          }
        ]
      },
      {
        "name": "CanEditGuildEvent",
        "returns": [
          {
            "name": "canEdit",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanEditGuildInfo",
        "returns": [
          {
            "name": "canEdit",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanEditMOTD",
        "returns": [
          {
            "name": "canEdit",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanEditOfficerNote",
        "returns": [
          {
            "name": "canEdit",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanEditPublicNote",
        "returns": [
          {
            "name": "canEdit",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanGuildDemote",
        "returns": [
          {
            "name": "canDemote",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanGuildInvite",
        "returns": [
          {
            "name": "canInvite",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanGuildPromote",
        "returns": [
          {
            "name": "canPromote",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanGuildRemove",
        "returns": [
          {
            "name": "canRemove",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanViewOfficerNote",
        "returns": [
          {
            "name": "canView",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CloseGuildRegistrar"
      },
      {
        "name": "CloseGuildRoster"
      },
      {
        "name": "CloseTabardCreation"
      },
      {
        "name": "DeclineGuild"
      },
      {
        "name": "GetGuildCharterCost",
        "returns": [
          {
            "name": "cost",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildEventInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "player1",
            "type": "string"
          },
          {
            "name": "player2",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "string"
          },
          {
            "name": "year",
            "type": "number"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "hour",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildInfo",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "guildName",
            "type": "string"
          },
          {
            "name": "guildRankName",
            "type": "string"
          },
          {
            "name": "guildRankIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildInfoText",
        "returns": [
          {
            "name": "guildInfoText",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetGuildRosterInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "string"
          },
          {
            "name": "rankIndex",
            "type": "number"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "class",
            "type": "string"
          },
          {
            "name": "zone",
            "type": "string"
          },
          {
            "name": "note",
            "type": "string"
          },
          {
            "name": "officernote",
            "type": "string"
          },
          {
            "name": "online",
            "type": "boolean"
          },
          {
            "name": "status",
            "type": "string"
          },
          {
            "name": "classFileName",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetGuildRosterLastOnline",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "years",
            "type": "number"
          },
          {
            "name": "months",
            "type": "number"
          },
          {
            "name": "days",
            "type": "number"
          },
          {
            "name": "hours",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildRosterMOTD",
        "returns": [
          {
            "name": "guildMOTD",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetGuildRosterSelection",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGuildRosterShowOffline",
        "returns": [
          {
            "name": "showOffline",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetGuildTabardFileNames",
        "returns": [
          {
            "name": "tabardBackgroundUpper",
            "type": "string"
          },
          {
            "name": "tabardBackgroundLower",
            "type": "string"
          },
          {
            "name": "tabardEmblemUpper",
            "type": "string"
          },
          {
            "name": "tabardEmblemLower",
            "type": "string"
          },
          {
            "name": "tabardBorderUpper",
            "type": "string"
          },
          {
            "name": "tabardBorderLower",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetNumGuildEvents",
        "returns": [
          {
            "name": "numEvents",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumGuildMembers",
        "arguments": [
          {
            "name": "includeOffline",
            "type": "boolean",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "numGuildMembers",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTabardCreationCost",
        "returns": [
          {
            "name": "cost",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTabardInfo"
      },
      {
        "name": "GuildControlAddRank",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "GuildControlDelRank",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "GuildControlGetNumRanks",
        "returns": [
          {
            "name": "numRanks",
            "type": "number"
          }
        ]
      },
      {
        "name": "GuildControlGetRankFlags",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GuildControlGetRankName",
        "arguments": [
          {
            "name": "rank",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "rankName",
            "type": "string"
          }
        ]
      },
      {
        "name": "GuildControlSaveRank",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "GuildControlSetRank",
        "arguments": [
          {
            "name": "rank",
            "type": "number"
          }
        ]
      },
      {
        "name": "GuildControlSetRankFlag",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "enabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GuildDemote",
        "returns": [
          {
            "name": "canDemote",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GuildDisband"
      },
      {
        "name": "GuildInfo",
        "returns": [
          {
            "name": "canEdit",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GuildInvite",
        "returns": [
          {
            "name": "canInvite",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GuildLeave"
      },
      {
        "name": "GuildPromote",
        "returns": [
          {
            "name": "canPromote",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GuildRoster"
      },
      {
        "name": "GuildRosterSetOfficerNote",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "note",
            "type": "string"
          }
        ]
      },
      {
        "name": "GuildRosterSetPublicNote",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "note",
            "type": "string"
          }
        ]
      },
      {
        "name": "GuildSetLeader",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "GuildSetMOTD",
        "arguments": [
          {
            "name": "message",
            "type": "string"
          }
        ]
      },
      {
        "name": "GuildUninvite",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "IsGuildLeader",
        "returns": [
          {
            "name": "isLeader",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsInGuild",
        "returns": [
          {
            "name": "inGuild",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "QueryGuildEventLog"
      },
      {
        "name": "SetGuildInfoText",
        "arguments": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetGuildRosterSelection",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetGuildRosterShowOffline",
        "arguments": [
          {
            "name": "showOffline",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SortGuildRoster",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          }
        ]
      },
      {
        "name": "TurnInGuildCharter"
      },
      {
        "name": "UnitIsInMyGuild",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "inGuild",
            "type": "boolean"
          }
        ]
      }
    ],
    "Hyperlink": [
      {
        "name": "GetAchievementLink",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetAuctionItemLink",
        "arguments": [
          {
            "name": "list",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetBuybackItemLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetContainerItemLink",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetCursorInfo",
        "returns": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "data",
            "type": "number"
          },
          {
            "name": "subType",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetExistingSocketLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetGlyphLink",
        "arguments": [
          {
            "name": "socket",
            "type": "number"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetGuildBankItemLink",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "item",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetGuildBankTransaction",
        "arguments": [
          {
            "name": "tab",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "itemLink",
            "type": "hyperlink"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "tab1",
            "type": "number"
          },
          {
            "name": "tab2",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "hour",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInboxItemLink",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          },
          {
            "name": "attachmentIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "itemlink",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetInventoryItemLink",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetItemGem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetLootRollItemLink",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetLootSlotLink",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetMacroItem",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetMerchantItemLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetNewSocketLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetQuestItemLink",
        "arguments": [
          {
            "name": "itemType",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetQuestLink",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetQuestLogItemLink",
        "arguments": [
          {
            "name": "itemType",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSendMailItemLink",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "itemlink",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetSpellLink",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "id",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          },
          {
            "name": "tradeLink",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTalentLink",
        "arguments": [
          {
            "name": "tabIndex",
            "type": "number"
          },
          {
            "name": "talentIndex",
            "type": "number"
          },
          {
            "name": "inspect",
            "type": "boolean"
          },
          {
            "name": "pet",
            "type": "boolean"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetTradePlayerItemLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetTradeSkillItemLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTradeSkillListLink",
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetTradeSkillReagentItemLink",
        "arguments": [
          {
            "name": "skillIndex",
            "type": "number"
          },
          {
            "name": "reagentIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetTradeSkillRecipeLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTradeTargetItemLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetTrainerServiceItemLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      }
    ],
    "In-game_movie_playback": [
      {
        "name": "GameMovieFinished"
      },
      {
        "name": "GetMovieResolution",
        "returns": [
          {
            "name": "resolution",
            "type": "number"
          }
        ]
      },
      {
        "name": "InCinematic",
        "returns": [
          {
            "name": "inCinematic",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "OpeningCinematic"
      },
      {
        "name": "StopCinematic"
      }
    ],
    "Inspect": [
      {
        "name": "CanInspect",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "showError",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "canInspect",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ClearInspectPlayer"
      },
      {
        "name": "GetInspectArenaTeamData",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "teamName",
            "type": "string"
          },
          {
            "name": "teamSize",
            "type": "number"
          },
          {
            "name": "teamRating",
            "type": "number"
          },
          {
            "name": "teamPlayed",
            "type": "number"
          },
          {
            "name": "teamWins",
            "type": "number"
          },
          {
            "name": "playerPlayed",
            "type": "number"
          },
          {
            "name": "playerRating",
            "type": "number"
          },
          {
            "name": "bg_red",
            "type": "number"
          },
          {
            "name": "bg_green",
            "type": "number"
          },
          {
            "name": "bg_blue",
            "type": "number"
          },
          {
            "name": "emblem",
            "type": "number"
          },
          {
            "name": "emblem_red",
            "type": "number"
          },
          {
            "name": "emblem_green",
            "type": "number"
          },
          {
            "name": "emblem_blue",
            "type": "number"
          },
          {
            "name": "border",
            "type": "number"
          },
          {
            "name": "border_red",
            "type": "number"
          },
          {
            "name": "border_green",
            "type": "number"
          },
          {
            "name": "border_blue",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInspectHonorData",
        "returns": [
          {
            "name": "todayHK",
            "type": "number"
          },
          {
            "name": "todayHonor",
            "type": "number"
          },
          {
            "name": "yesterdayHK",
            "type": "number"
          },
          {
            "name": "yesterdayHonor",
            "type": "number"
          },
          {
            "name": "lifetimeHK",
            "type": "number"
          },
          {
            "name": "lifetimeRank",
            "type": "number"
          }
        ]
      },
      {
        "name": "HasInspectHonorData",
        "returns": [
          {
            "name": "hasData",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "NotifyInspect",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ]
      },
      {
        "name": "RequestInspectHonorData"
      }
    ],
    "Instance": [
      {
        "name": "CanShowResetInstances",
        "returns": [
          {
            "name": "canResetInstances",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetDungeonDifficulty",
        "returns": [
          {
            "name": "difficulty",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInstanceBootTimeRemaining",
        "returns": [
          {
            "name": "timeleft",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInstanceDifficulty",
        "returns": [
          {
            "name": "difficulty",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInstanceInfo"
      },
      {
        "name": "GetInstanceLockTimeRemaining",
        "returns": [
          {
            "name": "seconds",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumSavedInstances",
        "returns": [
          {
            "name": "savedInstances",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumWorldStateUI",
        "returns": [
          {
            "name": "numUI",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSavedInstanceInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "instanceName",
            "type": "string"
          },
          {
            "name": "instanceID",
            "type": "number"
          },
          {
            "name": "instanceReset",
            "type": "number"
          },
          {
            "name": "instanceDifficulty",
            "type": "number"
          },
          {
            "name": "locked",
            "type": "boolean"
          },
          {
            "name": "extended",
            "type": "boolean"
          },
          {
            "name": "instanceIDMostSig",
            "type": "number"
          },
          {
            "name": "isRaid",
            "type": "boolean"
          },
          {
            "name": "maxPlayers",
            "type": "number"
          },
          {
            "name": "difficultyName",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetWorldStateUIInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "uiType",
            "type": "number"
          },
          {
            "name": "state",
            "type": "number"
          },
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "dynamicIcon",
            "type": "string"
          },
          {
            "name": "tooltip",
            "type": "string"
          },
          {
            "name": "dynamicTooltip",
            "type": "string"
          },
          {
            "name": "extendedUI",
            "type": "string"
          },
          {
            "name": "extendedUIState1",
            "type": "number"
          },
          {
            "name": "extendedUIState2",
            "type": "number"
          },
          {
            "name": "extendedUIState3",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsInInstance",
        "returns": [
          {
            "name": "isInstance",
            "type": "boolean"
          },
          {
            "name": "instanceType",
            "type": "string"
          }
        ]
      },
      {
        "name": "LFGTeleport",
        "arguments": [
          {
            "name": "portOut",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "RequestRaidInfo"
      },
      {
        "name": "ResetInstances",
        "returns": [
          {
            "name": "canResetInstances",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "RespondInstanceLock",
        "arguments": [
          {
            "name": "response",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetDungeonDifficulty",
        "arguments": [
          {
            "name": "difficulty",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetRaidDifficulty",
        "arguments": [
          {
            "name": "difficulty",
            "type": "number"
          }
        ]
      }
    ],
    "Inventory": [
      {
        "name": "AutoEquipCursorItem"
      },
      {
        "name": "BankButtonIDToInvSlotID",
        "arguments": [
          {
            "name": "buttonID",
            "type": "number"
          },
          {
            "name": "isBag",
            "type": "boolean",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "inventoryID",
            "type": "number"
          }
        ]
      },
      {
        "name": "CancelPendingEquip",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "ContainerIDToInventoryID",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "inventoryID",
            "type": "number"
          }
        ]
      },
      {
        "name": "CursorCanGoInSlot",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canBePlaced",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "EquipCursorItem"
      },
      {
        "name": "EquipItemByName",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "EquipPendingItem",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "EquipmentManager_UnpackLocation",
        "arguments": [
          {
            "name": "location",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "player",
            "type": "boolean"
          },
          {
            "name": "bank",
            "type": "boolean"
          },
          {
            "name": "bags",
            "type": "boolean"
          },
          {
            "name": "location or slot",
            "type": "number"
          },
          {
            "name": "bag",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInventoryAlertStatus",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "status",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInventoryItemBroken",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isBroken",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetInventoryItemCooldown",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInventoryItemCount",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInventoryItemDurability",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "durability",
            "type": "number"
          },
          {
            "name": "max",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInventoryItemGems",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "gem1",
            "type": "number"
          },
          {
            "name": "gem2",
            "type": "number"
          },
          {
            "name": "gem3",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInventoryItemID",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInventoryItemLink",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetInventoryItemQuality",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "quality",
            "type": "itemQuality"
          }
        ]
      },
      {
        "name": "GetInventoryItemTexture",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetInventoryItemsForSlot",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "availableItems",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetInventorySlotInfo",
        "arguments": [
          {
            "name": "slotName",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "checkRelic",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsEquippedItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isEquipped",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsEquippedItemType",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isEquipped",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsInventoryItemLocked",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isLocked",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "KeyRingButtonIDToInvSlotID",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupInventoryItem",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetInventoryPortraitTexture",
        "arguments": [
          {
            "name": "texture",
            "type": "table"
          },
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "SocketInventoryItem",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "UpdateInventoryAlertStatus"
      },
      {
        "name": "UseInventoryItem",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      }
    ],
    "Item_Text": [
      {
        "name": "CloseItemText"
      },
      {
        "name": "ItemTextGetCreator",
        "returns": [
          {
            "name": "creator",
            "type": "string"
          }
        ]
      },
      {
        "name": "ItemTextGetItem",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "ItemTextGetMaterial",
        "returns": [
          {
            "name": "material",
            "type": "string"
          }
        ]
      },
      {
        "name": "ItemTextGetPage",
        "returns": [
          {
            "name": "page",
            "type": "number"
          }
        ]
      },
      {
        "name": "ItemTextGetText",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "ItemTextHasNextPage",
        "returns": [
          {
            "name": "next",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ItemTextNextPage"
      },
      {
        "name": "ItemTextPrevPage"
      }
    ],
    "Item": [
      {
        "name": "BindEnchant"
      },
      {
        "name": "CancelPendingEquip",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "ConfirmBindOnUse"
      },
      {
        "name": "CursorHasItem",
        "returns": [
          {
            "name": "hasItem",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "DeleteCursorItem"
      },
      {
        "name": "EndBoundTradeable",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "name": "EndRefund",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "name": "EquipItemByName",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "EquipPendingItem",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetItemCooldown",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetItemCount",
        "arguments": [
          {
            "name": "itemId",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          },
          {
            "name": "includeBank",
            "type": "boolean",
            "optional": true
          },
          {
            "name": "includeCharges",
            "type": "boolean",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "itemCount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetItemFamily",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "bagType",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetItemGem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetItemIcon",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetItemInfo",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "link",
            "type": "string"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          },
          {
            "name": "iLevel",
            "type": "number"
          },
          {
            "name": "reqLevel",
            "type": "number"
          },
          {
            "name": "class",
            "type": "string"
          },
          {
            "name": "subclass",
            "type": "string"
          },
          {
            "name": "maxStack",
            "type": "number"
          },
          {
            "name": "equipSlot",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "vendorPrice",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetItemQualityColor",
        "arguments": [
          {
            "name": "quality",
            "type": "itemQuality"
          }
        ],
        "returns": [
          {
            "name": "redComponent",
            "type": "number"
          },
          {
            "name": "greenComponent",
            "type": "number"
          },
          {
            "name": "blueComponent",
            "type": "number"
          },
          {
            "name": "hexColor",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetItemSpell",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetItemStatDelta",
        "arguments": [
          {
            "name": "item1Link",
            "type": "string"
          },
          {
            "name": "item2Link",
            "type": "string"
          },
          {
            "name": "returnTable",
            "type": "table",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "statTable",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetItemStats",
        "arguments": [
          {
            "name": "itemLink",
            "type": "string"
          },
          {
            "name": "returnTable",
            "type": "table",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "statTable",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetItemUniqueness",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "uniqueFamily",
            "type": "number"
          },
          {
            "name": "maxEquipped",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsConsumableItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "consumable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsCurrentItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isItem",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsDressableItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isDressable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsEquippableItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isEquippable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsEquippedItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isEquipped",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsEquippedItemType",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isEquipped",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsHarmfulItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isHarmful",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsHelpfulItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isHarmful",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsItemInRange",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "inRange",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsUsableItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isUsable",
            "type": "boolean"
          },
          {
            "name": "notEnoughMana",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ItemHasRange",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "hasRange",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PickupItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ReplaceEnchant"
      },
      {
        "name": "SpellCanTargetItem",
        "returns": [
          {
            "name": "canTarget",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SpellTargetItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "UseItemByName",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "target",
            "type": "string"
          }
        ]
      }
    ],
    "Keybind": [
      {
        "name": "ClearOverrideBindings",
        "arguments": [
          {
            "name": "owner",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetBinding",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "commandName",
            "type": "string"
          },
          {
            "name": "binding1",
            "type": "string"
          },
          {
            "name": "binding2",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetBindingAction",
        "arguments": [
          {
            "name": "key",
            "type": "string"
          },
          {
            "name": "checkOverride",
            "type": "boolean",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "action",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetBindingByKey",
        "arguments": [
          {
            "name": "key",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "action",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetBindingKey",
        "arguments": [
          {
            "name": "COMMAND",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "key1",
            "type": "string"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetCurrentBindingSet",
        "returns": [
          {
            "name": "bindingSet",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumBindings",
        "returns": [
          {
            "name": "numBindings",
            "type": "number"
          }
        ]
      },
      {
        "name": "LoadBindings",
        "arguments": [
          {
            "name": "set",
            "type": "number"
          }
        ]
      },
      {
        "name": "RunBinding",
        "arguments": [
          {
            "name": "COMMAND",
            "type": "string"
          }
        ]
      },
      {
        "name": "SaveBindings",
        "arguments": [
          {
            "name": "set",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetBinding",
        "arguments": [
          {
            "name": "key",
            "type": "string"
          },
          {
            "name": "command",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "success",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetBindingClick",
        "arguments": [
          {
            "name": "key",
            "type": "string"
          },
          {
            "name": "buttonName",
            "type": "string"
          },
          {
            "name": "mouseButton",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "success",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetBindingItem",
        "arguments": [
          {
            "name": "key",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "success",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetBindingMacro",
        "arguments": [
          {
            "name": "key",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "success",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetBindingSpell",
        "arguments": [
          {
            "name": "key",
            "type": "string"
          },
          {
            "name": "spellname",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "success",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetMouselookOverrideBinding",
        "arguments": [
          {
            "name": "key",
            "type": "string"
          },
          {
            "name": "binding",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetOverrideBinding",
        "arguments": [
          {
            "name": "owner",
            "type": "table"
          },
          {
            "name": "isPriority",
            "type": "boolean"
          },
          {
            "name": "key",
            "type": "string"
          },
          {
            "name": "command",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetOverrideBindingClick",
        "arguments": [
          {
            "name": "owner",
            "type": "table"
          },
          {
            "name": "isPriority",
            "type": "boolean"
          },
          {
            "name": "key",
            "type": "string"
          },
          {
            "name": "buttonName",
            "type": "string"
          },
          {
            "name": "mouseButton",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "SetOverrideBindingItem",
        "arguments": [
          {
            "name": "owner",
            "type": "table",
            "optional": true
          },
          {
            "name": "isPriority",
            "type": "boolean",
            "optional": true
          },
          {
            "name": "key",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "SetOverrideBindingMacro",
        "arguments": [
          {
            "name": "owner",
            "type": "table",
            "optional": true
          },
          {
            "name": "isPriority",
            "type": "boolean",
            "optional": true
          },
          {
            "name": "key",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "SetOverrideBindingSpell",
        "arguments": [
          {
            "name": "owner",
            "type": "table"
          },
          {
            "name": "isPriority",
            "type": "boolean"
          },
          {
            "name": "key",
            "type": "string"
          },
          {
            "name": "spellname",
            "type": "string"
          }
        ]
      }
    ],
    "Keyboard": [
      {
        "name": "GetCurrentKeyBoardFocus",
        "returns": [
          {
            "name": "frame",
            "type": "table"
          }
        ]
      },
      {
        "name": "IsAltKeyDown",
        "returns": [
          {
            "name": "isDown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsControlKeyDown",
        "returns": [
          {
            "name": "isDown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsLeftAltKeyDown",
        "returns": [
          {
            "name": "isDown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsLeftControlKeyDown",
        "returns": [
          {
            "name": "isDown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsLeftShiftKeyDown",
        "returns": [
          {
            "name": "isDown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsModifierKeyDown",
        "returns": [
          {
            "name": "isDown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsRightAltKeyDown",
        "returns": [
          {
            "name": "isDown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsRightControlKeyDown",
        "returns": [
          {
            "name": "isDown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsRightShiftKeyDown",
        "returns": [
          {
            "name": "isDown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsShiftKeyDown",
        "returns": [
          {
            "name": "isDown",
            "type": "boolean"
          }
        ]
      }
    ],
    "Knowledge-base": [
      {
        "name": "KBArticle_BeginLoading",
        "arguments": [
          {
            "name": "articleId",
            "type": "number"
          },
          {
            "name": "searchType",
            "type": "number"
          }
        ]
      },
      {
        "name": "KBArticle_GetData",
        "returns": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "subject",
            "type": "string"
          },
          {
            "name": "subjectAlt",
            "type": "string"
          },
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "keywords",
            "type": "string"
          },
          {
            "name": "languageId",
            "type": "number"
          },
          {
            "name": "isHot",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "KBArticle_IsLoaded",
        "returns": [
          {
            "name": "isLoaded",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "KBQuery_BeginLoading",
        "arguments": [
          {
            "name": "searchText",
            "type": "string"
          },
          {
            "name": "categoryIndex",
            "type": "number"
          },
          {
            "name": "subcategoryIndex",
            "type": "number"
          },
          {
            "name": "numArticles",
            "type": "number"
          },
          {
            "name": "page",
            "type": "number"
          }
        ]
      },
      {
        "name": "KBQuery_GetArticleHeaderCount",
        "returns": [
          {
            "name": "articleHeaderCount",
            "type": "number"
          }
        ]
      },
      {
        "name": "KBQuery_GetArticleHeaderData",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "articleId",
            "type": "number"
          },
          {
            "name": "title",
            "type": "string"
          },
          {
            "name": "isHotIssue",
            "type": "boolean"
          },
          {
            "name": "isRecentlyUpdated",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "KBQuery_GetTotalArticleCount",
        "returns": [
          {
            "name": "totalArticleHeaderCount",
            "type": "number"
          }
        ]
      },
      {
        "name": "KBQuery_IsLoaded",
        "returns": [
          {
            "name": "isLoaded",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "KBSetup_BeginLoading",
        "arguments": [
          {
            "name": "numArticles",
            "type": "number"
          },
          {
            "name": "currentPage",
            "type": "number"
          }
        ]
      },
      {
        "name": "KBSetup_GetArticleHeaderCount",
        "returns": [
          {
            "name": "articleHeaderCount",
            "type": "number"
          }
        ]
      },
      {
        "name": "KBSetup_GetArticleHeaderData",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "articleId",
            "type": "number"
          },
          {
            "name": "title",
            "type": "string"
          },
          {
            "name": "isHotIssue",
            "type": "boolean"
          },
          {
            "name": "isRecentlyUpdated",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "KBSetup_GetCategoryCount",
        "returns": [
          {
            "name": "numCategories",
            "type": "number"
          }
        ]
      },
      {
        "name": "KBSetup_GetCategoryData",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "categoryId",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "KBSetup_GetLanguageCount",
        "returns": [
          {
            "name": "numLanguages",
            "type": "number"
          }
        ]
      },
      {
        "name": "KBSetup_GetLanguageData",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "languageId",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "KBSetup_GetSubCategoryCount",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numSubCategories",
            "type": "number"
          }
        ]
      },
      {
        "name": "KBSetup_GetSubCategoryData",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "subindex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "categoryId",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "KBSetup_GetTotalArticleCount",
        "returns": [
          {
            "name": "numArticles",
            "type": "number"
          }
        ]
      },
      {
        "name": "KBSetup_IsLoaded",
        "returns": [
          {
            "name": "isLoaded",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "KBSystem_GetMOTD",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "KBSystem_GetServerNotice",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "KBSystem_GetServerStatus",
        "returns": [
          {
            "name": "statusMessage",
            "type": "string"
          }
        ]
      }
    ],
    "Limited_play_time": [
      {
        "name": "GetBillingTimeRested",
        "returns": [
          {
            "name": "time",
            "type": "number"
          }
        ]
      },
      {
        "name": "NoPlayTime",
        "returns": [
          {
            "name": "hasNoTime",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PartialPlayTime",
        "returns": [
          {
            "name": "partialPlayTime",
            "type": "boolean"
          }
        ]
      }
    ],
    "Locale-specific": [
      {
        "name": "DeclineName",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "gender",
            "type": "number"
          },
          {
            "name": "declensionSet",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "genitive",
            "type": "string"
          },
          {
            "name": "dative",
            "type": "string"
          },
          {
            "name": "accusative",
            "type": "string"
          },
          {
            "name": "instrumental",
            "type": "string"
          },
          {
            "name": "prepositional",
            "type": "string"
          }
        ]
      },
      {
        "name": "FillLocalizedClassList",
        "arguments": [
          {
            "name": "table",
            "type": "number"
          },
          {
            "name": "female",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "GetNumDeclensionSets",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "gender",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numSets",
            "type": "number"
          }
        ]
      }
    ],
    "Looking_for_group": [
      {
        "name": "GetLFGMode",
        "returns": [
          {
            "name": "mode",
            "type": "string"
          },
          {
            "name": "submode",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetLFGRoles",
        "returns": [
          {
            "name": "leader",
            "type": "boolean"
          },
          {
            "name": "tank",
            "type": "boolean"
          },
          {
            "name": "healer",
            "type": "boolean"
          },
          {
            "name": "damage",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetLFGTypes",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "SetLFGComment",
        "arguments": [
          {
            "name": "comment",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetLFGRoles",
        "arguments": [
          {
            "name": "leader",
            "type": "boolean"
          },
          {
            "name": "tank",
            "type": "boolean"
          },
          {
            "name": "healer",
            "type": "boolean"
          },
          {
            "name": "damage",
            "type": "boolean"
          }
        ]
      }
    ],
    "Loot": [
      {
        "name": "CloseLoot"
      },
      {
        "name": "ConfirmLootRoll",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "rollType",
            "type": "number"
          }
        ]
      },
      {
        "name": "ConfirmLootSlot",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetLootMethod",
        "returns": [
          {
            "name": "method",
            "type": "string"
          },
          {
            "name": "partyMaster",
            "type": "number"
          },
          {
            "name": "raidMaster",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetLootRollItemInfo",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          },
          {
            "name": "bindOnPickUp",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetLootRollItemLink",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetLootRollTimeLeft",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "timeLeft",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetLootSlotInfo",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "item",
            "type": "string"
          },
          {
            "name": "quantity",
            "type": "number"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          },
          {
            "name": "locked",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetLootSlotLink",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetLootThreshold",
        "returns": [
          {
            "name": "threshold",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMasterLootCandidate",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "candidate",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetNumLootItems",
        "returns": [
          {
            "name": "numItems",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetOptOutOfLoot",
        "returns": [
          {
            "name": "isOptOut",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GiveMasterLoot",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsFishingLoot",
        "returns": [
          {
            "name": "isFishing",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "LootSlot",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "LootSlotIsCoin",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isCoin",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "LootSlotIsItem",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isItem",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "RollOnLoot",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "rollType",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetLootMethod",
        "arguments": [
          {
            "name": "method",
            "type": "string"
          },
          {
            "name": "master",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "SetLootPortrait",
        "arguments": [
          {
            "name": "texture",
            "type": "table"
          }
        ]
      },
      {
        "name": "SetLootThreshold",
        "arguments": [
          {
            "name": "threshold",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetOptOutOfLoot",
        "arguments": [
          {
            "name": "enable",
            "type": "boolean"
          }
        ]
      }
    ],
    "Lua_library": [
      {
        "name": "abs",
        "arguments": [
          {
            "name": "x",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "absoluteValue",
            "type": "number"
          }
        ]
      },
      {
        "name": "ceil",
        "arguments": [
          {
            "name": "x",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "ceiling",
            "type": "number"
          }
        ]
      },
      {
        "name": "collectgarbage",
        "arguments": [
          {
            "name": "option",
            "type": "string"
          },
          {
            "name": "arg",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "date",
        "arguments": [
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          }
        ]
      },
      {
        "name": "deg",
        "arguments": [
          {
            "name": "radians",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "degrees",
            "type": "number"
          }
        ]
      },
      {
        "name": "difftime",
        "arguments": [
          {
            "name": "time2",
            "type": "number"
          },
          {
            "name": "time1",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "seconds",
            "type": "number"
          }
        ]
      },
      {
        "name": "error",
        "arguments": [
          {
            "name": "message",
            "type": "string"
          },
          {
            "name": "level",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "exp",
        "arguments": [
          {
            "name": "x",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "exp",
            "type": "number"
          }
        ]
      },
      {
        "name": "floor",
        "arguments": [
          {
            "name": "x",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "floor",
            "type": "number"
          }
        ]
      },
      {
        "name": "foreach"
      },
      {
        "name": "foreachi"
      },
      {
        "name": "format",
        "arguments": [
          {
            "name": "formatString",
            "type": "string"
          },
          {
            "name": "...",
            "type": "table"
          }
        ],
        "returns": [
          {
            "name": "formatted",
            "type": "number"
          }
        ]
      },
      {
        "name": "frexp",
        "arguments": [
          {
            "name": "x",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "m",
            "type": "number"
          },
          {
            "name": "e",
            "type": "number"
          }
        ]
      },
      {
        "name": "gcinfo",
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "getfenv",
        "arguments": [
          {
            "name": "f",
            "type": "function",
            "optional": true
          },
          {
            "name": "stackLevel",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "env",
            "type": "table"
          }
        ]
      },
      {
        "name": "getmetatable",
        "arguments": [
          {
            "name": "object",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "metatable",
            "type": "string"
          }
        ]
      },
      {
        "name": "getn"
      },
      {
        "name": "gmatch",
        "arguments": [
          {
            "name": "s",
            "type": "string"
          },
          {
            "name": "pattern",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "iterator",
            "type": "function"
          }
        ]
      },
      {
        "name": "gsub",
        "arguments": [
          {
            "name": "s",
            "type": "string",
            "optional": true
          },
          {
            "name": "pattern",
            "type": "string",
            "optional": true
          },
          {
            "name": "rep",
            "type": "string",
            "optional": true
          },
          {
            "name": "repTable",
            "type": "table",
            "optional": true
          },
          {
            "name": "repFunc",
            "type": "function",
            "optional": true
          },
          {
            "name": "maxReplaced",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "newString",
            "type": "string"
          },
          {
            "name": "numMatched",
            "type": "number"
          }
        ]
      },
      {
        "name": "ipairs",
        "arguments": [
          {
            "name": "t",
            "type": "table"
          }
        ],
        "returns": [
          {
            "name": "iterator",
            "type": "function"
          },
          {
            "name": "t",
            "type": "table"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "ldexp",
        "arguments": [
          {
            "name": "m",
            "type": "number"
          },
          {
            "name": "e",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "x",
            "type": "number"
          }
        ]
      },
      {
        "name": "loadstring",
        "arguments": [
          {
            "name": "s",
            "type": "string"
          },
          {
            "name": "chunkname",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "chunk",
            "type": "function"
          },
          {
            "name": "error",
            "type": "string"
          }
        ]
      },
      {
        "name": "log"
      },
      {
        "name": "log10",
        "arguments": [
          {
            "name": "x",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "base10log",
            "type": "number"
          }
        ]
      },
      {
        "name": "max",
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "min",
        "arguments": [
          {
            "name": "team",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "next",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "nextID",
            "type": "number"
          },
          {
            "name": "completed",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "pairs",
        "arguments": [
          {
            "name": "t",
            "type": "table"
          }
        ],
        "returns": [
          {
            "name": "iterator",
            "type": "function"
          },
          {
            "name": "t",
            "type": "table"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "pcall",
        "arguments": [
          {
            "name": "f",
            "type": "function"
          },
          {
            "name": "...",
            "type": "table"
          }
        ],
        "returns": [
          {
            "name": "status",
            "type": "boolean"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "rad"
      },
      {
        "name": "random"
      },
      {
        "name": "rawequal",
        "arguments": [
          {
            "name": "v1",
            "type": "string"
          },
          {
            "name": "v2",
            "type": "function"
          }
        ],
        "returns": [
          {
            "name": "isEqual",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "rawget",
        "arguments": [
          {
            "name": "t",
            "type": "table"
          },
          {
            "name": "key",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "value",
            "type": "string"
          }
        ]
      },
      {
        "name": "rawset",
        "arguments": [
          {
            "name": "t",
            "type": "table"
          },
          {
            "name": "key",
            "type": "string"
          },
          {
            "name": "value",
            "type": "string"
          }
        ]
      },
      {
        "name": "select"
      },
      {
        "name": "setfenv",
        "arguments": [
          {
            "name": "f",
            "type": "function",
            "optional": true
          },
          {
            "name": "stackLevel",
            "type": "number",
            "optional": true
          },
          {
            "name": "t",
            "type": "table",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "f",
            "type": "function"
          }
        ]
      },
      {
        "name": "setmetatable",
        "arguments": [
          {
            "name": "t",
            "type": "table"
          },
          {
            "name": "metatable",
            "type": "table"
          }
        ],
        "returns": [
          {
            "name": "t",
            "type": "table"
          }
        ]
      },
      {
        "name": "sort",
        "returns": [
          {
            "name": "criterion",
            "type": "string"
          },
          {
            "name": "reverse",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "sqrt",
        "arguments": [
          {
            "name": "x",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "root",
            "type": "number"
          }
        ]
      },
      {
        "name": "strbyte",
        "arguments": [
          {
            "name": "s",
            "type": "string"
          },
          {
            "name": "firstChar",
            "type": "number"
          },
          {
            "name": "lastChar",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "value",
            "type": "number"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "strchar",
        "arguments": [
          {
            "name": "n",
            "type": "number"
          },
          {
            "name": "...",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "s",
            "type": "number"
          }
        ]
      },
      {
        "name": "strfind",
        "arguments": [
          {
            "name": "s",
            "type": "string"
          },
          {
            "name": "pattern",
            "type": "string"
          },
          {
            "name": "init",
            "type": "number"
          },
          {
            "name": "plain",
            "type": "boolean",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "end",
            "type": "number"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "strlen",
        "arguments": [
          {
            "name": "s",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "length",
            "type": "number"
          }
        ]
      },
      {
        "name": "strlower",
        "arguments": [
          {
            "name": "s",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "lowerCase",
            "type": "string"
          }
        ]
      },
      {
        "name": "strmatch",
        "arguments": [
          {
            "name": "s",
            "type": "string"
          },
          {
            "name": "pattern",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "match",
            "type": "string"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "strrep",
        "arguments": [
          {
            "name": "s",
            "type": "string"
          },
          {
            "name": "n",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "repeated",
            "type": "string"
          }
        ]
      },
      {
        "name": "strrev",
        "arguments": [
          {
            "name": "s",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "s",
            "type": "string"
          }
        ]
      },
      {
        "name": "strsub",
        "arguments": [
          {
            "name": "s",
            "type": "string"
          },
          {
            "name": "firstChar",
            "type": "number"
          },
          {
            "name": "lastChar",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "s",
            "type": "string"
          }
        ]
      },
      {
        "name": "strupper",
        "arguments": [
          {
            "name": "str",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "lowerCase",
            "type": "string"
          }
        ]
      },
      {
        "name": "time",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "weekday",
            "type": "number"
          },
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "day",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          },
          {
            "name": "hour",
            "type": "number"
          },
          {
            "name": "minute",
            "type": "number"
          }
        ]
      },
      {
        "name": "tinsert",
        "arguments": [
          {
            "name": "table",
            "type": "table"
          },
          {
            "name": "position",
            "type": "number",
            "optional": true
          },
          {
            "name": "value",
            "type": "string"
          }
        ]
      },
      {
        "name": "tonumber",
        "arguments": [
          {
            "name": "x",
            "type": "string"
          },
          {
            "name": "base",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "numValue",
            "type": "number"
          }
        ]
      },
      {
        "name": "tostring",
        "arguments": [
          {
            "name": "value",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "stringValue",
            "type": "string"
          }
        ]
      },
      {
        "name": "unpack",
        "arguments": [
          {
            "name": "location",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "player",
            "type": "boolean"
          },
          {
            "name": "bank",
            "type": "boolean"
          },
          {
            "name": "bags",
            "type": "boolean"
          },
          {
            "name": "location or slot",
            "type": "number"
          },
          {
            "name": "bag",
            "type": "number"
          }
        ]
      },
      {
        "name": "xpcall",
        "arguments": [
          {
            "name": "f",
            "type": "function"
          },
          {
            "name": "err",
            "type": "function"
          }
        ],
        "returns": [
          {
            "name": "status",
            "type": "boolean"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      }
    ],
    "Mac_client": [
      {
        "name": "IsMacClient",
        "returns": [
          {
            "name": "isMac",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "MovieRecording_Cancel"
      },
      {
        "name": "MovieRecording_DataRate",
        "arguments": [
          {
            "name": "width",
            "type": "number"
          },
          {
            "name": "framerate",
            "type": "number"
          },
          {
            "name": "sound",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "dataRate",
            "type": "string"
          }
        ]
      },
      {
        "name": "MovieRecording_DeleteMovie",
        "arguments": [
          {
            "name": "filename",
            "type": "string"
          }
        ]
      },
      {
        "name": "MovieRecording_GetAspectRatio",
        "returns": [
          {
            "name": "ratio",
            "type": "number"
          }
        ]
      },
      {
        "name": "MovieRecording_GetMovieFullPath",
        "returns": [
          {
            "name": "path",
            "type": "string"
          }
        ]
      },
      {
        "name": "MovieRecording_GetProgress",
        "returns": [
          {
            "name": "recovering",
            "type": "boolean"
          },
          {
            "name": "progress",
            "type": "number"
          }
        ]
      },
      {
        "name": "MovieRecording_GetTime",
        "returns": [
          {
            "name": "time",
            "type": "string"
          }
        ]
      },
      {
        "name": "MovieRecording_GetViewportWidth",
        "returns": [
          {
            "name": "width",
            "type": "number"
          }
        ]
      },
      {
        "name": "MovieRecording_IsCodecSupported",
        "arguments": [
          {
            "name": "codecID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isSupported",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "MovieRecording_IsCompressing",
        "returns": [
          {
            "name": "isCompressing",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "MovieRecording_IsCursorRecordingSupported",
        "returns": [
          {
            "name": "isSupported",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "MovieRecording_IsRecording",
        "returns": [
          {
            "name": "isRecording",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "MovieRecording_IsSupported",
        "returns": [
          {
            "name": "isSupported",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "MovieRecording_MaxLength",
        "arguments": [
          {
            "name": "width",
            "type": "number"
          },
          {
            "name": "framerate",
            "type": "number"
          },
          {
            "name": "sound",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "time",
            "type": "string"
          }
        ]
      },
      {
        "name": "MovieRecording_QueueMovieToCompress",
        "arguments": [
          {
            "name": "filename",
            "type": "string"
          }
        ]
      },
      {
        "name": "MovieRecording_SearchUncompressedMovie",
        "arguments": [
          {
            "name": "enable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "MovieRecording_Toggle"
      },
      {
        "name": "MovieRecording_ToggleGUI"
      },
      {
        "name": "MusicPlayer_BackTrack"
      },
      {
        "name": "MusicPlayer_NextTrack"
      },
      {
        "name": "MusicPlayer_PlayPause"
      },
      {
        "name": "MusicPlayer_VolumeDown"
      },
      {
        "name": "MusicPlayer_VolumeUp"
      }
    ],
    "Macro": [
      {
        "name": "CreateMacro",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "number"
          },
          {
            "name": "body",
            "type": "string"
          },
          {
            "name": "perCharacter",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CursorHasMacro",
        "returns": [
          {
            "name": "hasMacro",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "DeleteMacro",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "EditMacro",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "iconTexture",
            "type": "string"
          },
          {
            "name": "body",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "newIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMacroBody",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "body",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetMacroIconInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetMacroIndexByName",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMacroInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "body",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetMacroItem",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetMacroItemIconInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetMacroSpell",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetNumMacroIcons",
        "returns": [
          {
            "name": "numMacroIcons",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumMacroItemIcons",
        "returns": [
          {
            "name": "numIcons",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumMacros",
        "returns": [
          {
            "name": "numAccountMacros",
            "type": "number"
          },
          {
            "name": "numCharacterMacros",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRunningMacro",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRunningMacroButton",
        "returns": [
          {
            "name": "button",
            "type": "string"
          }
        ]
      },
      {
        "name": "PickupMacro",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "RunMacro",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "\"button\"",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "RunMacroText",
        "arguments": [
          {
            "name": "\"text\"",
            "type": "string"
          },
          {
            "name": "\"button\"",
            "type": "string"
          }
        ]
      },
      {
        "name": "SecureCmdOptionParse",
        "arguments": [
          {
            "name": "cmd",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "action",
            "type": "string"
          },
          {
            "name": "target",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetMacroItem",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "item",
            "type": "string",
            "optional": true
          },
          {
            "name": "target",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "SetMacroSpell",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "spell",
            "type": "string",
            "optional": true
          },
          {
            "name": "target",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "StopMacro"
      }
    ],
    "Mail": [
      {
        "name": "AutoLootMailItem",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          }
        ]
      },
      {
        "name": "CanComplainInboxItem",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "complain",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CheckInbox"
      },
      {
        "name": "ClearSendMail"
      },
      {
        "name": "ClickSendMailItemButton",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "autoReturn",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CloseMail"
      },
      {
        "name": "ComplainInboxItem",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "complain",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "DeleteInboxItem",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInboxHeaderInfo",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "packageIcon",
            "type": "string"
          },
          {
            "name": "stationeryIcon",
            "type": "string"
          },
          {
            "name": "sender",
            "type": "string"
          },
          {
            "name": "subject",
            "type": "string"
          },
          {
            "name": "money",
            "type": "number"
          },
          {
            "name": "CODAmount",
            "type": "number"
          },
          {
            "name": "daysLeft",
            "type": "number"
          },
          {
            "name": "itemCount",
            "type": "number"
          },
          {
            "name": "wasRead",
            "type": "boolean"
          },
          {
            "name": "wasReturned",
            "type": "boolean"
          },
          {
            "name": "textCreated",
            "type": "boolean"
          },
          {
            "name": "canReply",
            "type": "boolean"
          },
          {
            "name": "isGM",
            "type": "boolean"
          },
          {
            "name": "itemQuantity",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInboxInvoiceInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "invoiceType",
            "type": "string"
          },
          {
            "name": "itemName",
            "type": "string"
          },
          {
            "name": "playerName",
            "type": "string"
          },
          {
            "name": "bid",
            "type": "number"
          },
          {
            "name": "buyout",
            "type": "number"
          },
          {
            "name": "deposit",
            "type": "number"
          },
          {
            "name": "consignment",
            "type": "number"
          },
          {
            "name": "moneyDelay",
            "type": "number"
          },
          {
            "name": "etaHour",
            "type": "number"
          },
          {
            "name": "etaMin",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInboxItem",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          },
          {
            "name": "attachmentIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "itemTexture",
            "type": "string"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          },
          {
            "name": "canUse",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetInboxItemLink",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          },
          {
            "name": "attachmentIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "itemlink",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetInboxNumItems",
        "returns": [
          {
            "name": "numItems",
            "type": "number"
          },
          {
            "name": "totalItems",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetInboxText",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "bodyText",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "isTakeable",
            "type": "boolean"
          },
          {
            "name": "isInvoice",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetLatestThreeSenders",
        "returns": [
          {
            "name": "sender1",
            "type": "string"
          },
          {
            "name": "sender2",
            "type": "string"
          },
          {
            "name": "sender3",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetNumPackages"
      },
      {
        "name": "GetNumStationeries",
        "returns": [
          {
            "name": "numStationeries",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPackageInfo"
      },
      {
        "name": "GetSelectedStationeryTexture",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSendMailCOD",
        "returns": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSendMailItem",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "itemName",
            "type": "string"
          },
          {
            "name": "itemTexture",
            "type": "string"
          },
          {
            "name": "stackCount",
            "type": "string"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          }
        ]
      },
      {
        "name": "GetSendMailItemLink",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "itemlink",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetSendMailMoney",
        "returns": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSendMailPrice",
        "returns": [
          {
            "name": "price",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetStationeryInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "cost",
            "type": "number"
          }
        ]
      },
      {
        "name": "HasNewMail",
        "returns": [
          {
            "name": "hasMail",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "InboxItemCanDelete",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canDelete",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ReturnInboxItem",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          }
        ]
      },
      {
        "name": "SelectPackage"
      },
      {
        "name": "SelectStationery",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SendMail"
      },
      {
        "name": "SetSendMailCOD",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetSendMailMoney",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "success",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetSendMailShowing",
        "arguments": [
          {
            "name": "enable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "TakeInboxItem",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          },
          {
            "name": "attachmentIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "TakeInboxMoney",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          }
        ]
      },
      {
        "name": "TakeInboxTextItem",
        "arguments": [
          {
            "name": "mailID",
            "type": "number"
          }
        ]
      }
    ],
    "Map": [
      {
        "name": "ClickLandmark",
        "arguments": [
          {
            "name": "mapLinkID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCorpseMapPosition",
        "returns": [
          {
            "name": "corpseX",
            "type": "number"
          },
          {
            "name": "corpseY",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCurrentMapAreaID",
        "returns": [
          {
            "name": "areaID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCurrentMapContinent",
        "returns": [
          {
            "name": "continent",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCurrentMapDungeonLevel",
        "returns": [
          {
            "name": "level",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCurrentMapZone",
        "returns": [
          {
            "name": "zone",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetDeathReleasePosition",
        "returns": [
          {
            "name": "graveyardX",
            "type": "number"
          },
          {
            "name": "graveyardY",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMapContinents",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetMapInfo"
      },
      {
        "name": "GetMapLandmarkInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "textureIndex",
            "type": "number"
          },
          {
            "name": "x",
            "type": "number"
          },
          {
            "name": "y",
            "type": "number"
          },
          {
            "name": "mapLinkID",
            "type": "number"
          },
          {
            "name": "showInBattleMap",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetMapOverlayInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "textureName",
            "type": "string"
          },
          {
            "name": "textureWidth",
            "type": "number"
          },
          {
            "name": "textureHeight",
            "type": "number"
          },
          {
            "name": "offsetX",
            "type": "number"
          },
          {
            "name": "offsetY",
            "type": "number"
          },
          {
            "name": "mapPointX",
            "type": "number"
          },
          {
            "name": "mapPointY",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMapZones",
        "arguments": [
          {
            "name": "continentIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetNumBattlefieldVehicles",
        "returns": [
          {
            "name": "numVehicles",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumDungeonMapLevels",
        "returns": [
          {
            "name": "numLevels",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumMapLandmarks",
        "returns": [
          {
            "name": "numLandmarks",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumMapOverlays",
        "returns": [
          {
            "name": "numOverlays",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPlayerFacing",
        "returns": [
          {
            "name": "facing",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPlayerMapPosition",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "unitX",
            "type": "number"
          },
          {
            "name": "unitY",
            "type": "number"
          }
        ]
      },
      {
        "name": "InitWorldMapPing"
      },
      {
        "name": "ProcessMapClick",
        "arguments": [
          {
            "name": "clickX",
            "type": "number"
          },
          {
            "name": "clickY",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetDungeonMapLevel",
        "arguments": [
          {
            "name": "level",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetMapToCurrentZone"
      },
      {
        "name": "SetMapZoom",
        "arguments": [
          {
            "name": "continentIndex",
            "type": "number"
          },
          {
            "name": "zoneIndex",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "UpdateMapHighlight",
        "arguments": [
          {
            "name": "cursorX",
            "type": "number"
          },
          {
            "name": "cursorY",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "fileName",
            "type": "string"
          },
          {
            "name": "texCoordX",
            "type": "number"
          },
          {
            "name": "texCoordY",
            "type": "number"
          },
          {
            "name": "textureX",
            "type": "number"
          },
          {
            "name": "textureY",
            "type": "number"
          },
          {
            "name": "scrollChildX",
            "type": "number"
          },
          {
            "name": "scrollChildY",
            "type": "number"
          }
        ]
      },
      {
        "name": "ZoomOut",
        "arguments": [
          {
            "name": "distance",
            "type": "number"
          }
        ]
      }
    ],
    "Merchant": [
      {
        "name": "BuyMerchantItem",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "quantity",
            "type": "number"
          }
        ]
      },
      {
        "name": "BuybackItem",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CanMerchantRepair",
        "returns": [
          {
            "name": "canRepair",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CloseMerchant"
      },
      {
        "name": "ContainerRefundItemPurchase",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "EndBoundTradeable",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "name": "EndRefund",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBuybackItemInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "price",
            "type": "number"
          },
          {
            "name": "quantity",
            "type": "number"
          },
          {
            "name": "numAvailable",
            "type": "number"
          },
          {
            "name": "isUsable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetBuybackItemLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetContainerItemPurchaseInfo",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "IsEquipped",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "money",
            "type": "number"
          },
          {
            "name": "itemCount",
            "type": "number"
          },
          {
            "name": "refundSec",
            "type": "number"
          },
          {
            "name": "currecycount",
            "type": "number"
          },
          {
            "name": "hasEnchants",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetContainerItemPurchaseItem",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "quantity",
            "type": "number"
          },
          {
            "name": "link",
            "type": "itemLink"
          }
        ]
      },
      {
        "name": "GetMerchantItemCostInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "currencyCount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMerchantItemCostItem",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "currency",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "value",
            "type": "number"
          },
          {
            "name": "link",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetMerchantItemInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "price",
            "type": "number"
          },
          {
            "name": "quantity",
            "type": "number"
          },
          {
            "name": "numAvailable",
            "type": "number"
          },
          {
            "name": "isUsable",
            "type": "boolean"
          },
          {
            "name": "extendedCost",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetMerchantItemLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetMerchantItemMaxStack",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "maxStack",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMerchantNumItems",
        "returns": [
          {
            "name": "numMerchantItems",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumBuybackItems",
        "returns": [
          {
            "name": "numBuybackItems",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRepairAllCost",
        "returns": [
          {
            "name": "repairAllCost",
            "type": "number"
          },
          {
            "name": "canRepair",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "InRepairMode",
        "returns": [
          {
            "name": "inRepair",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PickupMerchantItem",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "RepairAllItems",
        "arguments": [
          {
            "name": "useGuildMoney",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "ShowContainerSellCursor",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "ShowRepairCursor"
      }
    ],
    "Minigame": [
      {
        "name": "GetMinigameState"
      },
      {
        "name": "GetMinigameType"
      },
      {
        "name": "MakeMinigameMove"
      }
    ],
    "Modified_click": [
      {
        "name": "GetModifiedClick",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "binding",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetModifiedClickAction",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "action",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetNumModifiedClickActions",
        "returns": [
          {
            "name": "num",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsModifiedClick",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "modifiedClick",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetModifiedClick",
        "arguments": [
          {
            "name": "action",
            "type": "string"
          },
          {
            "name": "binding",
            "type": "string"
          }
        ]
      }
    ],
    "Money": [
      {
        "name": "AddTradeMoney"
      },
      {
        "name": "CanWithdrawGuildBankMoney",
        "returns": [
          {
            "name": "canWithdraw",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CursorHasMoney",
        "returns": [
          {
            "name": "hasMoney",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "DepositGuildBankMoney",
        "arguments": [
          {
            "name": "money",
            "type": "number"
          }
        ]
      },
      {
        "name": "DropCursorMoney"
      },
      {
        "name": "GetCoinIcon",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "icon",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetCoinText",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          },
          {
            "name": "separator",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "coinText",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetCoinTextureString",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          },
          {
            "name": "fontSize",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "coinText",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetCursorMoney",
        "returns": [
          {
            "name": "cursorMoney",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMoney",
        "returns": [
          {
            "name": "money",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPlayerTradeMoney",
        "returns": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogRequiredMoney",
        "returns": [
          {
            "name": "money",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogRewardMoney",
        "returns": [
          {
            "name": "money",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSendMailMoney",
        "returns": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTargetTradeMoney",
        "returns": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupGuildBankMoney",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupPlayerMoney",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "PickupTradeMoney",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetSendMailMoney",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "success",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetTradeMoney",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "WithdrawGuildBankMoney",
        "returns": [
          {
            "name": "canWithdraw",
            "type": "boolean"
          }
        ]
      }
    ],
    "Movement": [
      {
        "name": "AscendStop"
      },
      {
        "name": "DescendStop"
      },
      {
        "name": "FollowUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "strict",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "InteractUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ]
      },
      {
        "name": "JumpOrAscendStart"
      },
      {
        "name": "MoveAndSteerStart"
      },
      {
        "name": "MoveAndSteerStop"
      },
      {
        "name": "MoveBackwardStart"
      },
      {
        "name": "MoveBackwardStop"
      },
      {
        "name": "MoveForwardStart"
      },
      {
        "name": "MoveForwardStop"
      },
      {
        "name": "PitchDownStart"
      },
      {
        "name": "PitchDownStop"
      },
      {
        "name": "PitchUpStart"
      },
      {
        "name": "PitchUpStop"
      },
      {
        "name": "SitStandOrDescendStart"
      },
      {
        "name": "StrafeLeftStart"
      },
      {
        "name": "StrafeLeftStop"
      },
      {
        "name": "StrafeRightStart"
      },
      {
        "name": "StrafeRightStop"
      },
      {
        "name": "ToggleAutoRun"
      },
      {
        "name": "ToggleRun"
      },
      {
        "name": "TurnLeftStart"
      },
      {
        "name": "TurnLeftStop"
      },
      {
        "name": "TurnOrActionStart"
      },
      {
        "name": "TurnOrActionStop"
      },
      {
        "name": "TurnRightStart"
      },
      {
        "name": "TurnRightStop"
      }
    ],
    "Multi-cast_actions": [
      {
        "name": "SetMultiCastSpell",
        "arguments": [
          {
            "name": "action",
            "type": "number"
          },
          {
            "name": "spell",
            "type": "number"
          }
        ]
      }
    ],
    "NPC_Gossip_Dialog": [
      {
        "name": "CloseGossip"
      },
      {
        "name": "GetGossipActiveQuests",
        "arguments": [],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "isTrivial",
            "type": "boolean"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetGossipAvailableQuests",
        "arguments": [],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "isTrivial",
            "type": "boolean"
          },
          {
            "name": "isDaily",
            "type": "boolean"
          },
          {
            "name": "isRepeatable",
            "type": "boolean"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetGossipOptions",
        "arguments": [],
        "returns": [
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "gossipType",
            "type": "string"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetGossipText",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetNumGossipActiveQuests",
        "returns": [
          {
            "name": "num",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumGossipAvailableQuests",
        "returns": [
          {
            "name": "num",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumGossipOptions",
        "returns": [
          {
            "name": "numOptions",
            "type": "number"
          }
        ]
      },
      {
        "name": "SelectGossipActiveQuest",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SelectGossipAvailableQuest",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SelectGossipOption",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "confirm",
            "type": "boolean",
            "optional": true
          }
        ]
      }
    ],
    "Objectives_tracking": [
      {
        "name": "AddQuestWatch",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "AddTrackedAchievement",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumQuestWatches",
        "returns": [
          {
            "name": "numWatches",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumTrackedAchievements",
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestIndexForWatch",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogSpecialItemCooldown",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogSpecialItemInfo",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "charges",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTrackedAchievements",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "IsQuestLogSpecialItemInRange",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "inRange",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsQuestWatched",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isWatched",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsTrackedAchievement",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isTracked",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "RemoveQuestWatch",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "RemoveTrackedAchievement",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "name": "UseQuestLogSpecialItem",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      }
    ],
    "Party": [
      {
        "name": "AcceptGroup"
      },
      {
        "name": "ClearPartyAssignment",
        "arguments": [
          {
            "name": "assignment",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "exactMatch",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "ConfirmReadyCheck",
        "arguments": [
          {
            "name": "ready",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ConvertToRaid"
      },
      {
        "name": "DeclineGroup"
      },
      {
        "name": "DoReadyCheck"
      },
      {
        "name": "GetNumPartyMembers",
        "returns": [
          {
            "name": "numPartyMembers",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPartyAssignment",
        "arguments": [
          {
            "name": "assignment",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "exactMatch",
            "type": "boolean",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isAssigned",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetPartyLeaderIndex",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPartyMember",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "hasMember",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetReadyCheckStatus",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "status",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetReadyCheckTimeLeft",
        "returns": [
          {
            "name": "timeLeft",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRealNumPartyMembers",
        "returns": [
          {
            "name": "numMembers",
            "type": "number"
          }
        ]
      },
      {
        "name": "InviteUnit",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "IsPartyLeader",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isLeader",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsRealPartyLeader",
        "returns": [
          {
            "name": "isLeader",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "LeaveParty"
      },
      {
        "name": "PromoteToLeader",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "exactMatch",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "SetPartyAssignment",
        "arguments": [
          {
            "name": "assignment",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "exactMatch",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "UninviteUnit",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitInParty",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "inParty",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsPartyLeader",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "leader",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitPlayerOrPetInParty",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "inParty",
            "type": "boolean"
          }
        ]
      }
    ],
    "Pet_Stable": [
      {
        "name": "BuyStableSlot"
      },
      {
        "name": "ClickStablePet",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "selected",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ClosePetStables"
      },
      {
        "name": "GetNumStablePets",
        "returns": [
          {
            "name": "numPets",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSelectedStablePet",
        "returns": [
          {
            "name": "selectedPet",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetStablePetFoodTypes",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetStablePetInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "family",
            "type": "string"
          },
          {
            "name": "talent",
            "type": "string"
          }
        ]
      },
      {
        "name": "IsAtStableMaster",
        "returns": [
          {
            "name": "isAtNPC",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PickupStablePet",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetPetStablePaperdoll",
        "arguments": [
          {
            "name": "model",
            "type": "table"
          }
        ]
      },
      {
        "name": "StablePet",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "selected",
            "type": "boolean"
          }
        ]
      }
    ],
    "Pet": [
      {
        "name": "CastPetAction",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "DestroyTotem",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "DisableSpellAutocast",
        "arguments": [
          {
            "name": "spell",
            "type": "string"
          }
        ]
      },
      {
        "name": "EnableSpellAutocast",
        "arguments": [
          {
            "name": "spell",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetPetActionCooldown",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPetActionInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "subtext",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "isToken",
            "type": "boolean"
          },
          {
            "name": "isActive",
            "type": "boolean"
          },
          {
            "name": "autoCastAllowed",
            "type": "boolean"
          },
          {
            "name": "autoCastEnabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetPetActionSlotUsable",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "usable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetPetActionsUsable",
        "returns": [
          {
            "name": "petActionsUsable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetPetExperience",
        "returns": [
          {
            "name": "currXP",
            "type": "number"
          },
          {
            "name": "nextXP",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPetFoodTypes",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetPetIcon",
        "returns": [
          {
            "name": "texture",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetPetTalentTree",
        "returns": [
          {
            "name": "talent",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetPetTimeRemaining",
        "returns": [
          {
            "name": "petTimeRemaining",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTotemInfo",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "haveTotem",
            "type": "boolean"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "startTime",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "icon",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTotemTimeLeft",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "seconds",
            "type": "number"
          }
        ]
      },
      {
        "name": "HasPetSpells",
        "returns": [
          {
            "name": "hasPetSpells",
            "type": "boolean"
          },
          {
            "name": "petType",
            "type": "string"
          }
        ]
      },
      {
        "name": "HasPetUI",
        "returns": [
          {
            "name": "hasPetUI",
            "type": "boolean"
          },
          {
            "name": "isHunterPet",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsPetAttackActive",
        "returns": [
          {
            "name": "isActive",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PetAbandon"
      },
      {
        "name": "PetAggressiveMode"
      },
      {
        "name": "PetAttack"
      },
      {
        "name": "PetCanBeAbandoned",
        "returns": [
          {
            "name": "canAbandon",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PetCanBeDismissed",
        "returns": [
          {
            "name": "canDismiss",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PetCanBeRenamed",
        "returns": [
          {
            "name": "canRename",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PetDefensiveMode"
      },
      {
        "name": "PetDismiss"
      },
      {
        "name": "PetFollow"
      },
      {
        "name": "PetHasActionBar",
        "returns": [
          {
            "name": "hasActionBar",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PetPassiveMode"
      },
      {
        "name": "PetRename",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "genitive",
            "type": "string"
          },
          {
            "name": "dative",
            "type": "string"
          },
          {
            "name": "accusative",
            "type": "string"
          },
          {
            "name": "instrumental",
            "type": "string"
          },
          {
            "name": "prepositional",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "PetStopAttack"
      },
      {
        "name": "PetWait"
      },
      {
        "name": "PickupPetAction",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "TargetTotem",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "TogglePetAutocast",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      }
    ],
    "Petition": [
      {
        "name": "BuyGuildCharter",
        "arguments": [
          {
            "name": "guildName",
            "type": "string"
          }
        ]
      },
      {
        "name": "CanSignPetition",
        "returns": [
          {
            "name": "canSign",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ClickPetitionButton"
      },
      {
        "name": "ClosePetition"
      },
      {
        "name": "GetGuildCharterCost",
        "returns": [
          {
            "name": "cost",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumPetitionItems"
      },
      {
        "name": "GetNumPetitionNames",
        "returns": [
          {
            "name": "numNames",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPetitionInfo",
        "returns": [
          {
            "name": "petitionType",
            "type": "string"
          },
          {
            "name": "title",
            "type": "string"
          },
          {
            "name": "bodyText",
            "type": "string"
          },
          {
            "name": "maxSignatures",
            "type": "number"
          },
          {
            "name": "originatorName",
            "type": "string"
          },
          {
            "name": "isOriginator",
            "type": "boolean"
          },
          {
            "name": "minSignatures",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPetitionNameInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "OfferPetition"
      },
      {
        "name": "RenamePetition",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "SignPetition",
        "returns": [
          {
            "name": "canSign",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "TurnInGuildCharter"
      },
      {
        "name": "TurnInPetition"
      }
    ],
    "Player_information": [
      {
        "name": "AcceptResurrect"
      },
      {
        "name": "AcceptXPLoss"
      },
      {
        "name": "CanHearthAndResurrectFromArea",
        "returns": [
          {
            "name": "status",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CheckBinderDist",
        "returns": [
          {
            "name": "inRange",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CheckSpiritHealerDist",
        "returns": [
          {
            "name": "inRange",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ConfirmBinder"
      },
      {
        "name": "DeclineResurrect"
      },
      {
        "name": "Dismount"
      },
      {
        "name": "GetBindLocation",
        "returns": [
          {
            "name": "location",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetComboPoints",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "target",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "comboPoints",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCorpseRecoveryDelay",
        "returns": [
          {
            "name": "timeLeft",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCurrentTitle",
        "returns": [
          {
            "name": "currentTitle",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumTitles",
        "returns": [
          {
            "name": "numTitles",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPlayerFacing",
        "returns": [
          {
            "name": "facing",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogRewardTitle",
        "returns": [
          {
            "name": "title",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetRealmName",
        "returns": [
          {
            "name": "realm",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetReleaseTimeRemaining",
        "returns": [
          {
            "name": "timeleft",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetResSicknessDuration",
        "returns": [
          {
            "name": "resSicknessTime",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetRestState",
        "returns": [
          {
            "name": "state",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "multiplier",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRuneCooldown",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "runeReady",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetRuneCount",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRuneType",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "runeType",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTimeToWellRested"
      },
      {
        "name": "GetTitleName",
        "arguments": [
          {
            "name": "titleIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "titleName",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetUnitPitch",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "pitch",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetUnitSpeed",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "speed",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetXPExhaustion",
        "returns": [
          {
            "name": "exhaustionXP",
            "type": "number"
          }
        ]
      },
      {
        "name": "HasFullControl",
        "returns": [
          {
            "name": "hasControl",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "HasKey",
        "returns": [
          {
            "name": "hasKey",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "HasSoulstone",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "HasWandEquipped",
        "returns": [
          {
            "name": "isEquipped",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsFalling",
        "returns": [
          {
            "name": "falling",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsFlyableArea",
        "returns": [
          {
            "name": "isFlyable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsFlying",
        "returns": [
          {
            "name": "isFlying",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsInInstance",
        "returns": [
          {
            "name": "isInstance",
            "type": "boolean"
          },
          {
            "name": "instanceType",
            "type": "string"
          }
        ]
      },
      {
        "name": "IsIndoors",
        "returns": [
          {
            "name": "inside",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsMounted",
        "returns": [
          {
            "name": "mounted",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsOutOfBounds",
        "returns": [
          {
            "name": "outOfBounds",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsOutdoors",
        "returns": [
          {
            "name": "isOutdoors",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsResting",
        "returns": [
          {
            "name": "resting",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsStealthed",
        "returns": [
          {
            "name": "stealthed",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsSwimming",
        "returns": [
          {
            "name": "isSwimming",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsTitleKnown",
        "arguments": [
          {
            "name": "titleIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isKnown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsXPUserDisabled",
        "returns": [
          {
            "name": "isDisabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "OffhandHasWeapon",
        "returns": [
          {
            "name": "hasWeapon",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "OpeningCinematic"
      },
      {
        "name": "RepopMe"
      },
      {
        "name": "ResurrectGetOfferer",
        "returns": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "ResurrectHasSickness",
        "returns": [
          {
            "name": "hasSickness",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ResurrectHasTimer",
        "returns": [
          {
            "name": "hasTimer",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "RetrieveCorpse"
      },
      {
        "name": "SetCurrentTitle",
        "arguments": [
          {
            "name": "titleIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "ShowCloak",
        "arguments": [
          {
            "name": "show",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ShowHelm",
        "arguments": [
          {
            "name": "show",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ShowingCloak",
        "returns": [
          {
            "name": "isShown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ShowingHelm",
        "returns": [
          {
            "name": "isShown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ToggleSheath"
      },
      {
        "name": "UnitXP",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "currXP",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitXPMax",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "playerMaxXP",
            "type": "number"
          }
        ]
      },
      {
        "name": "UseSoulstone"
      }
    ],
    "PvP": [
      {
        "name": "CanHearthAndResurrectFromArea",
        "returns": [
          {
            "name": "status",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanQueueForWintergrasp",
        "returns": [
          {
            "name": "canQueue",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetHolidayBGHonorCurrencyBonuses",
        "returns": [
          {
            "name": "unk",
            "type": "boolean"
          },
          {
            "name": "honorWinReward",
            "type": "number"
          },
          {
            "name": "arenaWinReward",
            "type": "number"
          },
          {
            "name": "honorLossReward",
            "type": "number"
          },
          {
            "name": "arenaLossReward",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetHonorCurrency",
        "returns": [
          {
            "name": "honorPoints",
            "type": "number"
          },
          {
            "name": "maxHonor",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumWorldStateUI",
        "returns": [
          {
            "name": "numUI",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPVPDesired",
        "returns": [
          {
            "name": "isPVPDesired",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPVPLifetimeStats",
        "returns": [
          {
            "name": "hk",
            "type": "number"
          },
          {
            "name": "highestRank",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPVPRankInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "rankName",
            "type": "string"
          },
          {
            "name": "rankNumber",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPVPRankProgress"
      },
      {
        "name": "GetPVPSessionStats",
        "returns": [
          {
            "name": "honorKills",
            "type": "number"
          },
          {
            "name": "honorPoints",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPVPTimer",
        "returns": [
          {
            "name": "timer",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPVPYesterdayStats",
        "returns": [
          {
            "name": "honorKills",
            "type": "number"
          },
          {
            "name": "honorPoints",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetWorldPVPQueueStatus",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "status",
            "type": "string"
          },
          {
            "name": "mapName",
            "type": "string"
          },
          {
            "name": "queueID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetWorldStateUIInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "uiType",
            "type": "number"
          },
          {
            "name": "state",
            "type": "number"
          },
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "dynamicIcon",
            "type": "string"
          },
          {
            "name": "tooltip",
            "type": "string"
          },
          {
            "name": "dynamicTooltip",
            "type": "string"
          },
          {
            "name": "extendedUI",
            "type": "string"
          },
          {
            "name": "extendedUIState1",
            "type": "number"
          },
          {
            "name": "extendedUIState2",
            "type": "number"
          },
          {
            "name": "extendedUIState3",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetZonePVPInfo",
        "returns": [
          {
            "name": "pvpType",
            "type": "string"
          },
          {
            "name": "isSubZonePVP",
            "type": "boolean"
          },
          {
            "name": "factionName",
            "type": "string"
          }
        ]
      },
      {
        "name": "HearthAndResurrectFromArea",
        "returns": [
          {
            "name": "status",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsPVPTimerRunning",
        "returns": [
          {
            "name": "isRunning",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsSubZonePVPPOI",
        "returns": [
          {
            "name": "isPVPPOI",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "QuestFlagsPVP",
        "returns": [
          {
            "name": "questFlag",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetPVP",
        "arguments": [
          {
            "name": "state",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "TogglePVP"
      },
      {
        "name": "UnitIsPVPFreeForAll",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isFreeForAll",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsPVPSanctuary",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "state",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitPVPName",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitPVPRank",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "rank",
            "type": "number"
          }
        ]
      }
    ],
    "Quest": [
      {
        "name": "AbandonQuest"
      },
      {
        "name": "AcceptQuest"
      },
      {
        "name": "AddQuestWatch",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "CloseQuest"
      },
      {
        "name": "CollapseQuestHeader",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "CompleteQuest"
      },
      {
        "name": "ConfirmAcceptQuest"
      },
      {
        "name": "DeclineQuest"
      },
      {
        "name": "ExpandQuestHeader",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetAbandonQuestItems",
        "returns": [
          {
            "name": "items",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetAbandonQuestName",
        "returns": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetActiveLevel",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "level",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetActiveTitle",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "title",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetAvailableLevel",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "level",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetAvailableTitle",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "title",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetDailyQuestsCompleted",
        "returns": [
          {
            "name": "dailyQuestsComplete",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGossipActiveQuests",
        "arguments": [],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "isTrivial",
            "type": "boolean"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetGossipAvailableQuests",
        "arguments": [],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "isTrivial",
            "type": "boolean"
          },
          {
            "name": "isDaily",
            "type": "boolean"
          },
          {
            "name": "isRepeatable",
            "type": "boolean"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetGreetingText",
        "returns": [
          {
            "name": "greetingText",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetMaxDailyQuests",
        "returns": [
          {
            "name": "max",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumActiveQuests",
        "returns": [
          {
            "name": "numActiveQuests",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumAvailableQuests",
        "returns": [
          {
            "name": "numAvailableQuests",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumGossipActiveQuests",
        "returns": [
          {
            "name": "num",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumGossipAvailableQuests",
        "returns": [
          {
            "name": "num",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumQuestChoices",
        "returns": [
          {
            "name": "numQuestChoices",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumQuestItems",
        "returns": [
          {
            "name": "numRequiredItems",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumQuestLeaderBoards",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "numObjectives",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumQuestLogChoices",
        "returns": [
          {
            "name": "numChoices",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumQuestLogEntries",
        "returns": [
          {
            "name": "numEntries",
            "type": "number"
          },
          {
            "name": "numQuests",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumQuestLogRewards",
        "returns": [
          {
            "name": "numRewards",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumQuestRewards",
        "returns": [
          {
            "name": "numQuestRewards",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumQuestWatches",
        "returns": [
          {
            "name": "numWatches",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumWorldStateUI",
        "returns": [
          {
            "name": "numUI",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetObjectiveText",
        "returns": [
          {
            "name": "questObjective",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetProgressText",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetQuestBackgroundMaterial",
        "returns": [
          {
            "name": "material",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetQuestDifficultyColor",
        "arguments": [
          {
            "name": "level",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "color",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetQuestGreenRange",
        "returns": [
          {
            "name": "range",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestIndexForTimer",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestIndexForWatch",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestItemInfo",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "numItems",
            "type": "number"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          },
          {
            "name": "isUsable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetQuestItemLink",
        "arguments": [
          {
            "name": "itemType",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetQuestLink",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetQuestLogChoiceInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "numItems",
            "type": "number"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          },
          {
            "name": "isUsable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetQuestLogCompletionText",
        "returns": [
          {
            "name": "completionText",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetQuestLogGroupNum",
        "returns": [
          {
            "name": "suggestedGroup",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogItemLink",
        "arguments": [
          {
            "name": "itemType",
            "type": "string"
          },
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogLeaderBoard",
        "arguments": [
          {
            "name": "objective",
            "type": "number"
          },
          {
            "name": "questIndex",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "finished",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetQuestLogPushable",
        "returns": [
          {
            "name": "shareable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetQuestLogQuestText",
        "returns": [
          {
            "name": "questDescription",
            "type": "string"
          },
          {
            "name": "questObjectives",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetQuestLogRequiredMoney",
        "returns": [
          {
            "name": "money",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogRewardInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "numItems",
            "type": "number"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          },
          {
            "name": "isUsable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetQuestLogRewardMoney",
        "returns": [
          {
            "name": "money",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogRewardSpell",
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "isTradeskillSpell",
            "type": "boolean"
          },
          {
            "name": "isSpellLearned",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetQuestLogRewardTalents",
        "returns": [
          {
            "name": "talents",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogRewardTitle",
        "returns": [
          {
            "name": "title",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetQuestLogSelection",
        "returns": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogSpecialItemCooldown",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogSpecialItemInfo",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "charges",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogSpellLink",
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetQuestLogTimeLeft",
        "returns": [
          {
            "name": "questTimer",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogTitle",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "questLogTitleText",
            "type": "string"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "questTag",
            "type": "string"
          },
          {
            "name": "suggestedGroup",
            "type": "number"
          },
          {
            "name": "isHeader",
            "type": "boolean"
          },
          {
            "name": "isCollapsed",
            "type": "boolean"
          },
          {
            "name": "isComplete",
            "type": "number"
          },
          {
            "name": "isDaily",
            "type": "boolean"
          },
          {
            "name": "questID",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestMoneyToGet",
        "returns": [
          {
            "name": "money",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestResetTime",
        "returns": [
          {
            "name": "time",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestReward",
        "arguments": [
          {
            "name": "choice",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestSpellLink",
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetQuestText",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetQuestTimers",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetQuestsCompleted",
        "arguments": [
          {
            "name": "questTbl",
            "type": "table"
          }
        ],
        "returns": [
          {
            "name": "completedQuests",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetRewardHonor",
        "returns": [
          {
            "name": "honor",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRewardMoney",
        "returns": [
          {
            "name": "money",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRewardSpell",
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "isTradeskillSpell",
            "type": "boolean"
          },
          {
            "name": "isSpellLearned",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetRewardTalents",
        "returns": [
          {
            "name": "talents",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRewardText",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetRewardTitle",
        "returns": [
          {
            "name": "title",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetRewardXP"
      },
      {
        "name": "GetSuggestedGroupNum",
        "returns": [
          {
            "name": "suggestedGroup",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTitleText",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetWorldStateUIInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "uiType",
            "type": "number"
          },
          {
            "name": "state",
            "type": "number"
          },
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "dynamicIcon",
            "type": "string"
          },
          {
            "name": "tooltip",
            "type": "string"
          },
          {
            "name": "dynamicTooltip",
            "type": "string"
          },
          {
            "name": "extendedUI",
            "type": "string"
          },
          {
            "name": "extendedUIState1",
            "type": "number"
          },
          {
            "name": "extendedUIState2",
            "type": "number"
          },
          {
            "name": "extendedUIState3",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsActiveQuestTrivial",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "trivial",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsAvailableQuestTrivial",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "trivial",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsCurrentQuestFailed",
        "returns": [
          {
            "name": "isFailed",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsQuestCompletable",
        "returns": [
          {
            "name": "isCompletable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsQuestLogSpecialItemInRange",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "inRange",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsQuestWatched",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isWatched",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsUnitOnQuest",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "state",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "QueryQuestsCompleted"
      },
      {
        "name": "QuestChooseRewardError"
      },
      {
        "name": "QuestFlagsPVP",
        "returns": [
          {
            "name": "questFlag",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "QuestGetAutoAccept"
      },
      {
        "name": "QuestLogPushQuest",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "RemoveQuestWatch",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "SelectActiveQuest",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SelectAvailableQuest",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SelectGossipActiveQuest",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SelectGossipAvailableQuest",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SelectQuestLogEntry",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetAbandonQuest",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "UseQuestLogSpecialItem",
        "arguments": [
          {
            "name": "questIndex",
            "type": "number"
          }
        ]
      }
    ],
    "Raid": [
      {
        "name": "AcceptGroup"
      },
      {
        "name": "ClearPartyAssignment",
        "arguments": [
          {
            "name": "assignment",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "exactMatch",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "ConfirmReadyCheck",
        "arguments": [
          {
            "name": "ready",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ConvertToRaid"
      },
      {
        "name": "DeclineGroup"
      },
      {
        "name": "DemoteAssistant",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "exactMatch",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "DoReadyCheck"
      },
      {
        "name": "GetNumRaidMembers",
        "returns": [
          {
            "name": "numRaidMembers",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPartyAssignment",
        "arguments": [
          {
            "name": "assignment",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "exactMatch",
            "type": "boolean",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isAssigned",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetRaidRosterInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "number"
          },
          {
            "name": "subgroup",
            "type": "number"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "class",
            "type": "string"
          },
          {
            "name": "fileName",
            "type": "string"
          },
          {
            "name": "zone",
            "type": "string"
          },
          {
            "name": "online",
            "type": "boolean"
          },
          {
            "name": "isDead",
            "type": "boolean"
          },
          {
            "name": "role",
            "type": "string"
          },
          {
            "name": "isML",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetRaidRosterSelection",
        "returns": [
          {
            "name": "raidIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRaidTargetIndex",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetReadyCheckStatus",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "status",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetReadyCheckTimeLeft",
        "returns": [
          {
            "name": "timeLeft",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRealNumRaidMembers",
        "returns": [
          {
            "name": "numMembers",
            "type": "number"
          }
        ]
      },
      {
        "name": "InviteUnit",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "IsRaidLeader",
        "returns": [
          {
            "name": "isLeader",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsRaidOfficer",
        "returns": [
          {
            "name": "isRaidOfficer",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsRealRaidLeader",
        "returns": [
          {
            "name": "isLeader",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "LeaveParty"
      },
      {
        "name": "PromoteToAssistant",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "exactMatch",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "PromoteToLeader",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "exactMatch",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "SetPartyAssignment",
        "arguments": [
          {
            "name": "assignment",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "exactMatch",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "SetRaidRosterSelection",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetRaidSubgroup",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "subgroup",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetRaidTarget",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "SwapRaidSubgroup",
        "arguments": [
          {
            "name": "index1",
            "type": "number"
          },
          {
            "name": "index2",
            "type": "number"
          }
        ]
      },
      {
        "name": "UninviteUnit",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitInRaid",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "inRaid",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitIsPartyLeader",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "leader",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsRaidOfficer",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "leader",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitPlayerOrPetInRaid",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "inParty",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitTargetsVehicleInRaidUI",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "targetVehicle",
            "type": "boolean"
          }
        ]
      }
    ],
    "Recruit-a-friend": [
      {
        "name": "AcceptLevelGrant"
      },
      {
        "name": "CanGrantLevel",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "canGrant",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanSummonFriend",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "canSummon",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "DeclineLevelGrant"
      },
      {
        "name": "GetSummonFriendCooldown",
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          }
        ]
      },
      {
        "name": "GrantLevel",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "canGrant",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsReferAFriendLinked",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isLinked",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SummonFriend",
        "arguments": [
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "canSummon",
            "type": "boolean"
          }
        ]
      }
    ],
    "Secure_execution_utility": [
      {
        "name": "InCombatLockdown",
        "returns": [
          {
            "name": "inLockdown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "forceinsecure"
      },
      {
        "name": "hooksecurefunc",
        "arguments": [
          {
            "name": "table",
            "type": "table",
            "optional": true
          },
          {
            "name": "function",
            "type": "string"
          },
          {
            "name": "hookfunc",
            "type": "function"
          }
        ]
      },
      {
        "name": "issecure",
        "returns": [
          {
            "name": "secure",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "issecurevariable",
        "arguments": [
          {
            "name": "table",
            "type": "table",
            "optional": true
          },
          {
            "name": "variable",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "issecure",
            "type": "boolean"
          },
          {
            "name": "taint",
            "type": "string"
          }
        ]
      },
      {
        "name": "newproxy",
        "arguments": [
          {
            "name": "boolean",
            "type": "boolean",
            "optional": true
          },
          {
            "name": "userdata",
            "type": "userdata",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "userdata",
            "type": "userdata"
          }
        ]
      },
      {
        "name": "securecall",
        "arguments": [
          {
            "name": "function",
            "type": "function"
          },
          {
            "name": "...",
            "type": "table"
          }
        ],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      }
    ],
    "Skill": [
      {
        "name": "AbandonSkill",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "ExpandSkillHeader",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumSkillLines",
        "returns": [
          {
            "name": "numSkills",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSkillLineInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "skillName",
            "type": "string"
          },
          {
            "name": "header",
            "type": "boolean"
          },
          {
            "name": "isExpanded",
            "type": "boolean"
          },
          {
            "name": "skillRank",
            "type": "number"
          },
          {
            "name": "numTempPoints",
            "type": "number"
          },
          {
            "name": "skillModifier",
            "type": "number"
          },
          {
            "name": "skillMaxRank",
            "type": "number"
          },
          {
            "name": "isAbandonable",
            "type": "boolean"
          },
          {
            "name": "stepCost",
            "type": "number"
          },
          {
            "name": "rankCost",
            "type": "number"
          },
          {
            "name": "minLevel",
            "type": "number"
          },
          {
            "name": "skillCostType",
            "type": "number"
          },
          {
            "name": "skillDescription",
            "type": "string"
          }
        ]
      }
    ],
    "Social": [
      {
        "name": "AddFriend",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "AddIgnore",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "AddOrDelIgnore",
        "arguments": [
          {
            "name": "fullname",
            "type": "string"
          }
        ]
      },
      {
        "name": "AddOrRemoveFriend",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "note",
            "type": "string"
          }
        ]
      },
      {
        "name": "DelIgnore",
        "arguments": [
          {
            "name": "fullname",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetFriendInfo",
        "arguments": [
          {
            "name": "friendIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "presenceID",
            "type": "number"
          },
          {
            "name": "givenName",
            "type": "Kstring"
          },
          {
            "name": "surname",
            "type": "Kstring"
          },
          {
            "name": "toonName",
            "type": "string"
          },
          {
            "name": "toonID",
            "type": "number"
          },
          {
            "name": "client",
            "type": "string"
          },
          {
            "name": "isOnline",
            "type": "boolean"
          },
          {
            "name": "lastOnline",
            "type": "number"
          },
          {
            "name": "isAFK",
            "type": "boolean"
          },
          {
            "name": "isDND",
            "type": "boolean"
          },
          {
            "name": "messageText",
            "type": "string"
          },
          {
            "name": "noteText",
            "type": "string"
          },
          {
            "name": "isFriend",
            "type": "boolean"
          },
          {
            "name": "unknown",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetIgnoreName",
        "arguments": [
          {
            "name": "index",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetNumFriends",
        "returns": [
          {
            "name": "totalBNet",
            "type": "number"
          },
          {
            "name": "numBNetOnline",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumIgnores",
        "returns": [
          {
            "name": "numIgnores",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumWhoResults",
        "returns": [
          {
            "name": "numResults",
            "type": "number"
          },
          {
            "name": "totalCount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSelectedFriend",
        "returns": [
          {
            "name": "friendIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSelectedIgnore",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetWhoInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "guild",
            "type": "string"
          },
          {
            "name": "level",
            "type": "number"
          },
          {
            "name": "race",
            "type": "string"
          },
          {
            "name": "class",
            "type": "string"
          },
          {
            "name": "zone",
            "type": "string"
          },
          {
            "name": "filename",
            "type": "string"
          }
        ]
      },
      {
        "name": "IsIgnored",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isIgnored",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "RemoveFriend",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "note",
            "type": "string"
          }
        ]
      },
      {
        "name": "SendWho",
        "arguments": [
          {
            "name": "filter",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetSelectedFriend"
      },
      {
        "name": "SetSelectedIgnore",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetWhoToUI",
        "arguments": [
          {
            "name": "state",
            "type": "number"
          }
        ]
      },
      {
        "name": "ShowFriends"
      },
      {
        "name": "SortWho",
        "arguments": [
          {
            "name": "sortType",
            "type": "string"
          }
        ]
      }
    ],
    "Socketing": [
      {
        "name": "AcceptSockets"
      },
      {
        "name": "ClickSocketButton",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CloseSocketInfo"
      },
      {
        "name": "GetExistingSocketInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "name",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetExistingSocketLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetItemGem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetNewSocketInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "matches",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetNewSocketLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetNumSockets",
        "returns": [
          {
            "name": "numSockets",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSocketItemBoundTradeable",
        "returns": [
          {
            "name": "tradeable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetSocketItemInfo",
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          }
        ]
      },
      {
        "name": "GetSocketItemRefundable",
        "returns": [
          {
            "name": "refundable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetSocketTypes",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "gemColor",
            "type": "string"
          }
        ]
      },
      {
        "name": "SocketContainerItem",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "SocketInventoryItem",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      }
    ],
    "Sound": [
      {
        "name": "PlayMusic",
        "arguments": [
          {
            "name": "musicfile",
            "type": "string"
          }
        ]
      },
      {
        "name": "PlaySound",
        "arguments": [
          {
            "name": "sound",
            "type": "string"
          }
        ]
      },
      {
        "name": "PlaySoundFile",
        "arguments": [
          {
            "name": "soundFile",
            "type": "string"
          }
        ]
      },
      {
        "name": "Sound_ChatSystem_GetInputDriverNameByIndex",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "Sound_ChatSystem_GetNumInputDrivers"
      },
      {
        "name": "Sound_ChatSystem_GetNumOutputDrivers"
      },
      {
        "name": "Sound_ChatSystem_GetOutputDriverNameByIndex",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "Sound_GameSystem_GetInputDriverNameByIndex",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "Sound_GameSystem_GetNumInputDrivers"
      },
      {
        "name": "Sound_GameSystem_GetNumOutputDrivers"
      },
      {
        "name": "Sound_GameSystem_GetOutputDriverNameByIndex",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "Sound_GameSystem_RestartSoundSystem"
      },
      {
        "name": "StopMusic"
      },
      {
        "name": "VoiceEnumerateCaptureDevices",
        "arguments": [
          {
            "name": "deviceIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "deviceName",
            "type": "string"
          }
        ]
      },
      {
        "name": "VoiceEnumerateOutputDevices",
        "arguments": [
          {
            "name": "deviceIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "device",
            "type": "string"
          }
        ]
      },
      {
        "name": "VoiceGetCurrentCaptureDevice",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "VoiceGetCurrentOutputDevice",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "VoiceSelectCaptureDevice",
        "arguments": [
          {
            "name": "deviceName",
            "type": "string"
          }
        ]
      },
      {
        "name": "VoiceSelectOutputDevice",
        "arguments": [
          {
            "name": "deviceName",
            "type": "string"
          }
        ]
      }
    ],
    "Spell": [
      {
        "name": "CastSpell",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "bookType",
            "type": "string"
          }
        ]
      },
      {
        "name": "CastSpellByID",
        "arguments": [
          {
            "name": "spellID",
            "type": "number"
          },
          {
            "name": "target",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "CastSpellByName",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "target",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "CursorHasSpell",
        "returns": [
          {
            "name": "hasSpell",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "DisableSpellAutocast",
        "arguments": [
          {
            "name": "spell",
            "type": "string"
          }
        ]
      },
      {
        "name": "EnableSpellAutocast",
        "arguments": [
          {
            "name": "spell",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetItemSpell",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetKnownSlotFromHighestRankSlot",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "maxRankSlot",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumSpellTabs",
        "returns": [
          {
            "name": "numTabs",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestLogRewardSpell",
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "isTradeskillSpell",
            "type": "boolean"
          },
          {
            "name": "isSpellLearned",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetRewardSpell",
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "isTradeskillSpell",
            "type": "boolean"
          },
          {
            "name": "isSpellLearned",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetSpellAutocast",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "bookType",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "autocastAllowed",
            "type": "boolean"
          },
          {
            "name": "autocastEnabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetSpellCooldown",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "id",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSpellCount",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "numCasts",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSpellInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "id",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "powerCost",
            "type": "number"
          },
          {
            "name": "isFunnel",
            "type": "boolean"
          },
          {
            "name": "powerType",
            "type": "number"
          },
          {
            "name": "castingTime",
            "type": "number"
          },
          {
            "name": "minRange",
            "type": "number"
          },
          {
            "name": "maxRange",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSpellLink",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "id",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          },
          {
            "name": "tradeLink",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetSpellName",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "bookType",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "spellName",
            "type": "string"
          },
          {
            "name": "subSpellName",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetSpellTabInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "offset",
            "type": "number"
          },
          {
            "name": "numSpells",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSpellTexture",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          }
        ]
      },
      {
        "name": "HasPetSpells",
        "returns": [
          {
            "name": "hasPetSpells",
            "type": "boolean"
          },
          {
            "name": "petType",
            "type": "string"
          }
        ]
      },
      {
        "name": "IsAttackSpell",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isAttack",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsAutoRepeatSpell",
        "arguments": [
          {
            "name": "spellName",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isAutoRepeat",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsConsumableSpell",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isConsumable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsCurrentSpell",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isCurrent",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsHarmfulSpell",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isHarmful",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsHelpfulSpell",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isHarmful",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsPassiveSpell",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isPassive",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsSpellInRange",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "inRange",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsSpellKnown",
        "arguments": [
          {
            "name": "spellID",
            "type": "number"
          },
          {
            "name": "isPet",
            "type": "boolean",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isKnown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsUsableSpell",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isUsable",
            "type": "boolean"
          },
          {
            "name": "notEnoughMana",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "PickupSpell",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "bookType",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetMultiCastSpell",
        "arguments": [
          {
            "name": "action",
            "type": "number"
          },
          {
            "name": "spell",
            "type": "number"
          }
        ]
      },
      {
        "name": "SpellCanTargetGlyph",
        "returns": [
          {
            "name": "canTarget",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SpellCanTargetItem",
        "returns": [
          {
            "name": "canTarget",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SpellCanTargetUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "canTarget",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SpellHasRange",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "hasRange",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SpellIsTargeting",
        "returns": [
          {
            "name": "isTargeting",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SpellStopCasting"
      },
      {
        "name": "SpellStopTargeting"
      },
      {
        "name": "SpellTargetItem",
        "arguments": [
          {
            "name": "itemID",
            "type": "number",
            "optional": true
          },
          {
            "name": "itemName",
            "type": "string",
            "optional": true
          },
          {
            "name": "itemLink",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "SpellTargetUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ToggleSpellAutocast",
        "arguments": [
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "bookType",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "UnitCastingInfo",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "subText",
            "type": "string"
          },
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "startTime",
            "type": "number"
          },
          {
            "name": "endTime",
            "type": "number"
          },
          {
            "name": "isTradeSkill",
            "type": "boolean"
          },
          {
            "name": "castID",
            "type": "number"
          },
          {
            "name": "notInterruptible",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitChannelInfo",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "subText",
            "type": "string"
          },
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "startTime",
            "type": "number"
          },
          {
            "name": "endTime",
            "type": "number"
          },
          {
            "name": "isTradeSkill",
            "type": "boolean"
          },
          {
            "name": "notInterruptible",
            "type": "boolean"
          }
        ]
      }
    ],
    "StanceShapeshift": [
      {
        "name": "CancelShapeshiftForm"
      },
      {
        "name": "CastShapeshiftForm",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumShapeshiftForms",
        "returns": [
          {
            "name": "numForms",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetShapeshiftForm",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetShapeshiftFormCooldown",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "start",
            "type": "number"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetShapeshiftFormInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "isActive",
            "type": "boolean"
          },
          {
            "name": "isCastable",
            "type": "boolean"
          }
        ]
      }
    ],
    "Stat_information": [
      {
        "name": "GetArmorPenetration",
        "returns": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetAttackPowerForStat",
        "arguments": [
          {
            "name": "statIndex",
            "type": "number"
          },
          {
            "name": "effectiveStat",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "attackPower",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetBlockChance",
        "returns": [
          {
            "name": "chance",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCombatRating",
        "arguments": [
          {
            "name": "ratingIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "rating",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCombatRatingBonus",
        "arguments": [
          {
            "name": "ratingIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "ratingBonus",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCritChance",
        "returns": [
          {
            "name": "critChance",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCritChanceFromAgility",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "critChance",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetDamageBonusStat",
        "returns": [
          {
            "name": "bonusStat",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetDodgeChance",
        "returns": [
          {
            "name": "chance",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetExpertise",
        "returns": [
          {
            "name": "expertise",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetExpertisePercent",
        "returns": [
          {
            "name": "expertisePerc",
            "type": "number"
          },
          {
            "name": "offhandExpertisePercent",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetManaRegen",
        "returns": [
          {
            "name": "base",
            "type": "number"
          },
          {
            "name": "casting",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMaxCombatRatingBonus",
        "arguments": [
          {
            "name": "ratingIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "max",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetParryChance",
        "returns": [
          {
            "name": "chance",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPowerRegen",
        "returns": [
          {
            "name": "inactiveRegen",
            "type": "number"
          },
          {
            "name": "activeRegen",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetRangedCritChance",
        "returns": [
          {
            "name": "critChance",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetShieldBlock",
        "returns": [
          {
            "name": "damage",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSpellBonusDamage",
        "arguments": [
          {
            "name": "school",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "minModifier",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSpellBonusHealing",
        "returns": [
          {
            "name": "bonusHealing",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSpellCritChance",
        "arguments": [
          {
            "name": "school",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "minCrit",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSpellCritChanceFromIntellect",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "critChance",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSpellPenetration",
        "returns": [
          {
            "name": "penetration",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetUnitHealthModifier",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "modifier",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetUnitHealthRegenRateFromSpirit",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "regen",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetUnitManaRegenRateFromSpirit",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "regen",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetUnitMaxHealthModifier",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "modifier",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetUnitPowerModifier",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "modifier",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitArmor",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "base",
            "type": "number"
          },
          {
            "name": "effectiveArmor",
            "type": "number"
          },
          {
            "name": "armor",
            "type": "number"
          },
          {
            "name": "posBuff",
            "type": "number"
          },
          {
            "name": "negBuff",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitAttackBothHands",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "mainHandAttackBase",
            "type": "number"
          },
          {
            "name": "mainHandAttackMod",
            "type": "number"
          },
          {
            "name": "offHandHandAttackBase",
            "type": "number"
          },
          {
            "name": "offHandAttackMod",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitAttackPower",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "base",
            "type": "number"
          },
          {
            "name": "posBuff",
            "type": "number"
          },
          {
            "name": "negBuff",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitAttackSpeed",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "speed",
            "type": "number"
          },
          {
            "name": "offhandSpeed",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitDamage",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "minDamage",
            "type": "number"
          },
          {
            "name": "maxDamage",
            "type": "number"
          },
          {
            "name": "minOffHandDamage",
            "type": "number"
          },
          {
            "name": "maxOffHandDamage",
            "type": "number"
          },
          {
            "name": "physicalBonusPos",
            "type": "number"
          },
          {
            "name": "physicalBonusNeg",
            "type": "number"
          },
          {
            "name": "percent",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitDefense",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "base",
            "type": "number"
          },
          {
            "name": "modifier",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitRangedAttack",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "rangedAttackBase",
            "type": "number"
          },
          {
            "name": "rangedAttackMod",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitRangedAttackPower",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "base",
            "type": "number"
          },
          {
            "name": "posBuff",
            "type": "number"
          },
          {
            "name": "negBuff",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitRangedDamage",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "rangedAttackSpeed",
            "type": "number"
          },
          {
            "name": "minDamage",
            "type": "number"
          },
          {
            "name": "maxDamage",
            "type": "number"
          },
          {
            "name": "physicalBonusPos",
            "type": "number"
          },
          {
            "name": "physicalBonusNeg",
            "type": "number"
          },
          {
            "name": "percent",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitResistance",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "resistanceIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "base",
            "type": "number"
          },
          {
            "name": "resistance",
            "type": "number"
          },
          {
            "name": "positive",
            "type": "number"
          },
          {
            "name": "negative",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitStat",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "statIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "stat",
            "type": "number"
          },
          {
            "name": "effectiveStat",
            "type": "number"
          },
          {
            "name": "posBuff",
            "type": "number"
          },
          {
            "name": "negBuff",
            "type": "number"
          }
        ]
      }
    ],
    "Summoning": [
      {
        "name": "CancelSummon"
      },
      {
        "name": "ConfirmSummon"
      },
      {
        "name": "GetSummonConfirmAreaName",
        "returns": [
          {
            "name": "area",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetSummonConfirmSummoner",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetSummonConfirmTimeLeft",
        "returns": [
          {
            "name": "timeleft",
            "type": "number"
          }
        ]
      },
      {
        "name": "PlayerCanTeleport",
        "returns": [
          {
            "name": "amount",
            "type": "boolean"
          }
        ]
      }
    ],
    "Talent": [
      {
        "name": "AddPreviewTalentPoints",
        "arguments": [
          {
            "name": "tabIndex",
            "type": "number"
          },
          {
            "name": "talentIndex",
            "type": "number"
          },
          {
            "name": "points",
            "type": "number"
          },
          {
            "name": "isPet",
            "type": "boolean"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ]
      },
      {
        "name": "CheckTalentMasterDist",
        "returns": [
          {
            "name": "inRange",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ConfirmTalentWipe"
      },
      {
        "name": "GetActiveTalentGroup",
        "arguments": [
          {
            "name": "isInspect",
            "type": "boolean"
          },
          {
            "name": "isPet",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "activeTalentGroup",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGroupPreviewTalentPointsSpent",
        "arguments": [
          {
            "name": "isPet",
            "type": "boolean"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "pointsSpent",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumTalentGroups",
        "arguments": [
          {
            "name": "isInspect",
            "type": "boolean"
          },
          {
            "name": "isPet",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "numTalentGroups",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumTalentTabs",
        "arguments": [
          {
            "name": "inspect",
            "type": "boolean"
          },
          {
            "name": "pet",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "numTabs",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumTalents",
        "arguments": [
          {
            "name": "tabIndex",
            "type": "number"
          },
          {
            "name": "inspect",
            "type": "boolean"
          },
          {
            "name": "pet",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "numTalents",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetPetTalentTree",
        "returns": [
          {
            "name": "talent",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetPreviewTalentPointsSpent"
      },
      {
        "name": "GetTalentInfo",
        "arguments": [
          {
            "name": "tabIndex",
            "type": "number"
          },
          {
            "name": "talentIndex",
            "type": "number"
          },
          {
            "name": "inspect",
            "type": "boolean"
          },
          {
            "name": "pet",
            "type": "boolean"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "iconTexture",
            "type": "string"
          },
          {
            "name": "tier",
            "type": "number"
          },
          {
            "name": "column",
            "type": "number"
          },
          {
            "name": "rank",
            "type": "number"
          },
          {
            "name": "maxRank",
            "type": "number"
          },
          {
            "name": "isExceptional",
            "type": "boolean"
          },
          {
            "name": "meetsPrereq",
            "type": "boolean"
          },
          {
            "name": "previewRank",
            "type": "number"
          },
          {
            "name": "meetsPreviewPrereq",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetTalentLink",
        "arguments": [
          {
            "name": "tabIndex",
            "type": "number"
          },
          {
            "name": "talentIndex",
            "type": "number"
          },
          {
            "name": "inspect",
            "type": "boolean"
          },
          {
            "name": "pet",
            "type": "boolean"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetTalentPrereqs",
        "arguments": [
          {
            "name": "tabIndex",
            "type": "number"
          },
          {
            "name": "talentIndex",
            "type": "number"
          },
          {
            "name": "inspect",
            "type": "boolean"
          },
          {
            "name": "pet",
            "type": "boolean"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "tier",
            "type": "number"
          },
          {
            "name": "column",
            "type": "number"
          },
          {
            "name": "isLearnable",
            "type": "boolean"
          },
          {
            "name": "isPreviewLearnable",
            "type": "boolean"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetTalentTabInfo",
        "arguments": [
          {
            "name": "tabIndex",
            "type": "number"
          },
          {
            "name": "inspect",
            "type": "boolean"
          },
          {
            "name": "pet",
            "type": "boolean"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "id",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "points",
            "type": "number"
          },
          {
            "name": "background",
            "type": "string"
          },
          {
            "name": "previewPoints",
            "type": "number"
          },
          {
            "name": "isUnlocked",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetUnspentTalentPoints",
        "arguments": [
          {
            "name": "inspect",
            "type": "boolean"
          },
          {
            "name": "pet",
            "type": "boolean"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "points",
            "type": "number"
          }
        ]
      },
      {
        "name": "LearnPreviewTalents",
        "arguments": [
          {
            "name": "isPet",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "LearnTalent",
        "arguments": [
          {
            "name": "tabIndex",
            "type": "number"
          },
          {
            "name": "talentIndex",
            "type": "number"
          },
          {
            "name": "isPet",
            "type": "boolean"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ]
      },
      {
        "name": "ResetGroupPreviewTalentPoints",
        "arguments": [
          {
            "name": "isPet",
            "type": "boolean"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ]
      },
      {
        "name": "ResetPreviewTalentPoints",
        "arguments": [
          {
            "name": "tabIndex",
            "type": "number"
          },
          {
            "name": "isPet",
            "type": "boolean"
          },
          {
            "name": "talentGroup",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetActiveTalentGroup",
        "arguments": [
          {
            "name": "talentGroup",
            "type": "number"
          }
        ]
      }
    ],
    "Targeting": [
      {
        "name": "AssistUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ClearFocus"
      },
      {
        "name": "ClearTarget"
      },
      {
        "name": "FocusUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "SpellCanTargetUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "canTarget",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SpellTargetUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "TargetLastEnemy"
      },
      {
        "name": "TargetLastFriend"
      },
      {
        "name": "TargetLastTarget"
      },
      {
        "name": "TargetNearest",
        "arguments": [
          {
            "name": "backward",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "TargetNearestEnemy",
        "arguments": [
          {
            "name": "backward",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "TargetNearestEnemyPlayer",
        "arguments": [
          {
            "name": "backward",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "TargetNearestFriend",
        "arguments": [
          {
            "name": "backward",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "TargetNearestFriendPlayer",
        "arguments": [
          {
            "name": "backward",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "TargetNearestPartyMember",
        "arguments": [
          {
            "name": "backward",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "TargetNearestRaidMember",
        "arguments": [
          {
            "name": "backward",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "TargetUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "canTarget",
            "type": "boolean"
          }
        ]
      }
    ],
    "TaxiFlight": [
      {
        "name": "CloseTaxiMap"
      },
      {
        "name": "GetNumRoutes",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numHops",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTaxiBenchmarkMode",
        "returns": [
          {
            "name": "isBenchmark",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "NumTaxiNodes",
        "returns": [
          {
            "name": "numNodes",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetTaxiBenchmarkMode",
        "arguments": [
          {
            "name": "arg",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetTaxiMap",
        "arguments": [
          {
            "name": "texture",
            "type": "table"
          }
        ]
      },
      {
        "name": "TakeTaxiNode",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "TaxiGetDestX",
        "arguments": [
          {
            "name": "source",
            "type": "number"
          },
          {
            "name": "dest",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "dX",
            "type": "number"
          }
        ]
      },
      {
        "name": "TaxiGetDestY",
        "arguments": [
          {
            "name": "source",
            "type": "number"
          },
          {
            "name": "dest",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "dY",
            "type": "number"
          }
        ]
      },
      {
        "name": "TaxiGetSrcX",
        "arguments": [
          {
            "name": "source",
            "type": "number"
          },
          {
            "name": "dest",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "sX",
            "type": "number"
          }
        ]
      },
      {
        "name": "TaxiGetSrcY",
        "arguments": [
          {
            "name": "source",
            "type": "number"
          },
          {
            "name": "dest",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "sY",
            "type": "number"
          }
        ]
      },
      {
        "name": "TaxiNodeCost",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "cost",
            "type": "number"
          }
        ]
      },
      {
        "name": "TaxiNodeGetType",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "type",
            "type": "number"
          }
        ]
      },
      {
        "name": "TaxiNodeName",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "TaxiNodePosition",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "x",
            "type": "number"
          },
          {
            "name": "y",
            "type": "number"
          }
        ]
      },
      {
        "name": "TaxiNodeSetCurrent",
        "arguments": [
          {
            "name": "slot",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitOnTaxi",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "onTaxi",
            "type": "boolean"
          }
        ]
      }
    ],
    "Threat": [
      {
        "name": "GetThreatStatusColor",
        "arguments": [
          {
            "name": "status",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "red",
            "type": "number"
          },
          {
            "name": "green",
            "type": "number"
          },
          {
            "name": "blue",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsThreatWarningEnabled",
        "returns": [
          {
            "name": "enabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitDetailedThreatSituation",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "mobUnit",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isTanking",
            "type": "boolean"
          },
          {
            "name": "status",
            "type": "number"
          },
          {
            "name": "scaledPercent",
            "type": "number"
          },
          {
            "name": "rawPercent",
            "type": "number"
          },
          {
            "name": "threatValue",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitThreatSituation",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "mobUnit",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "status",
            "type": "number"
          }
        ]
      }
    ],
    "Tracking": [
      {
        "name": "GetNumTrackingTypes",
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTrackingInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "active",
            "type": "boolean"
          },
          {
            "name": "category",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetTracking",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "enabled",
            "type": "boolean"
          }
        ]
      }
    ],
    "Trade": [
      {
        "name": "AcceptTrade"
      },
      {
        "name": "AddTradeMoney"
      },
      {
        "name": "BeginTrade"
      },
      {
        "name": "CancelTrade"
      },
      {
        "name": "CancelTradeAccept"
      },
      {
        "name": "ClickTargetTradeButton",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "ClickTradeButton",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CloseTrade"
      },
      {
        "name": "GetPlayerTradeMoney",
        "returns": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTargetTradeMoney",
        "returns": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTradePlayerItemInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "numItems",
            "type": "number"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          },
          {
            "name": "isUsable",
            "type": "boolean"
          },
          {
            "name": "enchantment",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTradePlayerItemLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetTradeTargetItemInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "numItems",
            "type": "number"
          },
          {
            "name": "quality",
            "type": "itemQuality"
          },
          {
            "name": "isUsable",
            "type": "boolean"
          },
          {
            "name": "enchantment",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTradeTargetItemLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "InitiateTrade",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "PickupTradeMoney",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "ReplaceTradeEnchant"
      },
      {
        "name": "SetTradeMoney",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      }
    ],
    "Tradeskill": [
      {
        "name": "CloseTradeSkill"
      },
      {
        "name": "CollapseTradeSkillSubClass",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "DoTradeSkill",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "repeat",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "ExpandTradeSkillSubClass",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetFirstTradeSkill",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumTradeSkills",
        "returns": [
          {
            "name": "numSkills",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTradeSkillCooldown",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "cooldown",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTradeSkillDescription",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "description",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTradeSkillIcon",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "texturePath",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTradeSkillInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "skillName",
            "type": "string"
          },
          {
            "name": "skillType",
            "type": "string"
          },
          {
            "name": "numAvailable",
            "type": "number"
          },
          {
            "name": "isExpanded",
            "type": "boolean"
          },
          {
            "name": "serviceType",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTradeSkillInvSlotFilter",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "enabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetTradeSkillInvSlots",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetTradeSkillItemLevelFilter",
        "returns": [
          {
            "name": "minLevel",
            "type": "number"
          },
          {
            "name": "maxLevel",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTradeSkillItemLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTradeSkillItemNameFilter",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTradeSkillLine",
        "returns": [
          {
            "name": "tradeskillName",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "number"
          },
          {
            "name": "maxLevel",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTradeSkillListLink",
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetTradeSkillNumMade",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "minMade",
            "type": "number"
          },
          {
            "name": "maxMade",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTradeSkillNumReagents",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numReagents",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTradeSkillReagentInfo",
        "arguments": [
          {
            "name": "skillIndex",
            "type": "number"
          },
          {
            "name": "reagentIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "reagentName",
            "type": "string"
          },
          {
            "name": "reagentTexture",
            "type": "string"
          },
          {
            "name": "reagentCount",
            "type": "number"
          },
          {
            "name": "playerReagentCount",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTradeSkillReagentItemLink",
        "arguments": [
          {
            "name": "skillIndex",
            "type": "number"
          },
          {
            "name": "reagentIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetTradeSkillRecipeLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTradeSkillSelectionIndex",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTradeSkillSubClassFilter",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "enabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetTradeSkillSubClasses",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetTradeSkillTools",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "toolName",
            "type": "string"
          },
          {
            "name": "hasTool",
            "type": "boolean"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetTradeskillRepeatCount",
        "returns": [
          {
            "name": "repeatCount",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsTradeSkillLinked",
        "returns": [
          {
            "name": "isLinked",
            "type": "boolean"
          },
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "SelectTradeSkill",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetTradeSkillInvSlotFilter",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          },
          {
            "name": "exclusive",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "SetTradeSkillItemLevelFilter",
        "arguments": [
          {
            "name": "minLevel",
            "type": "number"
          },
          {
            "name": "maxLevel",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetTradeSkillItemNameFilter",
        "arguments": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetTradeSkillSubClassFilter",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "enable",
            "type": "number"
          },
          {
            "name": "exclusive",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "StopTradeSkillRepeat"
      },
      {
        "name": "TradeSkillOnlyShowMakeable",
        "arguments": [
          {
            "name": "filter",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "TradeSkillOnlyShowSkillUps",
        "arguments": [
          {
            "name": "filter",
            "type": "boolean"
          }
        ]
      }
    ],
    "Trainer": [
      {
        "name": "BuyTrainerService",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "CheckTalentMasterDist",
        "returns": [
          {
            "name": "inRange",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CloseTrainer"
      },
      {
        "name": "GetNumTrainerServices",
        "returns": [
          {
            "name": "numServices",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTrainerGreetingText",
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTrainerSelectionIndex",
        "returns": [
          {
            "name": "selectionIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTrainerServiceAbilityReq",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "abilityIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "ability",
            "type": "string"
          },
          {
            "name": "hasReq",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetTrainerServiceCost",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "moneyCost",
            "type": "number"
          },
          {
            "name": "talentCost",
            "type": "number"
          },
          {
            "name": "skillCost",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTrainerServiceDescription",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTrainerServiceIcon",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "icon",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTrainerServiceInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "serviceName",
            "type": "string"
          },
          {
            "name": "serviceSubText",
            "type": "string"
          },
          {
            "name": "serviceType",
            "type": "string"
          },
          {
            "name": "isExpanded",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetTrainerServiceItemLink",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "link",
            "type": "hyperlink"
          }
        ]
      },
      {
        "name": "GetTrainerServiceLevelReq",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "reqLevel",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTrainerServiceNumAbilityReq",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numRequirements",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTrainerServiceSkillLine",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "skillLine",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetTrainerServiceSkillReq",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "skill",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "number"
          },
          {
            "name": "hasReq",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetTrainerServiceStepReq"
      },
      {
        "name": "GetTrainerServiceTypeFilter",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isEnabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsTradeskillTrainer",
        "returns": [
          {
            "name": "isTradeskill",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "OpenTrainer"
      },
      {
        "name": "SelectTrainerService",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetTrainerServiceTypeFilter",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "enable",
            "type": "number"
          },
          {
            "name": "exclusive",
            "type": "boolean",
            "optional": true
          }
        ]
      },
      {
        "name": "SetTrainerSkillLineFilter",
        "arguments": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "enable",
            "type": "number"
          },
          {
            "name": "exclusive",
            "type": "boolean",
            "optional": true
          }
        ]
      }
    ],
    "Tutorial": [
      {
        "name": "ClearTutorials"
      },
      {
        "name": "FlagTutorial",
        "arguments": [
          {
            "name": "tutorial",
            "type": "string"
          }
        ]
      },
      {
        "name": "ResetTutorials"
      }
    ],
    "UIVisual": [
      {
        "name": "ConsoleAddMessage"
      },
      {
        "name": "ConsoleExec",
        "arguments": [
          {
            "name": "console_command",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetupFullscreenScale",
        "arguments": [
          {
            "name": "frame",
            "type": "table"
          }
        ]
      },
      {
        "name": "ShowCloak",
        "arguments": [
          {
            "name": "show",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ShowHelm",
        "arguments": [
          {
            "name": "show",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ShowingCloak",
        "returns": [
          {
            "name": "isShown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "ShowingHelm",
        "returns": [
          {
            "name": "isShown",
            "type": "boolean"
          }
        ]
      }
    ],
    "Uncategorized": [
      {
        "name": "AcceptProposal"
      },
      {
        "name": "BNAcceptFriendInvite"
      },
      {
        "name": "BNConnected",
        "returns": [
          {
            "name": "isOnline",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "BNCreateConversation",
        "arguments": [
          {
            "name": "presenceID_1",
            "type": "number"
          },
          {
            "name": "presenceID_2",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "result",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "BNDeclineFriendInvite"
      },
      {
        "name": "BNFeaturesEnabled",
        "returns": [
          {
            "name": "isEnabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "BNFeaturesEnabledAndConnected"
      },
      {
        "name": "BNGetBlockedInfo"
      },
      {
        "name": "BNGetBlockedToonInfo"
      },
      {
        "name": "BNGetConversationInfo",
        "arguments": [
          {
            "name": "channel",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "type",
            "type": "string"
          }
        ]
      },
      {
        "name": "BNGetConversationMemberInfo",
        "arguments": [
          {
            "name": "channel",
            "type": "number"
          },
          {
            "name": "memberIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "presenceID",
            "type": "number"
          },
          {
            "name": "unknown",
            "type": "number"
          },
          {
            "name": "displayName",
            "type": "string"
          }
        ]
      },
      {
        "name": "BNGetCustomMessageTable"
      },
      {
        "name": "BNGetFOFInfo",
        "arguments": [
          {
            "name": "presenceID",
            "type": "number"
          },
          {
            "name": "mutual",
            "type": "boolean"
          },
          {
            "name": "non-mutual",
            "type": "boolean"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "presenceID",
            "type": "number"
          },
          {
            "name": "givenName",
            "type": "string"
          },
          {
            "name": "surname",
            "type": "string"
          },
          {
            "name": "isFriend",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "BNGetFriendInviteInfo"
      },
      {
        "name": "BNGetMaxPlayersInConversation",
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "BNGetNumBlocked"
      },
      {
        "name": "BNGetNumBlockedToons"
      },
      {
        "name": "BNGetNumConversationMembers",
        "arguments": [
          {
            "name": "channel",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "memberCount",
            "type": "number"
          }
        ]
      },
      {
        "name": "BNGetNumFOF"
      },
      {
        "name": "BNGetNumFriendInvites"
      },
      {
        "name": "BNGetSelectedBlock"
      },
      {
        "name": "BNGetSelectedToonBlock"
      },
      {
        "name": "BNInviteToConversation",
        "arguments": [
          {
            "name": "channel",
            "type": "number"
          },
          {
            "name": "presenceID",
            "type": "number"
          }
        ]
      },
      {
        "name": "BNIsBlocked"
      },
      {
        "name": "BNIsFriend"
      },
      {
        "name": "BNIsSelf",
        "arguments": [
          {
            "name": "presenceID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isSelf",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "BNIsToonBlocked"
      },
      {
        "name": "BNLeaveConversation"
      },
      {
        "name": "BNListConversation"
      },
      {
        "name": "BNRemoveFriend"
      },
      {
        "name": "BNReportFriendInvite"
      },
      {
        "name": "BNReportPlayer"
      },
      {
        "name": "BNRequestFOFInfo"
      },
      {
        "name": "BNSendConversationMessage"
      },
      {
        "name": "BNSendFriendInvite"
      },
      {
        "name": "BNSendFriendInviteByID"
      },
      {
        "name": "BNSendWhisper"
      },
      {
        "name": "BNSetAFK"
      },
      {
        "name": "BNSetBlocked"
      },
      {
        "name": "BNSetDND"
      },
      {
        "name": "BNSetFocus"
      },
      {
        "name": "BNSetSelectedBlock"
      },
      {
        "name": "BNSetSelectedFriend"
      },
      {
        "name": "BNSetSelectedToonBlock"
      },
      {
        "name": "BNSetToonBlocked"
      },
      {
        "name": "BattlefieldMgrEntryInviteResponse"
      },
      {
        "name": "BattlefieldMgrExitRequest"
      },
      {
        "name": "BattlefieldMgrQueueInviteResponse"
      },
      {
        "name": "BattlefieldMgrQueueRequest"
      },
      {
        "name": "CalendarContextInviteTentative"
      },
      {
        "name": "CalendarEventTentative"
      },
      {
        "name": "CalendarGetDayEventSequenceInfo"
      },
      {
        "name": "CanChangePlayerDifficulty"
      },
      {
        "name": "CanMapChangeDifficulty"
      },
      {
        "name": "CanPartyLFGBackfill"
      },
      {
        "name": "CanResetTutorials"
      },
      {
        "name": "CancelSell"
      },
      {
        "name": "CannotBeResurrected"
      },
      {
        "name": "ChangePlayerDifficulty"
      },
      {
        "name": "ClearAllLFGDungeons"
      },
      {
        "name": "ClearLFGDungeon"
      },
      {
        "name": "CompleteLFGRoleCheck"
      },
      {
        "name": "DungeonUsesTerrainMap"
      },
      {
        "name": "FindSpellBookSlotByID"
      },
      {
        "name": "ForceGossip"
      },
      {
        "name": "GMReportLag"
      },
      {
        "name": "GetAllowLowLevelRaid"
      },
      {
        "name": "GetAutoCompletePresenceID"
      },
      {
        "name": "GetAvailableQuestInfo",
        "arguments": [
          {
            "name": "availableIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isTrivial",
            "type": "boolean"
          },
          {
            "name": "isDaily",
            "type": "boolean"
          },
          {
            "name": "isRepeatable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetChatWindowSavedDimensions"
      },
      {
        "name": "GetChatWindowSavedPosition"
      },
      {
        "name": "GetContainerItemQuestInfo",
        "arguments": [
          {
            "name": "container",
            "type": "number"
          },
          {
            "name": "slot",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "isQuest",
            "type": "boolean"
          },
          {
            "name": "questId",
            "type": "number"
          },
          {
            "name": "isActive",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetFactionInfoByID",
        "arguments": [
          {
            "name": "factionID",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "standingID",
            "type": "number"
          },
          {
            "name": "barMin",
            "type": "number"
          },
          {
            "name": "barMax",
            "type": "number"
          },
          {
            "name": "barValue",
            "type": "number"
          },
          {
            "name": "atWarWith",
            "type": "boolean"
          },
          {
            "name": "canToggleAtWar",
            "type": "boolean"
          },
          {
            "name": "isHeader",
            "type": "boolean"
          },
          {
            "name": "isCollapsed",
            "type": "boolean"
          },
          {
            "name": "hasRep",
            "type": "boolean"
          },
          {
            "name": "isWatched",
            "type": "boolean"
          },
          {
            "name": "isChild",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetInstanceLockTimeRemainingEncounter"
      },
      {
        "name": "GetLFDChoiceCollapseState"
      },
      {
        "name": "GetLFDChoiceEnabledState"
      },
      {
        "name": "GetLFDChoiceLockedState"
      },
      {
        "name": "GetLFDLockInfo"
      },
      {
        "name": "GetLFDLockPlayerCount"
      },
      {
        "name": "GetLFGBootProposal"
      },
      {
        "name": "GetLFGCompletionReward",
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "typeID",
            "type": "number"
          },
          {
            "name": "textureFilename",
            "type": "string"
          },
          {
            "name": "moneyBase",
            "type": "number"
          },
          {
            "name": "moneyVar",
            "type": "number"
          },
          {
            "name": "experienceBase",
            "type": "number"
          },
          {
            "name": "experienceVar",
            "type": "number"
          },
          {
            "name": "numStrangers",
            "type": "number"
          },
          {
            "name": "numRewards",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetLFGCompletionRewardItem"
      },
      {
        "name": "GetLFGDeserterExpiration"
      },
      {
        "name": "GetLFGDungeonInfo"
      },
      {
        "name": "GetLFGDungeonRewardInfo"
      },
      {
        "name": "GetLFGDungeonRewardLink"
      },
      {
        "name": "GetLFGDungeonRewards"
      },
      {
        "name": "GetLFGInfoLocal"
      },
      {
        "name": "GetLFGInfoServer"
      },
      {
        "name": "GetLFGProposal"
      },
      {
        "name": "GetLFGProposalEncounter"
      },
      {
        "name": "GetLFGProposalMember"
      },
      {
        "name": "GetLFGQueueStats"
      },
      {
        "name": "GetLFGQueuedList"
      },
      {
        "name": "GetLFGRandomCooldownExpiration"
      },
      {
        "name": "GetLFGRandomDungeonInfo"
      },
      {
        "name": "GetLFGRoleUpdate"
      },
      {
        "name": "GetLFGRoleUpdateMember"
      },
      {
        "name": "GetLFGRoleUpdateSlot"
      },
      {
        "name": "GetLFRChoiceOrder"
      },
      {
        "name": "GetLastQueueStatusIndex"
      },
      {
        "name": "GetMultiCastBarOffset"
      },
      {
        "name": "GetMultiCastTotemSpells"
      },
      {
        "name": "GetNextCompleatedTutorial"
      },
      {
        "name": "GetNumQuestItemDrops"
      },
      {
        "name": "GetNumQuestLogRewardFactions"
      },
      {
        "name": "GetNumRandomDungeons"
      },
      {
        "name": "GetPartyLFGBackfillInfo"
      },
      {
        "name": "GetPetSpellBonusDamage"
      },
      {
        "name": "GetPrevCompleatedTutorial"
      },
      {
        "name": "GetQuestLogItemDrop"
      },
      {
        "name": "GetQuestLogRewardArenaPoints"
      },
      {
        "name": "GetQuestLogRewardFactionInfo"
      },
      {
        "name": "GetQuestLogRewardXP",
        "returns": [
          {
            "name": "experience",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestPOILeaderBoard"
      },
      {
        "name": "GetQuestSortIndex"
      },
      {
        "name": "GetQuestWatchIndex",
        "arguments": [
          {
            "name": "questLogIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "questWatchIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetQuestWorldMapAreaID"
      },
      {
        "name": "GetRaidDifficulty"
      },
      {
        "name": "GetRandomBGHonorCurrencyBonuses"
      },
      {
        "name": "GetRandomDungeonBestChoice"
      },
      {
        "name": "GetRewardArenaPoints",
        "returns": [
          {
            "name": "arenaPoints",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetVehicleUIIndicator"
      },
      {
        "name": "GetVehicleUIIndicatorSeat"
      },
      {
        "name": "HasCompletedAnyAchievement",
        "returns": [
          {
            "name": "state",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "HasLFGRestrictions"
      },
      {
        "name": "IsBNLogin"
      },
      {
        "name": "IsInLFGDungeon"
      },
      {
        "name": "IsLFGDungeonJoinable"
      },
      {
        "name": "IsListedInLFR",
        "returns": [
          {
            "name": "listedInLFR",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsPartyLFG"
      },
      {
        "name": "IsPetAttackAction"
      },
      {
        "name": "IsTutorialFlagged"
      },
      {
        "name": "IsZoomOutAvailable"
      },
      {
        "name": "JoinLFG"
      },
      {
        "name": "LeaveLFG"
      },
      {
        "name": "PartyLFGStartBackfill"
      },
      {
        "name": "ProcessQuestLogRewardFactions"
      },
      {
        "name": "QuestIsDaily"
      },
      {
        "name": "QuestIsWeekly"
      },
      {
        "name": "QuestMapUpdateAllQuests"
      },
      {
        "name": "QuestPOIGetIconInfo"
      },
      {
        "name": "QuestPOIGetQuestIDByIndex"
      },
      {
        "name": "QuestPOIGetQuestIDByVisibleIndex"
      },
      {
        "name": "QuestPOIUpdateIcons"
      },
      {
        "name": "RefreshLFGList"
      },
      {
        "name": "RegisterStaticConstants"
      },
      {
        "name": "RejectProposal"
      },
      {
        "name": "RequestLFDPartyLockInfo"
      },
      {
        "name": "RequestLFDPlayerLockInfo"
      },
      {
        "name": "RespondMailLockSendItem"
      },
      {
        "name": "SearchLFGGetEncounterResults"
      },
      {
        "name": "SearchLFGGetJoinedID"
      },
      {
        "name": "SearchLFGGetNumResults"
      },
      {
        "name": "SearchLFGGetPartyResults"
      },
      {
        "name": "SearchLFGGetResults"
      },
      {
        "name": "SearchLFGJoin"
      },
      {
        "name": "SearchLFGLeave"
      },
      {
        "name": "SearchLFGSort"
      },
      {
        "name": "SendSystemMessage"
      },
      {
        "name": "SetAllowLowLevelRaid",
        "arguments": [
          {
            "name": "enable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetAuctionsTabShowing"
      },
      {
        "name": "SetChatColorNameByClass",
        "arguments": [
          {
            "name": "chatType",
            "type": "string"
          },
          {
            "name": "colorByName",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetChatWindowSavedDimensions"
      },
      {
        "name": "SetChatWindowSavedPosition"
      },
      {
        "name": "SetLFGBootVote"
      },
      {
        "name": "SetLFGDungeon",
        "arguments": [
          {
            "name": "queueIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetLFGDungeonEnabled"
      },
      {
        "name": "SetLFGHeaderCollapsed"
      },
      {
        "name": "SetMapByID",
        "arguments": [
          {
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetPOIIconOverlapDistance"
      },
      {
        "name": "SetPOIIconOverlapPushDistance"
      },
      {
        "name": "SetSavedInstanceExtend"
      },
      {
        "name": "ShiftQuestWatches"
      },
      {
        "name": "SortBGList"
      },
      {
        "name": "SortQuestWatches",
        "returns": [
          {
            "name": "changed",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "Stopwatch_Clear"
      },
      {
        "name": "Stopwatch_FinishCountdown"
      },
      {
        "name": "Stopwatch_IsPlaying"
      },
      {
        "name": "Stopwatch_Pause"
      },
      {
        "name": "Stopwatch_Play"
      },
      {
        "name": "Stopwatch_StartCountdown"
      },
      {
        "name": "Stopwatch_Toggle"
      },
      {
        "name": "TriggerTutorial"
      },
      {
        "name": "UnitGroupRolesAssigned"
      },
      {
        "name": "UnitHasLFGDeserter"
      },
      {
        "name": "UnitHasLFGRandomCooldown"
      },
      {
        "name": "debughook"
      }
    ],
    "Unit": [
      {
        "name": "CanInspect",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "showError",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "canInspect",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CheckInteractDistance",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "distIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canInteract",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetGuildInfo",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "guildName",
            "type": "string"
          },
          {
            "name": "guildRankName",
            "type": "string"
          },
          {
            "name": "guildRankIndex",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMuteStatus",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "channel",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "muteStatus",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetPlayerInfoByGUID",
        "arguments": [
          {
            "name": "guid",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "class",
            "type": "string"
          },
          {
            "name": "classFilename",
            "type": "string"
          },
          {
            "name": "race",
            "type": "string"
          },
          {
            "name": "raceFilename",
            "type": "string"
          },
          {
            "name": "sex",
            "type": "number"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "realm",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetUnitName",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "showServerName",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "nameString",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetUnitSpeed",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "speed",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsIgnoredOrMuted",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isIgnoredOrMuted",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsMuted",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "muted",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsUnitOnQuest",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          },
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "state",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetPortraitTexture",
        "arguments": [
          {
            "name": "texture",
            "type": "table"
          },
          {
            "name": "unit",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitAffectingCombat",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "inCombat",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitAura",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "rank",
            "type": "string",
            "optional": true
          },
          {
            "name": "filter",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "dispelType",
            "type": "string"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "expires",
            "type": "number"
          },
          {
            "name": "caster",
            "type": "string"
          },
          {
            "name": "isStealable",
            "type": "1nil"
          },
          {
            "name": "shouldConsolidate",
            "type": "boolean"
          },
          {
            "name": "spellID",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitCanAssist",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "canAssist",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitCanAttack",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "canAttack",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitCanCooperate",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "canCooperate",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitCastingInfo",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "subText",
            "type": "string"
          },
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "startTime",
            "type": "number"
          },
          {
            "name": "endTime",
            "type": "number"
          },
          {
            "name": "isTradeSkill",
            "type": "boolean"
          },
          {
            "name": "castID",
            "type": "number"
          },
          {
            "name": "notInterruptible",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitChannelInfo",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "subText",
            "type": "string"
          },
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "texture",
            "type": "string"
          },
          {
            "name": "startTime",
            "type": "number"
          },
          {
            "name": "endTime",
            "type": "number"
          },
          {
            "name": "isTradeSkill",
            "type": "boolean"
          },
          {
            "name": "notInterruptible",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitClass",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "class",
            "type": "string"
          },
          {
            "name": "classFileName",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitClassBase",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "class",
            "type": "string"
          },
          {
            "name": "classFileName",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitClassification",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "classification",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitCreatureFamily",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "family",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitCreatureType",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "type",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitDebuff",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "index",
            "type": "number",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "rank",
            "type": "string",
            "optional": true
          },
          {
            "name": "filter",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "rank",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "count",
            "type": "number"
          },
          {
            "name": "dispelType",
            "type": "string"
          },
          {
            "name": "duration",
            "type": "number"
          },
          {
            "name": "expires",
            "type": "number"
          },
          {
            "name": "caster",
            "type": "string"
          },
          {
            "name": "isStealable",
            "type": "1nil"
          }
        ]
      },
      {
        "name": "UnitExists",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "exists",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitFactionGroup",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "factionGroup",
            "type": "string"
          },
          {
            "name": "factionName",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitGUID",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "guid",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitHasRelicSlot",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "hasRelic",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitHealth",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "modifier",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitHealthMax",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "maxValue",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitInBattleground",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "raidNum",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitInParty",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "inParty",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitInRaid",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "inRaid",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitInRange",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "inRange",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsAFK",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isAFK",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsCharmed",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isCharmed",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsConnected",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isConnected",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsControlling",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isControlling",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsCorpse",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isCorpse",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsDND",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isDND",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsDead",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isDead",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsDeadOrGhost",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isDeadOrGhost",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsEnemy",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isEnemy",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsFeignDeath",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isFeign",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsFriend",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isFriends",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsGhost",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isGhost",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsInMyGuild",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "inGuild",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsPVP",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isPVP",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsPVPFreeForAll",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isFreeForAll",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsPVPSanctuary",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "state",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsPartyLeader",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "leader",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsPlayer",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isPlayer",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsPossessed",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isPossessed",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsRaidOfficer",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "leader",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsSameServer",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isSame",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsTapped",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitIsTappedByAllThreatList",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "allTapped",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsTappedByPlayer",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isTapped",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsTrivial",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isTrivial",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isSame",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsVisible",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isVisible",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitLevel",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "level",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitMana",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "regen",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitManaMax",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "maxValue",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitName",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "showServerName",
            "type": "boolean"
          }
        ],
        "returns": [
          {
            "name": "nameString",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitOnTaxi",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "onTaxi",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitPVPName",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitPVPRank",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "rank",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitPlayerControlled",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isPlayer",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitPlayerOrPetInParty",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "inParty",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitPlayerOrPetInRaid",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "inParty",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitPower",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "modifier",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitPowerMax",
        "arguments": [
          {
            "name": "unitID",
            "type": "string"
          },
          {
            "name": "powerType",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "maxValue",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitPowerType",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "powerType",
            "type": "number"
          },
          {
            "name": "powerToken",
            "type": "string"
          },
          {
            "name": "altR",
            "type": "number"
          },
          {
            "name": "altG",
            "type": "number"
          },
          {
            "name": "altB",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitRace",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "race",
            "type": "string"
          },
          {
            "name": "fileName",
            "type": "string"
          }
        ]
      },
      {
        "name": "UnitReaction",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "reaction",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitSelectionColor",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "red",
            "type": "number"
          },
          {
            "name": "green",
            "type": "number"
          },
          {
            "name": "blue",
            "type": "number"
          },
          {
            "name": "alpha",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitSex",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "gender",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitUsingVehicle",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "usingVehicle",
            "type": "boolean"
          }
        ]
      }
    ],
    "Utility": [
      {
        "name": "CreateFont",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "fontObject",
            "type": "table"
          }
        ]
      },
      {
        "name": "CreateFrame",
        "arguments": [
          {
            "name": "frameType",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "parent",
            "type": "table"
          },
          {
            "name": "template",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "frame",
            "type": "table"
          }
        ]
      },
      {
        "name": "EnumerateFrames",
        "arguments": [
          {
            "name": "currentFrame",
            "type": "table",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "nextFrame",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetAutoCompleteResults",
        "arguments": [
          {
            "name": "inputString",
            "type": "string"
          },
          {
            "name": "includeBitfield",
            "type": "number"
          },
          {
            "name": "excludeBitfield",
            "type": "number"
          },
          {
            "name": "maxResults",
            "type": "number"
          },
          {
            "name": "cursorPosition",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetClickFrame",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "frame",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetCurrentKeyBoardFocus",
        "returns": [
          {
            "name": "frame",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetFramesRegisteredForEvent",
        "arguments": [
          {
            "name": "event",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetMirrorTimerInfo",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "timer",
            "type": "string"
          },
          {
            "name": "value",
            "type": "number"
          },
          {
            "name": "maxvalue",
            "type": "number"
          },
          {
            "name": "scale",
            "type": "number"
          },
          {
            "name": "paused",
            "type": "number"
          },
          {
            "name": "label",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetMirrorTimerProgress",
        "arguments": [
          {
            "name": "timer",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "progress",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMouseButtonClicked",
        "returns": [
          {
            "name": "button",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetMouseButtonName",
        "arguments": [
          {
            "name": "buttonNumber",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "buttonName",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetMouseFocus",
        "returns": [
          {
            "name": "frame",
            "type": "table"
          }
        ]
      },
      {
        "name": "GetMuteName",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetNumFrames",
        "returns": [
          {
            "name": "numFrames",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetText",
        "arguments": [
          {
            "name": "eventType",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "icon",
            "type": "string"
          },
          {
            "name": "expansion",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTime",
        "returns": [
          {
            "name": "time",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsLoggedIn",
        "returns": [
          {
            "name": "loggedIn",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsMouseButtonDown",
        "arguments": [
          {
            "name": "button",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isDown",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "RegisterForSave"
      },
      {
        "name": "RegisterForSavePerCharacter"
      },
      {
        "name": "RequestTimePlayed"
      },
      {
        "name": "RunScript",
        "arguments": [
          {
            "name": "script",
            "type": "string"
          }
        ]
      },
      {
        "name": "SecondsToTime",
        "arguments": [
          {
            "name": "seconds",
            "type": "number"
          },
          {
            "name": "noSeconds",
            "type": "boolean"
          },
          {
            "name": "notAbbreviated",
            "type": "boolean"
          },
          {
            "name": "maxCount",
            "type": "number",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "time",
            "type": "string"
          }
        ]
      },
      {
        "name": "SetPortraitToTexture",
        "arguments": [
          {
            "name": "frameName",
            "type": "string"
          },
          {
            "name": "texturePath",
            "type": "string"
          }
        ]
      },
      {
        "name": "debuglocals",
        "arguments": [
          {
            "name": "stackLevel",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "localsInfo",
            "type": "string"
          }
        ]
      },
      {
        "name": "getglobal",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "value",
            "type": "string"
          }
        ]
      },
      {
        "name": "scrub",
        "arguments": [
          {
            "name": "...",
            "type": "table"
          }
        ],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "setglobal",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "value",
            "type": "string"
          }
        ]
      },
      {
        "name": "strconcat",
        "arguments": [
          {
            "name": "...",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "result",
            "type": "string"
          }
        ]
      },
      {
        "name": "strjoin",
        "arguments": [
          {
            "name": "sep",
            "type": "string"
          },
          {
            "name": "...",
            "type": "table"
          }
        ],
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "strlenutf8",
        "arguments": [
          {
            "name": "string",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "length",
            "type": "number"
          }
        ]
      },
      {
        "name": "strreplace",
        "arguments": [
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "pattern",
            "type": "string"
          },
          {
            "name": "replacement",
            "type": "string"
          },
          {
            "name": "count",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "newText",
            "type": "string"
          },
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "strsplit",
        "arguments": [
          {
            "name": "sep",
            "type": "string"
          },
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "limit",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "strtrim",
        "arguments": [
          {
            "name": "str",
            "type": "string"
          },
          {
            "name": "trimChars",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "text",
            "type": "string"
          }
        ]
      },
      {
        "name": "wipe"
      }
    ],
    "Vehicle": [
      {
        "name": "CanEjectPassengerFromSeat",
        "arguments": [
          {
            "name": "seat",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canEject",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanExitVehicle",
        "returns": [
          {
            "name": "canExit",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanSwitchVehicleSeat",
        "returns": [
          {
            "name": "canSwitch",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CanSwitchVehicleSeats",
        "returns": [
          {
            "name": "canSwitch",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "CombatTextSetActiveUnit",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ]
      },
      {
        "name": "EjectPassengerFromSeat",
        "arguments": [
          {
            "name": "seat",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "canEject",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsUsingVehicleControls"
      },
      {
        "name": "IsVehicleAimAngleAdjustable",
        "returns": [
          {
            "name": "hasAngleControl",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsVehicleAimPowerAdjustable"
      },
      {
        "name": "UnitControllingVehicle",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "isControlling",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitHasVehicleUI",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "hasVehicle",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitInVehicle",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "inVehicle",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitInVehicleControlSeat",
        "returns": [
          {
            "name": "isInControl",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsControlling",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isControlling",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitSwitchToVehicleSeat",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "seat",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitTargetsVehicleInRaidUI",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "targetVehicle",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitUsingVehicle",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "usingVehicle",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitVehicleSeatCount",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "numSeats",
            "type": "number"
          }
        ]
      },
      {
        "name": "UnitVehicleSeatInfo",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          },
          {
            "name": "seat",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "controlType",
            "type": "string"
          },
          {
            "name": "occupantName",
            "type": "string"
          },
          {
            "name": "occupantRealm",
            "type": "string"
          },
          {
            "name": "canEject",
            "type": "boolean"
          },
          {
            "name": "canSwitchSeats",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitVehicleSkin",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "skin",
            "type": "string"
          }
        ]
      },
      {
        "name": "VehicleAimDecrement",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "VehicleAimDownStart"
      },
      {
        "name": "VehicleAimDownStop"
      },
      {
        "name": "VehicleAimGetAngle",
        "returns": [
          {
            "name": "angle",
            "type": "number"
          }
        ]
      },
      {
        "name": "VehicleAimGetNormAngle"
      },
      {
        "name": "VehicleAimGetNormPower"
      },
      {
        "name": "VehicleAimIncrement",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "VehicleAimRequestAngle",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "VehicleAimRequestNormAngle",
        "arguments": [
          {
            "name": "amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "VehicleAimSetNormPower"
      },
      {
        "name": "VehicleAimUpStart"
      },
      {
        "name": "VehicleAimUpStop"
      },
      {
        "name": "VehicleCameraZoomIn"
      },
      {
        "name": "VehicleCameraZoomOut"
      },
      {
        "name": "VehicleExit"
      },
      {
        "name": "VehicleNextSeat"
      },
      {
        "name": "VehiclePrevSeat"
      }
    ],
    "Video": [
      {
        "name": "GetCurrentMultisampleFormat",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetCurrentResolution",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetFarclip",
        "returns": [
          {
            "name": "distance",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetFramerate",
        "returns": [
          {
            "name": "framerate",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetGamma",
        "returns": [
          {
            "name": "gamma",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMultisampleFormats",
        "arguments": [],
        "returns": [
          {
            "name": "color",
            "type": "number"
          },
          {
            "name": "depth",
            "type": "number"
          },
          {
            "name": "multisample",
            "type": "number"
          },
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetRefreshRates",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetScreenHeight",
        "returns": [
          {
            "name": "height",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetScreenResolutions",
        "arguments": [],
        "returns": [
          {
            "name": "...",
            "type": "list"
          }
        ]
      },
      {
        "name": "GetScreenWidth",
        "returns": [
          {
            "name": "screenWidth",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetTerrainMip",
        "returns": [
          {
            "name": "terrainDetail",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetVideoCaps",
        "returns": [
          {
            "name": "hasAnisotropic",
            "type": "number"
          },
          {
            "name": "hasPixelShaders",
            "type": "number"
          },
          {
            "name": "hasVertexShaders",
            "type": "number"
          },
          {
            "name": "hasTrilinear",
            "type": "number"
          },
          {
            "name": "hasTripleBufering",
            "type": "number"
          },
          {
            "name": "maxAnisotropy",
            "type": "number"
          },
          {
            "name": "hasHardwareCursor",
            "type": "number"
          }
        ]
      },
      {
        "name": "IsDesaturateSupported",
        "returns": [
          {
            "name": "isSupported",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsPlayerResolutionAvailable",
        "returns": [
          {
            "name": "isAvailable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsStereoVideoAvailable",
        "returns": [
          {
            "name": "isAvailable",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "RestartGx"
      },
      {
        "name": "RestoreVideoStereoDefaults"
      },
      {
        "name": "SetGamma",
        "arguments": [
          {
            "name": "value",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetMultisampleFormat",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetScreenResolution",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetTexLodBias"
      },
      {
        "name": "SetWaterDetail",
        "arguments": [
          {
            "name": "value",
            "type": "number"
          }
        ]
      }
    ],
    "Voice": [
      {
        "name": "AddMute",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "AddOrDelMute",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelSilenceAll",
        "arguments": [
          {
            "name": "channelName",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelId",
            "type": "number",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelSilenceVoice",
        "arguments": [
          {
            "name": "channelName",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelId",
            "type": "number",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelUnSilenceAll",
        "arguments": [
          {
            "name": "channelName",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelId",
            "type": "number",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelUnSilenceVoice",
        "arguments": [
          {
            "name": "channelName",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelId",
            "type": "number",
            "optional": true
          },
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelVoiceOff",
        "arguments": [
          {
            "name": "channel",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelIndex",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "ChannelVoiceOn",
        "arguments": [
          {
            "name": "channel",
            "type": "string",
            "optional": true
          },
          {
            "name": "channelIndex",
            "type": "number",
            "optional": true
          }
        ]
      },
      {
        "name": "DelMute",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ]
      },
      {
        "name": "DisplayChannelVoiceOff",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "DisplayChannelVoiceOn",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetActiveVoiceChannel",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetMuteName",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetMuteStatus",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "channel",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "muteStatus",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetNumMutes",
        "returns": [
          {
            "name": "numMuted",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumVoiceSessionMembersBySessionID",
        "arguments": [
          {
            "name": "sessionId",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "numMembers",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetNumVoiceSessions",
        "returns": [
          {
            "name": "count",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetSelectedMute",
        "returns": [
          {
            "name": "selectedMute",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetVoiceCurrentSessionID",
        "returns": [
          {
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "name": "GetVoiceSessionInfo",
        "arguments": [
          {
            "name": "session",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "active",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetVoiceSessionMemberInfoBySessionID",
        "arguments": [
          {
            "name": "session",
            "type": "number"
          },
          {
            "name": "index",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "voiceActive",
            "type": "boolean"
          },
          {
            "name": "sessionActive",
            "type": "boolean"
          },
          {
            "name": "muted",
            "type": "boolean"
          },
          {
            "name": "squelched",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "GetVoiceStatus",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          },
          {
            "name": "channel",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "status",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsIgnoredOrMuted",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isIgnoredOrMuted",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsMuted",
        "arguments": [
          {
            "name": "unit",
            "type": "string",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "optional": true
          }
        ],
        "returns": [
          {
            "name": "muted",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsSilenced",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "channel",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "isSilenced",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsVoiceChatAllowed",
        "returns": [
          {
            "name": "isAllowed",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "IsVoiceChatAllowedByServer"
      },
      {
        "name": "IsVoiceChatEnabled",
        "returns": [
          {
            "name": "isEnabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "SetActiveVoiceChannel",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetActiveVoiceChannelBySessionID",
        "arguments": [
          {
            "name": "session",
            "type": "number"
          }
        ]
      },
      {
        "name": "SetSelectedMute",
        "arguments": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "SilenceMember"
      },
      {
        "name": "UnSilenceMember"
      },
      {
        "name": "UnitIsSilenced",
        "arguments": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "channel",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "silenced",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "UnitIsTalking",
        "arguments": [
          {
            "name": "unit",
            "type": "string"
          }
        ],
        "returns": [
          {
            "name": "state",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "VoiceChat_ActivatePrimaryCaptureCallback"
      },
      {
        "name": "VoiceChat_GetCurrentMicrophoneSignalLevel",
        "returns": [
          {
            "name": "volume",
            "type": "number"
          }
        ]
      },
      {
        "name": "VoiceChat_IsPlayingLoopbackSound",
        "arguments": [
          {
            "name": "isPlaying",
            "type": "number"
          }
        ]
      },
      {
        "name": "VoiceChat_IsRecordingLoopbackSound",
        "returns": [
          {
            "name": "isRecording",
            "type": "number"
          }
        ]
      },
      {
        "name": "VoiceChat_PlayLoopbackSound"
      },
      {
        "name": "VoiceChat_RecordLoopbackSound",
        "arguments": [
          {
            "name": "seconds",
            "type": "number"
          }
        ]
      },
      {
        "name": "VoiceChat_StartCapture"
      },
      {
        "name": "VoiceChat_StopCapture"
      },
      {
        "name": "VoiceChat_StopPlayingLoopbackSound"
      },
      {
        "name": "VoiceChat_StopRecordingLoopbackSound"
      },
      {
        "name": "VoiceEnumerateCaptureDevices",
        "arguments": [
          {
            "name": "deviceIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "deviceName",
            "type": "string"
          }
        ]
      },
      {
        "name": "VoiceEnumerateOutputDevices",
        "arguments": [
          {
            "name": "deviceIndex",
            "type": "number"
          }
        ],
        "returns": [
          {
            "name": "device",
            "type": "string"
          }
        ]
      },
      {
        "name": "VoiceGetCurrentCaptureDevice",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "VoiceGetCurrentOutputDevice",
        "returns": [
          {
            "name": "index",
            "type": "number"
          }
        ]
      },
      {
        "name": "VoiceIsDisabledByClient",
        "returns": [
          {
            "name": "isDisabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "VoicePushToTalkStart"
      },
      {
        "name": "VoicePushToTalkStop"
      },
      {
        "name": "VoiceSelectCaptureDevice",
        "arguments": [
          {
            "name": "deviceName",
            "type": "string"
          }
        ]
      },
      {
        "name": "VoiceSelectOutputDevice",
        "arguments": [
          {
            "name": "deviceName",
            "type": "string"
          }
        ]
      }
    ],
    "Zone_information": [
      {
        "name": "GetMinimapZoneText",
        "returns": [
          {
            "name": "zoneText",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetRealZoneText",
        "returns": [
          {
            "name": "zoneName",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetSubZoneText",
        "returns": [
          {
            "name": "subzoneText",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetZonePVPInfo",
        "returns": [
          {
            "name": "pvpType",
            "type": "string"
          },
          {
            "name": "isSubZonePVP",
            "type": "boolean"
          },
          {
            "name": "factionName",
            "type": "string"
          }
        ]
      },
      {
        "name": "GetZoneText",
        "returns": [
          {
            "name": "zone",
            "type": "string"
          }
        ]
      },
      {
        "name": "IsSubZonePVPPOI",
        "returns": [
          {
            "name": "isPVPPOI",
            "type": "boolean"
          }
        ]
      }
    ]
  },
  "Events": [
    {
      "name": "ACHIEVEMENT_EARNED",
      "payload": []
    },
    {
      "name": "ACTIONBAR_HIDEGRID",
      "payload": []
    },
    {
      "name": "ACTIONBAR_PAGE_CHANGED",
      "payload": []
    },
    {
      "name": "ACTIONBAR_SHOWGRID",
      "payload": []
    },
    {
      "name": "ACTIONBAR_SLOT_CHANGED",
      "payload": [
        {
          "name": "slot",
          "type": "number"
        }
      ]
    },
    {
      "name": "ACTIONBAR_UPDATE_COOLDOWN",
      "payload": []
    },
    {
      "name": "ACTIONBAR_UPDATE_STATE",
      "payload": []
    },
    {
      "name": "ACTIONBAR_UPDATE_USABLE",
      "payload": []
    },
    {
      "name": "ACTIVE_TALENT_GROUP_CHANGED",
      "payload": []
    },
    {
      "name": "ADDON_ACTION_BLOCKED",
      "payload": []
    },
    {
      "name": "ADDON_ACTION_FORBIDDEN",
      "payload": [
        {
          "name": "culprit",
          "type": "string"
        }
      ]
    },
    {
      "name": "ADDON_LOADED",
      "payload": [
        {
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "name": "AREA_SPIRIT_HEALER_IN_RANGE",
      "payload": []
    },
    {
      "name": "AREA_SPIRIT_HEALER_OUT_OF_RANGE",
      "payload": []
    },
    {
      "name": "ARENA_OPPONENT_UPDATE",
      "payload": []
    },
    {
      "name": "ARENA_SEASON_WORLD_STATE",
      "payload": []
    },
    {
      "name": "ARENA_TEAM_INVITE_REQUEST",
      "payload": [
        {
          "name": "source",
          "type": "string"
        },
        {
          "name": "team",
          "type": "string"
        }
      ]
    },
    {
      "name": "ARENA_TEAM_ROSTER_UPDATE",
      "payload": [
        {
          "name": "unknown",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "ARENA_TEAM_UPDATE",
      "payload": []
    },
    {
      "name": "AUCTION_BIDDER_LIST_UPDATE",
      "payload": []
    },
    {
      "name": "AUCTION_HOUSE_CLOSED",
      "payload": []
    },
    {
      "name": "AUCTION_HOUSE_DISABLED",
      "payload": []
    },
    {
      "name": "AUCTION_HOUSE_SHOW",
      "payload": []
    },
    {
      "name": "AUCTION_ITEM_LIST_UPDATE",
      "payload": []
    },
    {
      "name": "AUCTION_MULTISELL_FAILURE",
      "payload": []
    },
    {
      "name": "AUCTION_MULTISELL_START",
      "payload": [
        {
          "name": "amount",
          "type": "number"
        }
      ]
    },
    {
      "name": "AUCTION_MULTISELL_UPDATE",
      "payload": [
        {
          "name": "createdAmount",
          "type": "number"
        },
        {
          "name": "amount",
          "type": "number"
        }
      ]
    },
    {
      "name": "AUCTION_OWNED_LIST_UPDATE",
      "payload": []
    },
    {
      "name": "AUTOEQUIP_BIND_CONFIRM",
      "payload": [
        {
          "name": "slot",
          "type": "number"
        }
      ]
    },
    {
      "name": "AUTOFOLLOW_BEGIN",
      "payload": [
        {
          "name": "following",
          "type": "number"
        }
      ]
    },
    {
      "name": "AUTOFOLLOW_END",
      "payload": []
    },
    {
      "name": "BAG_CLOSED",
      "payload": [
        {
          "name": "bagID",
          "type": "number"
        }
      ]
    },
    {
      "name": "BAG_OPEN",
      "payload": [
        {
          "name": "bagID",
          "type": "number"
        }
      ]
    },
    {
      "name": "BAG_UPDATE",
      "payload": [
        {
          "name": "bagID",
          "type": "containerID"
        }
      ]
    },
    {
      "name": "BAG_UPDATE_COOLDOWN",
      "payload": []
    },
    {
      "name": "BANKFRAME_CLOSED",
      "payload": []
    },
    {
      "name": "BANKFRAME_OPENED",
      "payload": []
    },
    {
      "name": "BARBER_SHOP_APPEARANCE_APPLIED",
      "payload": []
    },
    {
      "name": "BARBER_SHOP_CLOSE",
      "payload": []
    },
    {
      "name": "BARBER_SHOP_OPEN",
      "payload": []
    },
    {
      "name": "BARBER_SHOP_SUCCESS",
      "payload": []
    },
    {
      "name": "BATTLEFIELDS_CLOSED",
      "payload": []
    },
    {
      "name": "BATTLEFIELDS_SHOW",
      "payload": []
    },
    {
      "name": "BATTLEFIELD_MGR_EJECTED",
      "payload": []
    },
    {
      "name": "BATTLEFIELD_MGR_EJECT_PENDING",
      "payload": []
    },
    {
      "name": "BATTLEFIELD_MGR_ENTERED",
      "payload": []
    },
    {
      "name": "BATTLEFIELD_MGR_ENTRY_INVITE",
      "payload": []
    },
    {
      "name": "BATTLEFIELD_MGR_QUEUE_INVITE",
      "payload": []
    },
    {
      "name": "BATTLEFIELD_MGR_QUEUE_REQUEST_RESPONSE",
      "payload": []
    },
    {
      "name": "BATTLEFIELD_MGR_STATE_CHANGE",
      "payload": []
    },
    {
      "name": "BILLING_NAG_DIALOG",
      "payload": [
        {
          "name": "remaining",
          "type": "number"
        }
      ]
    },
    {
      "name": "BIND_ENCHANT",
      "payload": []
    },
    {
      "name": "BN_BLOCK_LIST_UPDATED",
      "payload": []
    },
    {
      "name": "BN_CHAT_CHANNEL_CLOSED",
      "payload": []
    },
    {
      "name": "BN_CHAT_CHANNEL_CREATE_FAILED",
      "payload": []
    },
    {
      "name": "BN_CHAT_CHANNEL_CREATE_SUCCEEDED",
      "payload": []
    },
    {
      "name": "BN_CHAT_CHANNEL_INVITE_FAILED",
      "payload": []
    },
    {
      "name": "BN_CHAT_CHANNEL_INVITE_SUCCEEDED",
      "payload": []
    },
    {
      "name": "BN_CHAT_CHANNEL_JOINED",
      "payload": []
    },
    {
      "name": "BN_CHAT_CHANNEL_LEFT",
      "payload": []
    },
    {
      "name": "BN_CHAT_CHANNEL_MEMBER_JOINED",
      "payload": []
    },
    {
      "name": "BN_CHAT_CHANNEL_MEMBER_LEFT",
      "payload": []
    },
    {
      "name": "BN_CHAT_CHANNEL_MEMBER_UPDATED",
      "payload": []
    },
    {
      "name": "BN_CHAT_CHANNEL_MESSAGE_BLOCKED",
      "payload": []
    },
    {
      "name": "BN_CHAT_CHANNEL_MESSAGE_UNDELIVERABLE",
      "payload": []
    },
    {
      "name": "BN_CHAT_WHISPER_UNDELIVERABLE",
      "payload": []
    },
    {
      "name": "BN_CONNECTED",
      "payload": []
    },
    {
      "name": "BN_CUSTOM_MESSAGE_CHANGED",
      "payload": []
    },
    {
      "name": "BN_CUSTOM_MESSAGE_LOADED",
      "payload": []
    },
    {
      "name": "BN_DISCONNECTED",
      "payload": []
    },
    {
      "name": "BN_FRIEND_ACCOUNT_OFFLINE",
      "payload": [
        {
          "name": "presenceID",
          "type": "number"
        }
      ]
    },
    {
      "name": "BN_FRIEND_ACCOUNT_ONLINE",
      "payload": [
        {
          "name": "presenceID",
          "type": "number"
        }
      ]
    },
    {
      "name": "BN_FRIEND_INFO_CHANGED",
      "payload": []
    },
    {
      "name": "BN_FRIEND_INVITE_ADDED",
      "payload": []
    },
    {
      "name": "BN_FRIEND_INVITE_LIST_INITIALIZED",
      "payload": []
    },
    {
      "name": "BN_FRIEND_INVITE_REMOVED",
      "payload": []
    },
    {
      "name": "BN_FRIEND_INVITE_SEND_RESULT",
      "payload": []
    },
    {
      "name": "BN_FRIEND_LIST_SIZE_CHANGED",
      "payload": []
    },
    {
      "name": "BN_FRIEND_TOON_OFFLINE",
      "payload": []
    },
    {
      "name": "BN_FRIEND_TOON_ONLINE",
      "payload": []
    },
    {
      "name": "BN_MATURE_LANGUAGE_FILTER",
      "payload": []
    },
    {
      "name": "BN_NEW_PRESENCE",
      "payload": [
        {
          "name": "index",
          "type": "number"
        },
        {
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "name": "BN_REQUEST_FOF_FAILED",
      "payload": []
    },
    {
      "name": "BN_REQUEST_FOF_SUCCEEDED",
      "payload": []
    },
    {
      "name": "BN_SELF_OFFLINE",
      "payload": []
    },
    {
      "name": "BN_SELF_ONLINE",
      "payload": []
    },
    {
      "name": "BN_SYSTEM_MESSAGE",
      "payload": []
    },
    {
      "name": "BN_TOON_NAME_UPDATED",
      "payload": []
    },
    {
      "name": "CALENDAR_ACTION_PENDING",
      "payload": []
    },
    {
      "name": "CALENDAR_CLOSE_EVENT",
      "payload": []
    },
    {
      "name": "CALENDAR_EVENT_ALARM",
      "payload": []
    },
    {
      "name": "CALENDAR_NEW_EVENT",
      "payload": []
    },
    {
      "name": "CALENDAR_OPEN_EVENT",
      "payload": []
    },
    {
      "name": "CALENDAR_UPDATE_ERROR",
      "payload": []
    },
    {
      "name": "CALENDAR_UPDATE_EVENT",
      "payload": []
    },
    {
      "name": "CALENDAR_UPDATE_EVENT_LIST",
      "payload": []
    },
    {
      "name": "CALENDAR_UPDATE_INVITE_LIST",
      "payload": []
    },
    {
      "name": "CALENDAR_UPDATE_PENDING_INVITES",
      "payload": []
    },
    {
      "name": "CANCEL_LOOT_ROLL",
      "payload": [
        {
          "name": "rollID",
          "type": "number"
        }
      ]
    },
    {
      "name": "CANCEL_SUMMON",
      "payload": []
    },
    {
      "name": "CHANNEL_COUNT_UPDATE",
      "payload": [
        {
          "name": "id",
          "type": "number"
        },
        {
          "name": "count",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHANNEL_FLAGS_UPDATED",
      "payload": [
        {
          "name": "id",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHANNEL_INVITE_REQUEST",
      "payload": [
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "inviterName",
          "type": "string"
        }
      ]
    },
    {
      "name": "CHANNEL_PASSWORD_REQUEST",
      "payload": [
        {
          "name": "channelName",
          "type": "string"
        }
      ]
    },
    {
      "name": "CHANNEL_ROSTER_UPDATE",
      "payload": [
        {
          "name": "id",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHANNEL_UI_UPDATE",
      "payload": []
    },
    {
      "name": "CHANNEL_VOICE_UPDATE",
      "payload": [
        {
          "name": "id",
          "type": "number"
        },
        {
          "name": "enabled",
          "type": "boolean"
        },
        {
          "name": "active",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "CHARACTER_POINTS_CHANGED",
      "payload": [
        {
          "name": "count",
          "type": "number"
        },
        {
          "name": "levels",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_ACHIEVEMENT",
      "payload": []
    },
    {
      "name": "CHAT_MSG_ADDON",
      "payload": [
        {
          "name": "prefix",
          "type": "string"
        },
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "channel",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        }
      ]
    },
    {
      "name": "CHAT_MSG_AFK",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        },
        {
          "name": "senderGUID",
          "type": "string"
        }
      ]
    },
    {
      "name": "CHAT_MSG_BATTLEGROUND",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_BATTLEGROUND_LEADER",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "author",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        }
      ]
    },
    {
      "name": "CHAT_MSG_BG_SYSTEM_ALLIANCE",
      "payload": [
        {
          "name": "message",
          "type": "string"
        }
      ]
    },
    {
      "name": "CHAT_MSG_BG_SYSTEM_HORDE",
      "payload": [
        {
          "name": "message",
          "type": "string"
        }
      ]
    },
    {
      "name": "CHAT_MSG_BG_SYSTEM_NEUTRAL",
      "payload": [
        {
          "name": "message",
          "type": "string"
        }
      ]
    },
    {
      "name": "CHAT_MSG_BN_CONVERSATION",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "presenceID",
          "type": "presenceID"
        },
        {
          "name": "unknown",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "CHAT_MSG_BN_CONVERSATION_LIST",
      "payload": []
    },
    {
      "name": "CHAT_MSG_BN_CONVERSATION_NOTICE",
      "payload": [
        {
          "name": "message/status",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "presenceID",
          "type": "presenceID"
        },
        {
          "name": "unknown",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "CHAT_MSG_BN_INLINE_TOAST_ALERT",
      "payload": []
    },
    {
      "name": "CHAT_MSG_BN_INLINE_TOAST_BROADCAST",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "presenceID",
          "type": "presenceID"
        },
        {
          "name": "unknown",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "CHAT_MSG_BN_INLINE_TOAST_BROADCAST_INFORM",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        },
        {
          "name": "guid",
          "type": "string"
        }
      ]
    },
    {
      "name": "CHAT_MSG_BN_INLINE_TOAST_CONVERSATION",
      "payload": []
    },
    {
      "name": "CHAT_MSG_BN_WHISPER",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "presenceID",
          "type": "presenceID"
        },
        {
          "name": "unknown",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "CHAT_MSG_BN_WHISPER_INFORM",
      "payload": []
    },
    {
      "name": "CHAT_MSG_CHANNEL",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        },
        {
          "name": "guid",
          "type": "string"
        }
      ]
    },
    {
      "name": "CHAT_MSG_CHANNEL_JOIN",
      "payload": [
        {
          "name": "unkown",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "unknown",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_CHANNEL_LEAVE",
      "payload": [
        {
          "name": "unkown",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "unknown",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_CHANNEL_LIST",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_CHANNEL_NOTICE",
      "payload": []
    },
    {
      "name": "CHAT_MSG_CHANNEL_NOTICE_USER",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_COMBAT_FACTION_CHANGE",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_COMBAT_HONOR_GAIN",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_COMBAT_MISC_INFO",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_COMBAT_XP_GAIN",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_DND",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_EMOTE",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_FILTERED",
      "payload": []
    },
    {
      "name": "CHAT_MSG_GUILD",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_GUILD_ACHIEVEMENT",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        }
      ]
    },
    {
      "name": "CHAT_MSG_IGNORED",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_LOOT",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_MONEY",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_MONSTER_EMOTE",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_MONSTER_PARTY",
      "payload": []
    },
    {
      "name": "CHAT_MSG_MONSTER_SAY",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_MONSTER_WHISPER",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_MONSTER_YELL",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_OFFICER",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_OPENING",
      "payload": []
    },
    {
      "name": "CHAT_MSG_PARTY",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_PARTY_LEADER",
      "payload": []
    },
    {
      "name": "CHAT_MSG_PET_INFO",
      "payload": []
    },
    {
      "name": "CHAT_MSG_RAID",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_RAID_BOSS_EMOTE",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_RAID_BOSS_WHISPER",
      "payload": []
    },
    {
      "name": "CHAT_MSG_RAID_LEADER",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_RAID_WARNING",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_RESTRICTED",
      "payload": []
    },
    {
      "name": "CHAT_MSG_SAY",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_SKILL",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_SYSTEM",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_TARGETICONS",
      "payload": []
    },
    {
      "name": "CHAT_MSG_TEXT_EMOTE",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_TRADESKILLS",
      "payload": []
    },
    {
      "name": "CHAT_MSG_WHISPER",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        },
        {
          "name": "guid",
          "type": "guid"
        }
      ]
    },
    {
      "name": "CHAT_MSG_WHISPER_INFORM",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CHAT_MSG_YELL",
      "payload": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "sender",
          "type": "string"
        },
        {
          "name": "language",
          "type": "string"
        },
        {
          "name": "channelString",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "flags",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "channelNumber",
          "type": "number"
        },
        {
          "name": "channelName",
          "type": "string"
        },
        {
          "name": "unknown",
          "type": "number"
        },
        {
          "name": "counter",
          "type": "number"
        }
      ]
    },
    {
      "name": "CINEMATIC_START",
      "payload": []
    },
    {
      "name": "CINEMATIC_STOP",
      "payload": []
    },
    {
      "name": "CLOSE_INBOX_ITEM",
      "payload": [
        {
          "name": "id",
          "type": "number"
        }
      ]
    },
    {
      "name": "CLOSE_TABARD_FRAME",
      "payload": []
    },
    {
      "name": "CLOSE_WORLD_MAP",
      "payload": []
    },
    {
      "name": "COMBAT_LOG_EVENT",
      "payload": []
    },
    {
      "name": "COMBAT_LOG_EVENT_UNFILTERED",
      "payload": []
    },
    {
      "name": "COMBAT_RATING_UPDATE",
      "payload": []
    },
    {
      "name": "COMBAT_TEXT_UPDATE",
      "payload": [
        {
          "name": "type",
          "type": "string"
        },
        {
          "name": "desc1",
          "type": "varies"
        },
        {
          "name": "desc2",
          "type": "varies"
        }
      ]
    },
    {
      "name": "COMMENTATOR_ENTER_WORLD",
      "payload": []
    },
    {
      "name": "COMMENTATOR_MAP_UPDATE",
      "payload": []
    },
    {
      "name": "COMMENTATOR_PLAYER_UPDATE",
      "payload": []
    },
    {
      "name": "COMMENTATOR_SKIRMISH_MODE_REQUEST",
      "payload": []
    },
    {
      "name": "COMMENTATOR_SKIRMISH_QUEUE_REQUEST",
      "payload": []
    },
    {
      "name": "COMPANION_LEARNED",
      "payload": []
    },
    {
      "name": "COMPANION_UNLEARNED",
      "payload": []
    },
    {
      "name": "COMPANION_UPDATE",
      "payload": []
    },
    {
      "name": "CONFIRM_BINDER",
      "payload": [
        {
          "name": "newHome",
          "type": "string"
        }
      ]
    },
    {
      "name": "CONFIRM_DISENCHANT_ROLL",
      "payload": []
    },
    {
      "name": "CONFIRM_LOOT_ROLL",
      "payload": [
        {
          "name": "id",
          "type": "number"
        },
        {
          "name": "rolltype",
          "type": "number"
        }
      ]
    },
    {
      "name": "CONFIRM_SUMMON",
      "payload": []
    },
    {
      "name": "CONFIRM_TALENT_WIPE",
      "payload": [
        {
          "name": "cost",
          "type": "number"
        }
      ]
    },
    {
      "name": "CONFIRM_XP_LOSS",
      "payload": []
    },
    {
      "name": "CORPSE_IN_INSTANCE",
      "payload": []
    },
    {
      "name": "CORPSE_IN_RANGE",
      "payload": []
    },
    {
      "name": "CORPSE_OUT_OF_RANGE",
      "payload": []
    },
    {
      "name": "CRITERIA_UPDATE",
      "payload": []
    },
    {
      "name": "CURRENCY_DISPLAY_UPDATE",
      "payload": []
    },
    {
      "name": "CURRENT_SPELL_CAST_CHANGED",
      "payload": []
    },
    {
      "name": "CURSOR_UPDATE",
      "payload": []
    },
    {
      "name": "CVAR_UPDATE",
      "payload": [
        {
          "name": "glStr",
          "type": "string"
        },
        {
          "name": "value",
          "type": "string"
        }
      ]
    },
    {
      "name": "DELETE_ITEM_CONFIRM",
      "payload": [
        {
          "name": "itemName",
          "type": "string"
        },
        {
          "name": "itemQuality",
          "type": "number"
        }
      ]
    },
    {
      "name": "DISABLE_LOW_LEVEL_RAID",
      "payload": []
    },
    {
      "name": "DISABLE_TAXI_BENCHMARK",
      "payload": []
    },
    {
      "name": "DISABLE_XP_GAIN",
      "payload": []
    },
    {
      "name": "DISPLAY_SIZE_CHANGED",
      "payload": []
    },
    {
      "name": "DUEL_FINISHED",
      "payload": []
    },
    {
      "name": "DUEL_INBOUNDS",
      "payload": []
    },
    {
      "name": "DUEL_OUTOFBOUNDS",
      "payload": []
    },
    {
      "name": "DUEL_REQUESTED",
      "payload": [
        {
          "name": "challenger",
          "type": "string"
        }
      ]
    },
    {
      "name": "ENABLE_LOW_LEVEL_RAID",
      "payload": []
    },
    {
      "name": "ENABLE_TAXI_BENCHMARK",
      "payload": []
    },
    {
      "name": "ENABLE_XP_GAIN",
      "payload": []
    },
    {
      "name": "END_BOUND_TRADEABLE",
      "payload": []
    },
    {
      "name": "END_REFUND",
      "payload": []
    },
    {
      "name": "EQUIPMENT_SETS_CHANGED",
      "payload": []
    },
    {
      "name": "EQUIPMENT_SWAP_FINISHED",
      "payload": []
    },
    {
      "name": "EQUIPMENT_SWAP_PENDING",
      "payload": []
    },
    {
      "name": "EQUIP_BIND_CONFIRM",
      "payload": [
        {
          "name": "slot",
          "type": "number"
        }
      ]
    },
    {
      "name": "EXECUTE_CHAT_LINE",
      "payload": []
    },
    {
      "name": "FRIENDLIST_UPDATE",
      "payload": []
    },
    {
      "name": "GLYPH_ADDED",
      "payload": []
    },
    {
      "name": "GLYPH_DISABLED",
      "payload": []
    },
    {
      "name": "GLYPH_ENABLED",
      "payload": []
    },
    {
      "name": "GLYPH_REMOVED",
      "payload": []
    },
    {
      "name": "GLYPH_UPDATED",
      "payload": []
    },
    {
      "name": "GMRESPONSE_RECEIVED",
      "payload": []
    },
    {
      "name": "GMSURVEY_DISPLAY",
      "payload": []
    },
    {
      "name": "GM_PLAYER_INFO",
      "payload": []
    },
    {
      "name": "GOSSIP_CLOSED",
      "payload": []
    },
    {
      "name": "GOSSIP_CONFIRM",
      "payload": [
        {
          "name": "index",
          "type": "number"
        },
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "cost",
          "type": "number"
        }
      ]
    },
    {
      "name": "GOSSIP_CONFIRM_CANCEL",
      "payload": []
    },
    {
      "name": "GOSSIP_ENTER_CODE",
      "payload": [
        {
          "name": "id",
          "type": "number"
        }
      ]
    },
    {
      "name": "GOSSIP_SHOW",
      "payload": []
    },
    {
      "name": "GUILDBANKBAGSLOTS_CHANGED",
      "payload": []
    },
    {
      "name": "GUILDBANKFRAME_CLOSED",
      "payload": []
    },
    {
      "name": "GUILDBANKFRAME_OPENED",
      "payload": []
    },
    {
      "name": "GUILDBANKLOG_UPDATE",
      "payload": []
    },
    {
      "name": "GUILDBANK_ITEM_LOCK_CHANGED",
      "payload": []
    },
    {
      "name": "GUILDBANK_TEXT_CHANGED",
      "payload": []
    },
    {
      "name": "GUILDBANK_UPDATE_MONEY",
      "payload": []
    },
    {
      "name": "GUILDBANK_UPDATE_TABS",
      "payload": []
    },
    {
      "name": "GUILDBANK_UPDATE_TEXT",
      "payload": []
    },
    {
      "name": "GUILDBANK_UPDATE_WITHDRAWMONEY",
      "payload": []
    },
    {
      "name": "GUILDTABARD_UPDATE",
      "payload": []
    },
    {
      "name": "GUILD_EVENT_LOG_UPDATE",
      "payload": []
    },
    {
      "name": "GUILD_INVITE_CANCEL",
      "payload": []
    },
    {
      "name": "GUILD_INVITE_REQUEST",
      "payload": [
        {
          "name": "from",
          "type": "string"
        },
        {
          "name": "guildname",
          "type": "string"
        }
      ]
    },
    {
      "name": "GUILD_MOTD",
      "payload": [
        {
          "name": "message",
          "type": "string"
        }
      ]
    },
    {
      "name": "GUILD_REGISTRAR_CLOSED",
      "payload": []
    },
    {
      "name": "GUILD_REGISTRAR_SHOW",
      "payload": []
    },
    {
      "name": "GUILD_ROSTER_UPDATE",
      "payload": [
        {
          "name": "update",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "IGNORELIST_UPDATE",
      "payload": []
    },
    {
      "name": "IGR_BILLING_NAG_DIALOG",
      "payload": []
    },
    {
      "name": "INSPECT_ACHIEVEMENT_READY",
      "payload": []
    },
    {
      "name": "INSPECT_HONOR_UPDATE",
      "payload": []
    },
    {
      "name": "INSPECT_TALENT_READY",
      "payload": []
    },
    {
      "name": "INSTANCE_BOOT_START",
      "payload": []
    },
    {
      "name": "INSTANCE_BOOT_STOP",
      "payload": []
    },
    {
      "name": "INSTANCE_ENCOUNTER_ENGAGE_UNIT",
      "payload": []
    },
    {
      "name": "INSTANCE_LOCK_START",
      "payload": []
    },
    {
      "name": "INSTANCE_LOCK_STOP",
      "payload": []
    },
    {
      "name": "ITEM_LOCKED",
      "payload": []
    },
    {
      "name": "ITEM_LOCK_CHANGED",
      "payload": []
    },
    {
      "name": "ITEM_PUSH",
      "payload": [
        {
          "name": "bagID",
          "type": "number"
        },
        {
          "name": "icon",
          "type": "string"
        }
      ]
    },
    {
      "name": "ITEM_TEXT_BEGIN",
      "payload": []
    },
    {
      "name": "ITEM_TEXT_CLOSED",
      "payload": []
    },
    {
      "name": "ITEM_TEXT_READY",
      "payload": []
    },
    {
      "name": "ITEM_TEXT_TRANSLATION",
      "payload": [
        {
          "name": "maxvalue",
          "type": "number"
        }
      ]
    },
    {
      "name": "ITEM_UNLOCKED",
      "payload": []
    },
    {
      "name": "KNOWLEDGE_BASE_ARTICLE_LOAD_FAILURE",
      "payload": []
    },
    {
      "name": "KNOWLEDGE_BASE_ARTICLE_LOAD_SUCCESS",
      "payload": []
    },
    {
      "name": "KNOWLEDGE_BASE_QUERY_LOAD_FAILURE",
      "payload": []
    },
    {
      "name": "KNOWLEDGE_BASE_QUERY_LOAD_SUCCESS",
      "payload": []
    },
    {
      "name": "KNOWLEDGE_BASE_SERVER_MESSAGE",
      "payload": []
    },
    {
      "name": "KNOWLEDGE_BASE_SETUP_LOAD_FAILURE",
      "payload": []
    },
    {
      "name": "KNOWLEDGE_BASE_SETUP_LOAD_SUCCESS",
      "payload": []
    },
    {
      "name": "KNOWLEDGE_BASE_SYSTEM_MOTD_UPDATED",
      "payload": []
    },
    {
      "name": "KNOWN_TITLES_UPDATE",
      "payload": []
    },
    {
      "name": "LANGUAGE_LIST_CHANGED",
      "payload": []
    },
    {
      "name": "LEARNED_SPELL_IN_TAB",
      "payload": [
        {
          "name": "spellID",
          "type": "number"
        },
        {
          "name": "tabID",
          "type": "number"
        }
      ]
    },
    {
      "name": "LEVEL_GRANT_PROPOSED",
      "payload": []
    },
    {
      "name": "LFG_BOOT_PROPOSAL_UPDATE",
      "payload": []
    },
    {
      "name": "LFG_COMPLETION_REWARD",
      "payload": []
    },
    {
      "name": "LFG_LOCK_INFO_RECEIVED",
      "payload": []
    },
    {
      "name": "LFG_OFFER_CONTINUE",
      "payload": []
    },
    {
      "name": "LFG_OPEN_FROM_GOSSIP",
      "payload": []
    },
    {
      "name": "LFG_PROPOSAL_FAILED",
      "payload": []
    },
    {
      "name": "LFG_PROPOSAL_SHOW",
      "payload": []
    },
    {
      "name": "LFG_PROPOSAL_SUCCEEDED",
      "payload": []
    },
    {
      "name": "LFG_PROPOSAL_UPDATE",
      "payload": []
    },
    {
      "name": "LFG_QUEUE_STATUS_UPDATE",
      "payload": []
    },
    {
      "name": "LFG_ROLE_CHECK_HIDE",
      "payload": []
    },
    {
      "name": "LFG_ROLE_CHECK_ROLE_CHOSEN",
      "payload": []
    },
    {
      "name": "LFG_ROLE_CHECK_SHOW",
      "payload": []
    },
    {
      "name": "LFG_ROLE_CHECK_UPDATE",
      "payload": []
    },
    {
      "name": "LFG_ROLE_UPDATE",
      "payload": []
    },
    {
      "name": "LFG_UPDATE",
      "payload": []
    },
    {
      "name": "LFG_UPDATE_RANDOM_INFO",
      "payload": []
    },
    {
      "name": "LOCALPLAYER_PET_RENAMED",
      "payload": []
    },
    {
      "name": "LOGOUT_CANCEL",
      "payload": []
    },
    {
      "name": "LOOT_BIND_CONFIRM",
      "payload": [
        {
          "name": "slotID",
          "type": "number"
        }
      ]
    },
    {
      "name": "LOOT_CLOSED",
      "payload": []
    },
    {
      "name": "LOOT_OPENED",
      "payload": [
        {
          "name": "autoLoot",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "LOOT_SLOT_CHANGED",
      "payload": []
    },
    {
      "name": "LOOT_SLOT_CLEARED",
      "payload": [
        {
          "name": "slotID",
          "type": "number"
        }
      ]
    },
    {
      "name": "MACRO_ACTION_BLOCKED",
      "payload": []
    },
    {
      "name": "MACRO_ACTION_FORBIDDEN",
      "payload": []
    },
    {
      "name": "MAIL_CLOSED",
      "payload": []
    },
    {
      "name": "MAIL_FAILED",
      "payload": []
    },
    {
      "name": "MAIL_INBOX_UPDATE",
      "payload": []
    },
    {
      "name": "MAIL_LOCK_SEND_ITEMS",
      "payload": []
    },
    {
      "name": "MAIL_SEND_INFO_UPDATE",
      "payload": []
    },
    {
      "name": "MAIL_SEND_SUCCESS",
      "payload": []
    },
    {
      "name": "MAIL_SHOW",
      "payload": []
    },
    {
      "name": "MAIL_SUCCESS",
      "payload": []
    },
    {
      "name": "MAIL_UNLOCK_SEND_ITEMS",
      "payload": []
    },
    {
      "name": "MERCHANT_CLOSED",
      "payload": []
    },
    {
      "name": "MERCHANT_SHOW",
      "payload": []
    },
    {
      "name": "MERCHANT_UPDATE",
      "payload": []
    },
    {
      "name": "MINIGAME_UPDATE",
      "payload": []
    },
    {
      "name": "MINIMAP_PING",
      "payload": [
        {
          "name": "unit",
          "type": "string"
        },
        {
          "name": "x",
          "type": "number"
        },
        {
          "name": "y",
          "type": "number"
        }
      ]
    },
    {
      "name": "MINIMAP_UPDATE_TRACKING",
      "payload": []
    },
    {
      "name": "MINIMAP_UPDATE_ZOOM",
      "payload": []
    },
    {
      "name": "MIRROR_TIMER_PAUSE",
      "payload": [
        {
          "name": "duration",
          "type": "number"
        }
      ]
    },
    {
      "name": "MIRROR_TIMER_START",
      "payload": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "value",
          "type": "number"
        },
        {
          "name": "maxvalue",
          "type": "number"
        },
        {
          "name": "step",
          "type": "number"
        },
        {
          "name": "pause",
          "type": "number"
        },
        {
          "name": "label",
          "type": "string"
        }
      ]
    },
    {
      "name": "MIRROR_TIMER_STOP",
      "payload": [
        {
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "name": "MODIFIER_STATE_CHANGED",
      "payload": [
        {
          "name": "key",
          "type": "string"
        },
        {
          "name": "state",
          "type": "number"
        }
      ]
    },
    {
      "name": "MOVIE_COMPRESSING_PROGRESS",
      "payload": []
    },
    {
      "name": "MOVIE_RECORDING_PROGRESS",
      "payload": []
    },
    {
      "name": "MOVIE_UNCOMPRESSED_MOVIE",
      "payload": [
        {
          "name": "filename",
          "type": "string"
        }
      ]
    },
    {
      "name": "MUTELIST_UPDATE",
      "payload": []
    },
    {
      "name": "NEW_AUCTION_UPDATE",
      "payload": []
    },
    {
      "name": "NEW_TITLE_EARNED",
      "payload": [
        {
          "name": "title",
          "type": "string"
        }
      ]
    },
    {
      "name": "NPC_PVPQUEUE_ANYWHERE",
      "payload": []
    },
    {
      "name": "OLD_TITLE_LOST",
      "payload": [
        {
          "name": "title",
          "type": "string"
        }
      ]
    },
    {
      "name": "OPEN_MASTER_LOOT_LIST",
      "payload": []
    },
    {
      "name": "OPEN_TABARD_FRAME",
      "payload": []
    },
    {
      "name": "PARTY_CONVERTED_TO_RAID",
      "payload": []
    },
    {
      "name": "PARTY_INVITE_CANCEL",
      "payload": []
    },
    {
      "name": "PARTY_INVITE_REQUEST",
      "payload": [
        {
          "name": "sender",
          "type": "string"
        }
      ]
    },
    {
      "name": "PARTY_LEADER_CHANGED",
      "payload": []
    },
    {
      "name": "PARTY_LFG_RESTRICTED",
      "payload": []
    },
    {
      "name": "PARTY_LOOT_METHOD_CHANGED",
      "payload": []
    },
    {
      "name": "PARTY_MEMBERS_CHANGED",
      "payload": []
    },
    {
      "name": "PARTY_MEMBER_DISABLE",
      "payload": [
        {
          "name": "id",
          "type": "number"
        }
      ]
    },
    {
      "name": "PARTY_MEMBER_ENABLE",
      "payload": [
        {
          "name": "id",
          "type": "number"
        }
      ]
    },
    {
      "name": "PETITION_CLOSED",
      "payload": []
    },
    {
      "name": "PETITION_SHOW",
      "payload": []
    },
    {
      "name": "PETITION_VENDOR_CLOSED",
      "payload": []
    },
    {
      "name": "PETITION_VENDOR_SHOW",
      "payload": []
    },
    {
      "name": "PETITION_VENDOR_UPDATE",
      "payload": []
    },
    {
      "name": "PET_ATTACK_START",
      "payload": []
    },
    {
      "name": "PET_ATTACK_STOP",
      "payload": []
    },
    {
      "name": "PET_BAR_HIDE",
      "payload": []
    },
    {
      "name": "PET_BAR_HIDEGRID",
      "payload": []
    },
    {
      "name": "PET_BAR_SHOWGRID",
      "payload": []
    },
    {
      "name": "PET_BAR_UPDATE",
      "payload": []
    },
    {
      "name": "PET_BAR_UPDATE_COOLDOWN",
      "payload": []
    },
    {
      "name": "PET_BAR_UPDATE_USABLE",
      "payload": []
    },
    {
      "name": "PET_DISMISS_START",
      "payload": []
    },
    {
      "name": "PET_FORCE_NAME_DECLENSION",
      "payload": []
    },
    {
      "name": "PET_RENAMEABLE",
      "payload": []
    },
    {
      "name": "PET_SPELL_POWER_UPDATE",
      "payload": []
    },
    {
      "name": "PET_STABLE_CLOSED",
      "payload": []
    },
    {
      "name": "PET_STABLE_SHOW",
      "payload": []
    },
    {
      "name": "PET_STABLE_UPDATE",
      "payload": []
    },
    {
      "name": "PET_STABLE_UPDATE_PAPERDOLL",
      "payload": []
    },
    {
      "name": "PET_TALENT_UPDATE",
      "payload": []
    },
    {
      "name": "PET_UI_CLOSE",
      "payload": []
    },
    {
      "name": "PET_UI_UPDATE",
      "payload": []
    },
    {
      "name": "PLAYERBANKBAGSLOTS_CHANGED",
      "payload": []
    },
    {
      "name": "PLAYERBANKSLOTS_CHANGED",
      "payload": [
        {
          "name": "slotID",
          "type": "number"
        }
      ]
    },
    {
      "name": "PLAYER_ALIVE",
      "payload": []
    },
    {
      "name": "PLAYER_AURAS_CHANGED",
      "payload": []
    },
    {
      "name": "PLAYER_CAMPING",
      "payload": []
    },
    {
      "name": "PLAYER_CONTROL_GAINED",
      "payload": []
    },
    {
      "name": "PLAYER_CONTROL_LOST",
      "payload": []
    },
    {
      "name": "PLAYER_DAMAGE_DONE_MODS",
      "payload": [
        {
          "name": "unit",
          "type": "string"
        }
      ]
    },
    {
      "name": "PLAYER_DEAD",
      "payload": []
    },
    {
      "name": "PLAYER_DIFFICULTY_CHANGED",
      "payload": []
    },
    {
      "name": "PLAYER_ENTERING_BATTLEGROUND",
      "payload": []
    },
    {
      "name": "PLAYER_ENTERING_WORLD",
      "payload": []
    },
    {
      "name": "PLAYER_ENTER_COMBAT",
      "payload": []
    },
    {
      "name": "PLAYER_EQUIPMENT_CHANGED",
      "payload": [
        {
          "name": "slot",
          "type": "inventoryID"
        },
        {
          "name": "hasItem",
          "type": "1nil"
        }
      ]
    },
    {
      "name": "PLAYER_FARSIGHT_FOCUS_CHANGED",
      "payload": []
    },
    {
      "name": "PLAYER_FLAGS_CHANGED",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "PLAYER_FOCUS_CHANGED",
      "payload": []
    },
    {
      "name": "PLAYER_GAINS_VEHICLE_DATA",
      "payload": []
    },
    {
      "name": "PLAYER_GUILD_UPDATE",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "PLAYER_LEAVE_COMBAT",
      "payload": []
    },
    {
      "name": "PLAYER_LEAVING_WORLD",
      "payload": []
    },
    {
      "name": "PLAYER_LEVEL_UP",
      "payload": [
        {
          "name": "level",
          "type": "string"
        },
        {
          "name": "hp",
          "type": "number"
        },
        {
          "name": "mp",
          "type": "number"
        },
        {
          "name": "talentPoints",
          "type": "number"
        },
        {
          "name": "strength",
          "type": "number"
        },
        {
          "name": "agility",
          "type": "number"
        },
        {
          "name": "stamina",
          "type": "number"
        },
        {
          "name": "intellect",
          "type": "number"
        },
        {
          "name": "spirit",
          "type": "number"
        }
      ]
    },
    {
      "name": "PLAYER_LOGIN",
      "payload": []
    },
    {
      "name": "PLAYER_LOGOUT",
      "payload": []
    },
    {
      "name": "PLAYER_LOSES_VEHICLE_DATA",
      "payload": []
    },
    {
      "name": "PLAYER_MONEY",
      "payload": []
    },
    {
      "name": "PLAYER_PVP_KILLS_CHANGED",
      "payload": []
    },
    {
      "name": "PLAYER_PVP_RANK_CHANGED",
      "payload": []
    },
    {
      "name": "PLAYER_QUITING",
      "payload": []
    },
    {
      "name": "PLAYER_REGEN_DISABLED",
      "payload": []
    },
    {
      "name": "PLAYER_REGEN_ENABLED",
      "payload": []
    },
    {
      "name": "PLAYER_ROLES_ASSIGNED",
      "payload": []
    },
    {
      "name": "PLAYER_SKINNED",
      "payload": []
    },
    {
      "name": "PLAYER_TALENT_UPDATE",
      "payload": []
    },
    {
      "name": "PLAYER_TARGET_CHANGED",
      "payload": []
    },
    {
      "name": "PLAYER_TOTEM_UPDATE",
      "payload": []
    },
    {
      "name": "PLAYER_TRADE_MONEY",
      "payload": []
    },
    {
      "name": "PLAYER_UNGHOST",
      "payload": []
    },
    {
      "name": "PLAYER_UPDATE_RESTING",
      "payload": []
    },
    {
      "name": "PLAYER_XP_UPDATE",
      "payload": []
    },
    {
      "name": "PLAYTIME_CHANGED",
      "payload": []
    },
    {
      "name": "PLAY_MOVIE",
      "payload": []
    },
    {
      "name": "PREVIEW_PET_TALENT_POINTS_CHANGED",
      "payload": []
    },
    {
      "name": "PREVIEW_TALENT_POINTS_CHANGED",
      "payload": []
    },
    {
      "name": "PVPQUEUE_ANYWHERE_SHOW",
      "payload": []
    },
    {
      "name": "PVPQUEUE_ANYWHERE_UPDATE_AVAILABLE",
      "payload": []
    },
    {
      "name": "QUEST_ACCEPTED",
      "payload": [
        {
          "name": "questIndex",
          "type": "number"
        }
      ]
    },
    {
      "name": "QUEST_ACCEPT_CONFIRM",
      "payload": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "quest",
          "type": "string"
        }
      ]
    },
    {
      "name": "QUEST_COMPLETE",
      "payload": []
    },
    {
      "name": "QUEST_DETAIL",
      "payload": []
    },
    {
      "name": "QUEST_FINISHED",
      "payload": []
    },
    {
      "name": "QUEST_GREETING",
      "payload": []
    },
    {
      "name": "QUEST_ITEM_UPDATE",
      "payload": []
    },
    {
      "name": "QUEST_LOG_UPDATE",
      "payload": []
    },
    {
      "name": "QUEST_POI_UPDATE",
      "payload": []
    },
    {
      "name": "QUEST_PROGRESS",
      "payload": []
    },
    {
      "name": "QUEST_QUERY_COMPLETE",
      "payload": []
    },
    {
      "name": "QUEST_WATCH_UPDATE",
      "payload": [
        {
          "name": "questIndex",
          "type": "number"
        }
      ]
    },
    {
      "name": "RAID_INSTANCE_WELCOME",
      "payload": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "ttl",
          "type": "number"
        }
      ]
    },
    {
      "name": "RAID_ROSTER_UPDATE",
      "payload": []
    },
    {
      "name": "RAID_TARGET_UPDATE",
      "payload": []
    },
    {
      "name": "RAISED_AS_GHOUL",
      "payload": []
    },
    {
      "name": "READY_CHECK",
      "payload": [
        {
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "name": "READY_CHECK_CONFIRM",
      "payload": [
        {
          "name": "id",
          "type": "number"
        },
        {
          "name": "response",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "READY_CHECK_FINISHED",
      "payload": []
    },
    {
      "name": "RECEIVED_ACHIEVEMENT_LIST",
      "payload": []
    },
    {
      "name": "REPLACE_ENCHANT",
      "payload": [
        {
          "name": "current",
          "type": "string"
        },
        {
          "name": "new",
          "type": "string"
        }
      ]
    },
    {
      "name": "RESURRECT_REQUEST",
      "payload": [
        {
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "name": "RUNE_POWER_UPDATE",
      "payload": [
        {
          "name": "runeIndex",
          "type": "string"
        },
        {
          "name": "isEnergize",
          "type": "string"
        }
      ]
    },
    {
      "name": "RUNE_TYPE_UPDATE",
      "payload": [
        {
          "name": "runeIndex",
          "type": "number"
        }
      ]
    },
    {
      "name": "SCREENSHOT_FAILED",
      "payload": []
    },
    {
      "name": "SCREENSHOT_SUCCEEDED",
      "payload": []
    },
    {
      "name": "SEND_MAIL_COD_CHANGED",
      "payload": []
    },
    {
      "name": "SEND_MAIL_MONEY_CHANGED",
      "payload": []
    },
    {
      "name": "SKILL_LINES_CHANGED",
      "payload": []
    },
    {
      "name": "SOCKET_INFO_CLOSE",
      "payload": []
    },
    {
      "name": "SOCKET_INFO_UPDATE",
      "payload": []
    },
    {
      "name": "SOUND_DEVICE_UPDATE",
      "payload": []
    },
    {
      "name": "SPELLS_CHANGED",
      "payload": []
    },
    {
      "name": "SPELL_UPDATE_COOLDOWN",
      "payload": []
    },
    {
      "name": "SPELL_UPDATE_USABLE",
      "payload": []
    },
    {
      "name": "START_AUTOREPEAT_SPELL",
      "payload": []
    },
    {
      "name": "START_LOOT_ROLL",
      "payload": [
        {
          "name": "id",
          "type": "number"
        },
        {
          "name": "time",
          "type": "number"
        }
      ]
    },
    {
      "name": "START_MINIGAME",
      "payload": []
    },
    {
      "name": "STOP_AUTOREPEAT_SPELL",
      "payload": []
    },
    {
      "name": "SYNCHRONIZE_SETTINGS",
      "payload": []
    },
    {
      "name": "TABARD_CANSAVE_CHANGED",
      "payload": []
    },
    {
      "name": "TABARD_SAVE_PENDING",
      "payload": []
    },
    {
      "name": "TALENTS_INVOLUNTARILY_RESET",
      "payload": []
    },
    {
      "name": "TAXIMAP_CLOSED",
      "payload": []
    },
    {
      "name": "TAXIMAP_OPENED",
      "payload": []
    },
    {
      "name": "TIME_PLAYED_MSG",
      "payload": [
        {
          "name": "total",
          "type": "number"
        },
        {
          "name": "level",
          "type": "number"
        }
      ]
    },
    {
      "name": "TRACKED_ACHIEVEMENT_UPDATE",
      "payload": [
        {
          "name": "achievementId",
          "type": "number"
        }
      ]
    },
    {
      "name": "TRADE_ACCEPT_UPDATE",
      "payload": [
        {
          "name": "player",
          "type": "number"
        },
        {
          "name": "target",
          "type": "number"
        }
      ]
    },
    {
      "name": "TRADE_CLOSED",
      "payload": []
    },
    {
      "name": "TRADE_MONEY_CHANGED",
      "payload": []
    },
    {
      "name": "TRADE_PLAYER_ITEM_CHANGED",
      "payload": [
        {
          "name": "slotID",
          "type": "number"
        }
      ]
    },
    {
      "name": "TRADE_POTENTIAL_BIND_ENCHANT",
      "payload": []
    },
    {
      "name": "TRADE_REPLACE_ENCHANT",
      "payload": [
        {
          "name": "current",
          "type": "string"
        },
        {
          "name": "new",
          "type": "string"
        }
      ]
    },
    {
      "name": "TRADE_REQUEST",
      "payload": []
    },
    {
      "name": "TRADE_REQUEST_CANCEL",
      "payload": []
    },
    {
      "name": "TRADE_SHOW",
      "payload": []
    },
    {
      "name": "TRADE_SKILL_CLOSE",
      "payload": []
    },
    {
      "name": "TRADE_SKILL_FILTER_UPDATE",
      "payload": []
    },
    {
      "name": "TRADE_SKILL_SHOW",
      "payload": []
    },
    {
      "name": "TRADE_SKILL_UPDATE",
      "payload": []
    },
    {
      "name": "TRADE_TARGET_ITEM_CHANGED",
      "payload": [
        {
          "name": "slotID",
          "type": "number"
        }
      ]
    },
    {
      "name": "TRADE_UPDATE",
      "payload": []
    },
    {
      "name": "TRAINER_CLOSED",
      "payload": []
    },
    {
      "name": "TRAINER_DESCRIPTION_UPDATE",
      "payload": []
    },
    {
      "name": "TRAINER_SHOW",
      "payload": []
    },
    {
      "name": "TRAINER_UPDATE",
      "payload": []
    },
    {
      "name": "TUTORIAL_TRIGGER",
      "payload": [
        {
          "name": "id",
          "type": "number"
        }
      ]
    },
    {
      "name": "UI_ERROR_MESSAGE",
      "payload": [
        {
          "name": "message",
          "type": "string"
        }
      ]
    },
    {
      "name": "UI_INFO_MESSAGE",
      "payload": [
        {
          "name": "message",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_ATTACK",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_ATTACK_POWER",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_ATTACK_SPEED",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_AURA",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_CLASSIFICATION_CHANGED",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_COMBAT",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        },
        {
          "name": "action",
          "type": "string"
        },
        {
          "name": "descriptor",
          "type": "string"
        },
        {
          "name": "damage",
          "type": "number"
        },
        {
          "name": "damageType",
          "type": "number"
        }
      ]
    },
    {
      "name": "UNIT_COMBO_POINTS",
      "payload": []
    },
    {
      "name": "UNIT_DAMAGE",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_DEFENSE",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_DISPLAYPOWER",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_DYNAMIC_FLAGS",
      "payload": []
    },
    {
      "name": "UNIT_ENTERED_VEHICLE",
      "payload": []
    },
    {
      "name": "UNIT_ENTERING_VEHICLE",
      "payload": []
    },
    {
      "name": "UNIT_EXITING_VEHICLE",
      "payload": []
    },
    {
      "name": "UNIT_FACTION",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_FLAGS",
      "payload": [
        {
          "name": "unit",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_HEALTH",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_INVENTORY_CHANGED",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_LEVEL",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_MANA",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_MAXHEALTH",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_MODEL_CHANGED",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_NAME_UPDATE",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_PET",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_PET_EXPERIENCE",
      "payload": []
    },
    {
      "name": "UNIT_PORTRAIT_UPDATE",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_QUEST_LOG_CHANGED",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_RAGE",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_RANGEDDAMAGE",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_RANGED_ATTACK_POWER",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_RESISTANCES",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_CHANNEL_START",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        },
        {
          "name": "spell",
          "type": "string"
        },
        {
          "name": "rank",
          "type": "string"
        },
        {
          "name": "lineID",
          "type": "number"
        },
        {
          "name": "spellID",
          "type": "spellID"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_CHANNEL_STOP",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        },
        {
          "name": "spell",
          "type": "string"
        },
        {
          "name": "rank",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_CHANNEL_UPDATE",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        },
        {
          "name": "spell",
          "type": "string"
        },
        {
          "name": "rank",
          "type": "string"
        },
        {
          "name": "lineID",
          "type": "number"
        },
        {
          "name": "spellID",
          "type": "spellID"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_DELAYED",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        },
        {
          "name": "spell",
          "type": "string"
        },
        {
          "name": "rank",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_FAILED",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        },
        {
          "name": "spell",
          "type": "string"
        },
        {
          "name": "rank",
          "type": "string"
        },
        {
          "name": "unknownid",
          "type": "number"
        },
        {
          "name": "spellid",
          "type": "blizzid"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_FAILED_QUIET",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        },
        {
          "name": "spell",
          "type": "string"
        },
        {
          "name": "rank",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_INTERRUPTED",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        },
        {
          "name": "spell",
          "type": "string"
        },
        {
          "name": "rank",
          "type": "string"
        },
        {
          "name": "lineID",
          "type": "number"
        },
        {
          "name": "spellID",
          "type": "spellID"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_INTERRUPTIBLE",
      "payload": [
        {
          "name": "unitID",
          "type": "unitID"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_NOT_INTERRUPTIBLE",
      "payload": [
        {
          "name": "unitID",
          "type": "unitID"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_SENT",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        },
        {
          "name": "spell",
          "type": "string"
        },
        {
          "name": "rank",
          "type": "string"
        },
        {
          "name": "target",
          "type": "string"
        },
        {
          "name": "lineID",
          "type": "number"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_START",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        },
        {
          "name": "spell",
          "type": "string"
        },
        {
          "name": "rank",
          "type": "string"
        },
        {
          "name": "lineID",
          "type": "number"
        },
        {
          "name": "spellID",
          "type": "spellID"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_STOP",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        },
        {
          "name": "spell",
          "type": "string"
        },
        {
          "name": "rank",
          "type": "string"
        },
        {
          "name": "lineID",
          "type": "number"
        },
        {
          "name": "spellID",
          "type": "spellID"
        }
      ]
    },
    {
      "name": "UNIT_SPELLCAST_SUCCEEDED",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        },
        {
          "name": "spell",
          "type": "string"
        },
        {
          "name": "rank",
          "type": "string"
        },
        {
          "name": "?",
          "type": "number"
        },
        {
          "name": "spellID",
          "type": "number"
        }
      ]
    },
    {
      "name": "UNIT_STATS",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_TARGET",
      "payload": [
        {
          "name": "unitID",
          "type": "string"
        }
      ]
    },
    {
      "name": "UNIT_THREAT_LIST_UPDATE",
      "payload": []
    },
    {
      "name": "UNIT_THREAT_SITUATION_UPDATE",
      "payload": []
    },
    {
      "name": "UPDATE_BATTLEFIELD_SCORE",
      "payload": []
    },
    {
      "name": "UPDATE_BATTLEFIELD_STATUS",
      "payload": []
    },
    {
      "name": "UPDATE_BINDINGS",
      "payload": []
    },
    {
      "name": "UPDATE_BONUS_ACTIONBAR",
      "payload": []
    },
    {
      "name": "UPDATE_CHAT_COLOR",
      "payload": [
        {
          "name": "type",
          "type": "string"
        },
        {
          "name": "red",
          "type": "number"
        },
        {
          "name": "green",
          "type": "number"
        },
        {
          "name": "blue",
          "type": "number"
        }
      ]
    },
    {
      "name": "UPDATE_CHAT_COLOR_NAME_BY_CLASS",
      "payload": []
    },
    {
      "name": "UPDATE_CHAT_WINDOWS",
      "payload": []
    },
    {
      "name": "UPDATE_EXHAUSTION",
      "payload": []
    },
    {
      "name": "UPDATE_FACTION",
      "payload": []
    },
    {
      "name": "UPDATE_FLOATING_CHAT_WINDOWS",
      "payload": []
    },
    {
      "name": "UPDATE_GM_STATUS",
      "payload": [
        {
          "name": "avilable",
          "type": "number"
        }
      ]
    },
    {
      "name": "UPDATE_INSTANCE_INFO",
      "payload": []
    },
    {
      "name": "UPDATE_INVENTORY_ALERTS",
      "payload": []
    },
    {
      "name": "UPDATE_INVENTORY_DURABILITY",
      "payload": []
    },
    {
      "name": "UPDATE_LFG_LIST",
      "payload": []
    },
    {
      "name": "UPDATE_LFG_LIST_INCREMENTAL",
      "payload": []
    },
    {
      "name": "UPDATE_LFG_TYPES",
      "payload": []
    },
    {
      "name": "UPDATE_MACROS",
      "payload": []
    },
    {
      "name": "UPDATE_MASTER_LOOT_LIST",
      "payload": []
    },
    {
      "name": "UPDATE_MOUSEOVER_UNIT",
      "payload": []
    },
    {
      "name": "UPDATE_MULTI_CAST_ACTIONBAR",
      "payload": []
    },
    {
      "name": "UPDATE_PENDING_MAIL",
      "payload": []
    },
    {
      "name": "UPDATE_SHAPESHIFT_COOLDOWN",
      "payload": []
    },
    {
      "name": "UPDATE_SHAPESHIFT_FORM",
      "payload": []
    },
    {
      "name": "UPDATE_SHAPESHIFT_FORMS",
      "payload": []
    },
    {
      "name": "UPDATE_SHAPESHIFT_USABLE",
      "payload": []
    },
    {
      "name": "UPDATE_STEALTH",
      "payload": []
    },
    {
      "name": "UPDATE_TICKET",
      "payload": []
    },
    {
      "name": "UPDATE_TRADESKILL_RECAST",
      "payload": []
    },
    {
      "name": "UPDATE_WORLD_STATES",
      "payload": []
    },
    {
      "name": "USE_BIND_CONFIRM",
      "payload": []
    },
    {
      "name": "USE_GLYPH",
      "payload": []
    },
    {
      "name": "VARIABLES_LOADED",
      "payload": []
    },
    {
      "name": "VEHICLE_ANGLE_SHOW",
      "payload": []
    },
    {
      "name": "VEHICLE_ANGLE_UPDATE",
      "payload": []
    },
    {
      "name": "VEHICLE_PASSENGERS_CHANGED",
      "payload": []
    },
    {
      "name": "VEHICLE_POWER_SHOW",
      "payload": []
    },
    {
      "name": "VEHICLE_UPDATE",
      "payload": []
    },
    {
      "name": "VOICE_CHANNEL_STATUS_UPDATE",
      "payload": []
    },
    {
      "name": "VOICE_CHAT_ENABLED_UPDATE",
      "payload": []
    },
    {
      "name": "VOICE_LEFT_SESSION",
      "payload": []
    },
    {
      "name": "VOICE_PLATE_START",
      "payload": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "unit",
          "type": "string"
        }
      ]
    },
    {
      "name": "VOICE_PLATE_STOP",
      "payload": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "unit",
          "type": "string"
        }
      ]
    },
    {
      "name": "VOICE_PUSH_TO_TALK_START",
      "payload": []
    },
    {
      "name": "VOICE_PUSH_TO_TALK_STOP",
      "payload": []
    },
    {
      "name": "VOICE_SELF_MUTE",
      "payload": []
    },
    {
      "name": "VOICE_SESSIONS_UPDATE",
      "payload": []
    },
    {
      "name": "VOICE_START",
      "payload": [
        {
          "name": "unit",
          "type": "string"
        }
      ]
    },
    {
      "name": "VOICE_STATUS_UPDATE",
      "payload": []
    },
    {
      "name": "VOICE_STOP",
      "payload": [
        {
          "name": "unit",
          "type": "string"
        }
      ]
    },
    {
      "name": "VOTE_KICK_REASON_NEEDED",
      "payload": []
    },
    {
      "name": "WEAR_EQUIPMENT_SET",
      "payload": []
    },
    {
      "name": "WHO_LIST_UPDATE",
      "payload": []
    },
    {
      "name": "WORLD_MAP_NAME_UPDATE",
      "payload": []
    },
    {
      "name": "WORLD_MAP_UPDATE",
      "payload": []
    },
    {
      "name": "WORLD_STATE_UI_TIMER_UPDATE",
      "payload": []
    },
    {
      "name": "WOW_MOUSE_NOT_FOUND",
      "payload": []
    },
    {
      "name": "ZONE_CHANGED",
      "payload": []
    },
    {
      "name": "ZONE_CHANGED_INDOORS",
      "payload": []
    },
    {
      "name": "ZONE_CHANGED_NEW_AREA",
      "payload": []
    }
  ]
}